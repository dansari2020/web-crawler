---
http_interactions:
- request:
    method: get
    uri: http://magento-test.finology.com.my/breathe-easy-tank.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - magento-test.finology.com.my
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.15.5 (Ubuntu)
      Date:
      - Wed, 08 May 2019 12:40:25 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - PHPSESSID=lr3bpfpan9p2l8j1bpctlhcjfl; expires=Wed, 08-May-2019 13:40:24 GMT;
        Max-Age=3600; path=/; domain=magento-test.finology.com.my; HttpOnly
      Pragma:
      - no-cache
      Cache-Control:
      - max-age=0, must-revalidate, no-cache, no-store
      Expires:
      - Tue, 08 May 2018 12:40:24 GMT
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFkb2N0eXBlIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KICAgIDxoZWFkIHByZWZpeD0ib2c6IGh0dHA6Ly9vZ3AubWUvbnMjIGZiOiBodHRwOi8vb2dwLm1lL25zL2ZiIyBwcm9kdWN0OiBodHRwOi8vb2dwLm1lL25zL3Byb2R1Y3QjIj4KICAgICAgICA8c2NyaXB0PgogICAgdmFyIEJBU0VfVVJMID0gJ2h0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15Lyc7CiAgICB2YXIgcmVxdWlyZSA9IHsKICAgICAgICAiYmFzZVVybCI6ICJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9wdWIvc3RhdGljL3ZlcnNpb24xNTU1NDg4NjMwL2Zyb250ZW5kL01hZ2VudG8vbHVtYS9lbl9VUyIKICAgIH07Cjwvc2NyaXB0PgogICAgICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ii8+CjxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJUaGUgQnJlYXRoZSBFYXN5IFRhbmsgaXMgc28gc29mdCwgbGlnaHR3ZWlnaHQsIGFuZCBjb21mb3J0YWJsZSwgeW91IHdvbid0IGV2ZW4ga25vdyBpdCdzIHRoZXJlIC0tIHVudGlsIGl0cyBoaWdoLXRlY2ggQ29jb25hJmFtcDtyZWc7IGZhYnJpYyBzdGFydHMgd2lja2luZyBzd2VhdCBhd2F5IGZyb20geW91ciBib2R5IHRvIGhlbHAgeW91IHN0YXkgZHJ5IGFuZCBmb2N1c2VkLiBMYXllciBpdCBvdmVyIHlvdXIgZmF2b3JpdGUgc3BvcnRzIGJyYSBhbmQgIi8+CjxtZXRhIG5hbWU9InJvYm90cyIgY29udGVudD0iSU5ERVgsRk9MTE9XIi8+CjxtZXRhIG5hbWU9InRpdGxlIiBjb250ZW50PSJCcmVhdGhlLUVhc3kgVGFuayIvPgo8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEsIG1heGltdW0tc2NhbGU9MS4wLCB1c2VyLXNjYWxhYmxlPW5vIi8+CjxtZXRhIG5hbWU9ImZvcm1hdC1kZXRlY3Rpb24iIGNvbnRlbnQ9InRlbGVwaG9uZT1ubyIvPgo8dGl0bGU+QnJlYXRoZS1FYXN5IFRhbms8L3RpdGxlPgo8bGluayAgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgIG1lZGlhPSJhbGwiIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L3B1Yi9zdGF0aWMvdmVyc2lvbjE1NTU0ODg2MzAvZnJvbnRlbmQvTWFnZW50by9sdW1hL2VuX1VTL21hZ2UvY2FsZW5kYXIuY3NzIiAvPgo8bGluayAgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgIG1lZGlhPSJhbGwiIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L3B1Yi9zdGF0aWMvdmVyc2lvbjE1NTU0ODg2MzAvZnJvbnRlbmQvTWFnZW50by9sdW1hL2VuX1VTL2Nzcy9zdHlsZXMtbS5jc3MiIC8+CjxsaW5rICByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiAgbWVkaWE9ImFsbCIgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvcHViL3N0YXRpYy92ZXJzaW9uMTU1NTQ4ODYzMC9mcm9udGVuZC9NYWdlbnRvL2x1bWEvZW5fVVMvbWFnZS9nYWxsZXJ5L2dhbGxlcnkuY3NzIiAvPgo8bGluayAgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgIG1lZGlhPSJzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSIgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvcHViL3N0YXRpYy92ZXJzaW9uMTU1NTQ4ODYzMC9mcm9udGVuZC9NYWdlbnRvL2x1bWEvZW5fVVMvY3NzL3N0eWxlcy1sLmNzcyIgLz4KPGxpbmsgIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiICBtZWRpYT0icHJpbnQiIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L3B1Yi9zdGF0aWMvdmVyc2lvbjE1NTU0ODg2MzAvZnJvbnRlbmQvTWFnZW50by9sdW1hL2VuX1VTL2Nzcy9wcmludC5jc3MiIC8+CjxsaW5rICByZWw9Imljb24iIHR5cGU9ImltYWdlL3gtaWNvbiIgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvcHViL3N0YXRpYy92ZXJzaW9uMTU1NTQ4ODYzMC9mcm9udGVuZC9NYWdlbnRvL2x1bWEvZW5fVVMvTWFnZW50b19UaGVtZS9mYXZpY29uLmljbyIgLz4KPGxpbmsgIHJlbD0ic2hvcnRjdXQgaWNvbiIgdHlwZT0iaW1hZ2UveC1pY29uIiBocmVmPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9wdWIvc3RhdGljL3ZlcnNpb24xNTU1NDg4NjMwL2Zyb250ZW5kL01hZ2VudG8vbHVtYS9lbl9VUy9NYWdlbnRvX1RoZW1lL2Zhdmljb24uaWNvIiAvPgo8c2NyaXB0ICB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiICBzcmM9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L3B1Yi9zdGF0aWMvdmVyc2lvbjE1NTU0ODg2MzAvZnJvbnRlbmQvTWFnZW50by9sdW1hL2VuX1VTL3JlcXVpcmVqcy9yZXF1aXJlLmpzIj48L3NjcmlwdD4KPHNjcmlwdCAgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiAgc3JjPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9wdWIvc3RhdGljL3ZlcnNpb24xNTU1NDg4NjMwL2Zyb250ZW5kL01hZ2VudG8vbHVtYS9lbl9VUy9tYWdlL3JlcXVpcmVqcy9taXhpbnMuanMiPjwvc2NyaXB0Pgo8c2NyaXB0ICB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiICBzcmM9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L3B1Yi9zdGF0aWMvdmVyc2lvbjE1NTU0ODg2MzAvZnJvbnRlbmQvTWFnZW50by9sdW1hL2VuX1VTL3JlcXVpcmVqcy1jb25maWcuanMiPjwvc2NyaXB0Pgo8c2NyaXB0ICB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiICBzcmM9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L3B1Yi9zdGF0aWMvdmVyc2lvbjE1NTU0ODg2MzAvZnJvbnRlbmQvTWFnZW50by9sdW1hL2VuX1VTL21hZ2UvcG9seWZpbGwuanMiPjwvc2NyaXB0Pgo8bGluayAgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgIG1lZGlhPSJhbGwiIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L3B1Yi9tZWRpYS9zdHlsZXMuY3NzIiAvPiAgICAgICAgCjxtZXRhIHByb3BlcnR5PSJvZzp0eXBlIiBjb250ZW50PSJwcm9kdWN0IiAvPgo8bWV0YSBwcm9wZXJ0eT0ib2c6dGl0bGUiIGNvbnRlbnQ9IkJyZWF0aGUtRWFzeSYjeDIwO1RhbmsiIC8+CjxtZXRhIHByb3BlcnR5PSJvZzppbWFnZSIgY29udGVudD0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvcHViL21lZGlhL2NhdGFsb2cvcHJvZHVjdC9jYWNoZS82NTE3YzYyZjU4OTlhZDZhYTBiYTIzY2ViM2VlZmY5Ny93L3Qvd3QwOS13aGl0ZV9tYWluXzEuanBnIiAvPgo8bWV0YSBwcm9wZXJ0eT0ib2c6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IiIgLz4KPG1ldGEgcHJvcGVydHk9Im9nOnVybCIgY29udGVudD0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvYnJlYXRoZS1lYXN5LXRhbmsuaHRtbCIgLz4KICAgIDxtZXRhIHByb3BlcnR5PSJwcm9kdWN0OnByaWNlOmFtb3VudCIgY29udGVudD0iMzQiLz4KICAgIDxtZXRhIHByb3BlcnR5PSJwcm9kdWN0OnByaWNlOmN1cnJlbmN5IiBjb250ZW50PSJVU0QiLz4KICAgIDwvaGVhZD4KICAgIDxib2R5IGRhdGEtY29udGFpbmVyPSJib2R5IiBkYXRhLW1hZ2UtaW5pdD0neyJsb2FkZXJBamF4Ijoge30sICJsb2FkZXIiOiB7ICJpY29uIjogImh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L3B1Yi9zdGF0aWMvdmVyc2lvbjE1NTU0ODg2MzAvZnJvbnRlbmQvTWFnZW50by9sdW1hL2VuX1VTL2ltYWdlcy9sb2FkZXItMi5naWYifX0nIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9Qcm9kdWN0IiBpdGVtc2NvcGU9Iml0ZW1zY29wZSIgY2xhc3M9InBhZ2UtcHJvZHVjdC1jb25maWd1cmFibGUgY2F0YWxvZy1wcm9kdWN0LXZpZXcgcHJvZHVjdC1icmVhdGhlLWVhc3ktdGFuayBwYWdlLWxheW91dC0xY29sdW1uIj4KICAgICAgICAKPHNjcmlwdD4KICAgIHJlcXVpcmUuY29uZmlnKHsKICAgICAgICBtYXA6IHsKICAgICAgICAgICAgJyonOiB7CiAgICAgICAgICAgICAgICB3eXNpd3lnQWRhcHRlcjogJ21hZ2UvYWRtaW5odG1sL3d5c2l3eWcvdGlueV9tY2UvdGlueW1jZTRBZGFwdGVyJwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSk7Cjwvc2NyaXB0PgogICAgPHNjcmlwdD4KICAgICAgICByZXF1aXJlLmNvbmZpZyh7CiAgICAgICAgICAgIGRlcHM6IFsKICAgICAgICAgICAgICAgICdqcXVlcnknLAogICAgICAgICAgICAgICAgJ21hZ2UvdHJhbnNsYXRlJywKICAgICAgICAgICAgICAgICdqcXVlcnkvanF1ZXJ5LXN0b3JhZ2VhcGknCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAoJCkgewogICAgICAgICAgICAgICAgJ3VzZSBzdHJpY3QnOwoKICAgICAgICAgICAgICAgIHZhciBkZXBlbmRlbmNpZXMgPSBbXSwKICAgICAgICAgICAgICAgICAgICB2ZXJzaW9uT2JqOwoKICAgICAgICAgICAgICAgICQuaW5pdE5hbWVzcGFjZVN0b3JhZ2UoJ21hZ2UtdHJhbnNsYXRpb24tc3RvcmFnZScpOwogICAgICAgICAgICAgICAgJC5pbml0TmFtZXNwYWNlU3RvcmFnZSgnbWFnZS10cmFuc2xhdGlvbi1maWxlLXZlcnNpb24nKTsKICAgICAgICAgICAgICAgIHZlcnNpb25PYmogPSAkLmxvY2FsU3RvcmFnZS5nZXQoJ21hZ2UtdHJhbnNsYXRpb24tZmlsZS12ZXJzaW9uJyk7CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBpZiAodmVyc2lvbk9iai52ZXJzaW9uICE9PSAnMjEwZjI0YmZlYjliMzU5NDgwZWU2NjAzZjJlY2JiZGU1NjNhYWQ3MycpIHsKICAgICAgICAgICAgICAgICAgICBkZXBlbmRlbmNpZXMucHVzaCgKICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQhanMtdHJhbnNsYXRpb24uanNvbicKICAgICAgICAgICAgICAgICAgICApOwoKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXF1aXJlLmNvbmZpZyh7CiAgICAgICAgICAgICAgICAgICAgZGVwczogZGVwZW5kZW5jaWVzLAogICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAoc3RyaW5nKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygc3RyaW5nID09PSAnc3RyaW5nJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJC5tYWdlLnRyYW5zbGF0ZS5hZGQoSlNPTi5wYXJzZShzdHJpbmcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICQubG9jYWxTdG9yYWdlLnNldCgnbWFnZS10cmFuc2xhdGlvbi1zdG9yYWdlJywgc3RyaW5nKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICQubG9jYWxTdG9yYWdlLnNldCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbWFnZS10cmFuc2xhdGlvbi1maWxlLXZlcnNpb24nLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmVyc2lvbjogJzIxMGYyNGJmZWI5YjM1OTQ4MGVlNjYwM2YyZWNiYmRlNTYzYWFkNzMnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICQubWFnZS50cmFuc2xhdGUuYWRkKCQubG9jYWxTdG9yYWdlLmdldCgnbWFnZS10cmFuc2xhdGlvbi1zdG9yYWdlJykpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgIDwvc2NyaXB0PgoKPHNjcmlwdCB0eXBlPSJ0ZXh0L3gtbWFnZW50by1pbml0Ij4KICAgIHsKICAgICAgICAiKiI6IHsKICAgICAgICAgICAgIm1hZ2UvY29va2llcyI6IHsKICAgICAgICAgICAgICAgICJleHBpcmVzIjogbnVsbCwKICAgICAgICAgICAgICAgICJwYXRoIjogIi8iLAogICAgICAgICAgICAgICAgImRvbWFpbiI6ICIubWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teSIsCiAgICAgICAgICAgICAgICAic2VjdXJlIjogZmFsc2UsCiAgICAgICAgICAgICAgICAibGlmZXRpbWUiOiAiMzYwMCIKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KPC9zY3JpcHQ+CiAgICA8bm9zY3JpcHQ+CiAgICAgICAgPGRpdiBjbGFzcz0ibWVzc2FnZSBnbG9iYWwgbm9zY3JpcHQiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250ZW50Ij4KICAgICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+SmF2YVNjcmlwdCBzZWVtcyB0byBiZSBkaXNhYmxlZCBpbiB5b3VyIGJyb3dzZXIuPC9zdHJvbmc+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4+Rm9yIHRoZSBiZXN0IGV4cGVyaWVuY2Ugb24gb3VyIHNpdGUsIGJlIHN1cmUgdG8gdHVybiBvbiBKYXZhc2NyaXB0IGluIHlvdXIgYnJvd3Nlci48L3NwYW4+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9ub3NjcmlwdD4KPGRpdiBjbGFzcz0icGFnZS13cmFwcGVyIj48aGVhZGVyIGNsYXNzPSJwYWdlLWhlYWRlciI+PGRpdiBjbGFzcz0icGFuZWwgd3JhcHBlciI+PGRpdiBjbGFzcz0icGFuZWwgaGVhZGVyIj48YSBjbGFzcz0iYWN0aW9uIHNraXAgY29udGVudGFyZWEiIGhyZWY9IiNjb250ZW50YXJlYSI+PHNwYW4+U2tpcCB0byBDb250ZW50PC9zcGFuPjwvYT4KPHVsIGNsYXNzPSJoZWFkZXIgbGlua3MiPiAgICAgICAgPGxpIGNsYXNzPSJncmVldCB3ZWxjb21lIiBkYXRhLWJpbmQ9InNjb3BlOiAnY3VzdG9tZXInIj4KICAgICAgICAgICAgPCEtLSBrbyBpZjogY3VzdG9tZXIoKS5mdWxsbmFtZSAgLS0+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJsb2dnZWQtaW4iIGRhdGEtYmluZD0idGV4dDogbmV3IFN0cmluZygnV2VsY29tZSwgJTEhJykucmVwbGFjZSgnJTEnLCBjdXN0b21lcigpLmZ1bGxuYW1lKSI+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPCEtLSAva28gLS0+CiAgICAgICAgICAgIDwhLS0ga28gaWZub3Q6IGN1c3RvbWVyKCkuZnVsbG5hbWUgIC0tPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0ibm90LWxvZ2dlZC1pbiIgZGF0YS1iaW5kPSdodG1sOiJEZWZhdWx0IHdlbGNvbWUgbXNnISInPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSAva28gLS0+CiAgICAgICAgPC9saT4KICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQveC1tYWdlbnRvLWluaXQiPgogICAgICAgIHsKICAgICAgICAgICAgIioiOiB7CiAgICAgICAgICAgICAgICAiTWFnZW50b19VaS9qcy9jb3JlL2FwcCI6IHsKICAgICAgICAgICAgICAgICAgICAiY29tcG9uZW50cyI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgImN1c3RvbWVyIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgImNvbXBvbmVudCI6ICJNYWdlbnRvX0N1c3RvbWVyL2pzL3ZpZXcvY3VzdG9tZXIiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgPC9zY3JpcHQ+CiAgICA8bGkgY2xhc3M9ImF1dGhvcml6YXRpb24tbGluayIgZGF0YS1sYWJlbD0ib3IiPgogICAgPGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvY3VzdG9tZXIvYWNjb3VudC9sb2dpbi9yZWZlcmVyL2FIUjBjRG92TDIxaFoyVnVkRzh0ZEdWemRDNW1hVzV2Ykc5bmVTNWpiMjB1YlhrdlluSmxZWFJvWlMxbFlYTjVMWFJoYm1zdWFIUnRiQSUyQyUyQy8iPgogICAgICAgIFNpZ24gSW4gICAgPC9hPgo8L2xpPgo8bGk+PGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvY3VzdG9tZXIvYWNjb3VudC9jcmVhdGUvIiA+Q3JlYXRlIGFuIEFjY291bnQ8L2E+PC9saT48L3VsPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9ImhlYWRlciBjb250ZW50Ij48c3BhbiBkYXRhLWFjdGlvbj0idG9nZ2xlLW5hdiIgY2xhc3M9ImFjdGlvbiBuYXYtdG9nZ2xlIj48c3Bhbj5Ub2dnbGUgTmF2PC9zcGFuPjwvc3Bhbj4KPGEgY2xhc3M9ImxvZ28iIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15LyIgdGl0bGU9IiI+CiAgICA8aW1nIHNyYz0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvcHViL3N0YXRpYy92ZXJzaW9uMTU1NTQ4ODYzMC9mcm9udGVuZC9NYWdlbnRvL2x1bWEvZW5fVVMvaW1hZ2VzL2xvZ28uc3ZnIgogICAgICAgICB0aXRsZT0iIgogICAgICAgICBhbHQ9IiIKICAgICAgICAgd2lkdGg9IjE0OCIgICAgICAgICBoZWlnaHQ9IjQzIiAgICAvPgo8L2E+Cgo8ZGl2IGRhdGEtYmxvY2s9Im1pbmljYXJ0IiBjbGFzcz0ibWluaWNhcnQtd3JhcHBlciI+CiAgICA8YSBjbGFzcz0iYWN0aW9uIHNob3djYXJ0IiBocmVmPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9jaGVja291dC9jYXJ0LyIKICAgICAgIGRhdGEtYmluZD0ic2NvcGU6ICdtaW5pY2FydF9jb250ZW50JyI+CiAgICAgICAgPHNwYW4gY2xhc3M9InRleHQiPk15IENhcnQ8L3NwYW4+CiAgICAgICAgPHNwYW4gY2xhc3M9ImNvdW50ZXIgcXR5IGVtcHR5IgogICAgICAgICAgICAgIGRhdGEtYmluZD0iY3NzOiB7IGVtcHR5OiAhIWdldENhcnRQYXJhbSgnc3VtbWFyeV9jb3VudCcpID09IGZhbHNlIH0sIGJsb2NrTG9hZGVyOiBpc0xvYWRpbmciPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iY291bnRlci1udW1iZXIiPjwhLS0ga28gdGV4dDogZ2V0Q2FydFBhcmFtKCdzdW1tYXJ5X2NvdW50JykgLS0+PCEtLSAva28gLS0+PC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iY291bnRlci1sYWJlbCI+CiAgICAgICAgICAgIDwhLS0ga28gaWY6IGdldENhcnRQYXJhbSgnc3VtbWFyeV9jb3VudCcpIC0tPgogICAgICAgICAgICAgICAgPCEtLSBrbyB0ZXh0OiBnZXRDYXJ0UGFyYW0oJ3N1bW1hcnlfY291bnQnKSAtLT48IS0tIC9rbyAtLT4KICAgICAgICAgICAgICAgIDwhLS0ga28gaTE4bjogJ2l0ZW1zJyAtLT48IS0tIC9rbyAtLT4KICAgICAgICAgICAgPCEtLSAva28gLS0+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L3NwYW4+CiAgICA8L2E+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJsb2NrIGJsb2NrLW1pbmljYXJ0IgogICAgICAgICAgICAgZGF0YS1yb2xlPSJkcm9wZG93bkRpYWxvZyIKICAgICAgICAgICAgIGRhdGEtbWFnZS1pbml0PSd7ImRyb3Bkb3duRGlhbG9nIjp7CiAgICAgICAgICAgICAgICAiYXBwZW5kVG8iOiJbZGF0YS1ibG9jaz1taW5pY2FydF0iLAogICAgICAgICAgICAgICAgInRyaWdnZXJUYXJnZXQiOiIuc2hvd2NhcnQiLAogICAgICAgICAgICAgICAgInRpbWVvdXQiOiAiMjAwMCIsCiAgICAgICAgICAgICAgICAiY2xvc2VPbk1vdXNlTGVhdmUiOiBmYWxzZSwKICAgICAgICAgICAgICAgICJjbG9zZU9uRXNjYXBlIjogdHJ1ZSwKICAgICAgICAgICAgICAgICJ0cmlnZ2VyQ2xhc3MiOiJhY3RpdmUiLAogICAgICAgICAgICAgICAgInBhcmVudENsYXNzIjoiYWN0aXZlIiwKICAgICAgICAgICAgICAgICJidXR0b25zIjpbXX19Jz4KICAgICAgICAgICAgPGRpdiBpZD0ibWluaWNhcnQtY29udGVudC13cmFwcGVyIiBkYXRhLWJpbmQ9InNjb3BlOiAnbWluaWNhcnRfY29udGVudCciPgogICAgICAgICAgICAgICAgPCEtLSBrbyB0ZW1wbGF0ZTogZ2V0VGVtcGxhdGUoKSAtLT48IS0tIC9rbyAtLT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPHNjcmlwdD4KICAgICAgICB3aW5kb3cuY2hlY2tvdXQgPSB7InNob3BwaW5nQ2FydFVybCI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL2NoZWNrb3V0XC9jYXJ0XC8iLCJjaGVja291dFVybCI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL2NoZWNrb3V0XC8iLCJ1cGRhdGVJdGVtUXR5VXJsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvY2hlY2tvdXRcL3NpZGViYXJcL3VwZGF0ZUl0ZW1RdHlcLyIsInJlbW92ZUl0ZW1VcmwiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9jaGVja291dFwvc2lkZWJhclwvcmVtb3ZlSXRlbVwvIiwiaW1hZ2VUZW1wbGF0ZSI6Ik1hZ2VudG9fQ2F0YWxvZ1wvcHJvZHVjdFwvaW1hZ2Vfd2l0aF9ib3JkZXJzIiwiYmFzZVVybCI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcLyIsIm1pbmljYXJ0TWF4SXRlbXNWaXNpYmxlIjo1LCJ3ZWJzaXRlSWQiOiIxIiwibWF4SXRlbXNUb0Rpc3BsYXkiOjEwLCJzdG9yZUlkIjoiMSIsImN1c3RvbWVyTG9naW5VcmwiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9jdXN0b21lclwvYWNjb3VudFwvbG9naW5cL3JlZmVyZXJcL2FIUjBjRG92TDIxaFoyVnVkRzh0ZEdWemRDNW1hVzV2Ykc5bmVTNWpiMjB1YlhrdlluSmxZWFJvWlMxbFlYTjVMWFJoYm1zdWFIUnRiQSUyQyUyQ1wvIiwiaXNSZWRpcmVjdFJlcXVpcmVkIjpmYWxzZSwiYXV0b2NvbXBsZXRlIjoib2ZmIiwiY2FwdGNoYSI6eyJ1c2VyX2xvZ2luIjp7ImlzQ2FzZVNlbnNpdGl2ZSI6ZmFsc2UsImltYWdlSGVpZ2h0Ijo1MCwiaW1hZ2VTcmMiOiIiLCJyZWZyZXNoVXJsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvY2FwdGNoYVwvcmVmcmVzaFwvIiwiaXNSZXF1aXJlZCI6ZmFsc2UsInRpbWVzdGFtcCI6MTU1NzMxOTIyNX19fTsKICAgIDwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L3gtbWFnZW50by1pbml0Ij4KICAgIHsKICAgICAgICAiW2RhdGEtYmxvY2s9J21pbmljYXJ0J10iOiB7CiAgICAgICAgICAgICJNYWdlbnRvX1VpL2pzL2NvcmUvYXBwIjogeyJjb21wb25lbnRzIjp7Im1pbmljYXJ0X2NvbnRlbnQiOnsiY2hpbGRyZW4iOnsic3VidG90YWwuY29udGFpbmVyIjp7ImNoaWxkcmVuIjp7InN1YnRvdGFsIjp7ImNoaWxkcmVuIjp7InN1YnRvdGFsLnRvdGFscyI6eyJjb25maWciOnsiZGlzcGxheV9jYXJ0X3N1YnRvdGFsX2luY2xfdGF4IjowLCJkaXNwbGF5X2NhcnRfc3VidG90YWxfZXhjbF90YXgiOjEsInRlbXBsYXRlIjoiTWFnZW50b19UYXhcL2NoZWNrb3V0XC9taW5pY2FydFwvc3VidG90YWxcL3RvdGFscyJ9LCJjaGlsZHJlbiI6eyJzdWJ0b3RhbC50b3RhbHMubXNycCI6eyJjb21wb25lbnQiOiJNYWdlbnRvX01zcnBcL2pzXC92aWV3XC9jaGVja291dFwvbWluaWNhcnRcL3N1YnRvdGFsXC90b3RhbHMiLCJjb25maWciOnsiZGlzcGxheUFyZWEiOiJtaW5pY2FydC1zdWJ0b3RhbC1oaWRkZW4iLCJ0ZW1wbGF0ZSI6Ik1hZ2VudG9fTXNycFwvY2hlY2tvdXRcL21pbmljYXJ0XC9zdWJ0b3RhbFwvdG90YWxzIn19fSwiY29tcG9uZW50IjoiTWFnZW50b19UYXhcL2pzXC92aWV3XC9jaGVja291dFwvbWluaWNhcnRcL3N1YnRvdGFsXC90b3RhbHMifX0sImNvbXBvbmVudCI6InVpQ29tcG9uZW50IiwiY29uZmlnIjp7InRlbXBsYXRlIjoiTWFnZW50b19DaGVja291dFwvbWluaWNhcnRcL3N1YnRvdGFsIn19fSwiY29tcG9uZW50IjoidWlDb21wb25lbnQiLCJjb25maWciOnsiZGlzcGxheUFyZWEiOiJzdWJ0b3RhbENvbnRhaW5lciJ9fSwiaXRlbS5yZW5kZXJlciI6eyJjb21wb25lbnQiOiJ1aUNvbXBvbmVudCIsImNvbmZpZyI6eyJkaXNwbGF5QXJlYSI6ImRlZmF1bHRSZW5kZXJlciIsInRlbXBsYXRlIjoiTWFnZW50b19DaGVja291dFwvbWluaWNhcnRcL2l0ZW1cL2RlZmF1bHQifSwiY2hpbGRyZW4iOnsiaXRlbS5pbWFnZSI6eyJjb21wb25lbnQiOiJNYWdlbnRvX0NhdGFsb2dcL2pzXC92aWV3XC9pbWFnZSIsImNvbmZpZyI6eyJ0ZW1wbGF0ZSI6Ik1hZ2VudG9fQ2F0YWxvZ1wvcHJvZHVjdFwvaW1hZ2UiLCJkaXNwbGF5QXJlYSI6Iml0ZW1JbWFnZSJ9fSwiY2hlY2tvdXQuY2FydC5pdGVtLnByaWNlLnNpZGViYXIiOnsiY29tcG9uZW50IjoidWlDb21wb25lbnQiLCJjb25maWciOnsidGVtcGxhdGUiOiJNYWdlbnRvX0NoZWNrb3V0XC9taW5pY2FydFwvaXRlbVwvcHJpY2UiLCJkaXNwbGF5QXJlYSI6InByaWNlU2lkZWJhciJ9fX19LCJleHRyYV9pbmZvIjp7ImNvbXBvbmVudCI6InVpQ29tcG9uZW50IiwiY29uZmlnIjp7ImRpc3BsYXlBcmVhIjoiZXh0cmFJbmZvIn19LCJwcm9tb3Rpb24iOnsiY29tcG9uZW50IjoidWlDb21wb25lbnQiLCJjb25maWciOnsiZGlzcGxheUFyZWEiOiJwcm9tb3Rpb24ifX19LCJjb25maWciOnsiaXRlbVJlbmRlcmVyIjp7ImRlZmF1bHQiOiJkZWZhdWx0UmVuZGVyZXIiLCJzaW1wbGUiOiJkZWZhdWx0UmVuZGVyZXIiLCJ2aXJ0dWFsIjoiZGVmYXVsdFJlbmRlcmVyIn0sInRlbXBsYXRlIjoiTWFnZW50b19DaGVja291dFwvbWluaWNhcnRcL2NvbnRlbnQifSwiY29tcG9uZW50IjoiTWFnZW50b19DaGVja291dFwvanNcL3ZpZXdcL21pbmljYXJ0In19LCJ0eXBlcyI6W119ICAgICAgICB9LAogICAgICAgICIqIjogewogICAgICAgICAgICAiTWFnZW50b19VaS9qcy9ibG9jay1sb2FkZXIiOiAiaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvcHViL3N0YXRpYy92ZXJzaW9uMTU1NTQ4ODYzMC9mcm9udGVuZC9NYWdlbnRvL2x1bWEvZW5fVVMvaW1hZ2VzL2xvYWRlci0xLmdpZiIKICAgICAgICB9CiAgICB9CiAgICA8L3NjcmlwdD4KPC9kaXY+CgoKPGRpdiBjbGFzcz0iYmxvY2sgYmxvY2stc2VhcmNoIj4KICAgIDxkaXYgY2xhc3M9ImJsb2NrIGJsb2NrLXRpdGxlIj48c3Ryb25nPlNlYXJjaDwvc3Ryb25nPjwvZGl2PgogICAgPGRpdiBjbGFzcz0iYmxvY2sgYmxvY2stY29udGVudCI+CiAgICAgICAgPGZvcm0gY2xhc3M9ImZvcm0gbWluaXNlYXJjaCIgaWQ9InNlYXJjaF9taW5pX2Zvcm0iIGFjdGlvbj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvY2F0YWxvZ3NlYXJjaC9yZXN1bHQvIiBtZXRob2Q9ImdldCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIHNlYXJjaCI+CiAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImxhYmVsIiBmb3I9InNlYXJjaCIgZGF0YS1yb2xlPSJtaW5pc2VhcmNoLWxhYmVsIj4KICAgICAgICAgICAgICAgICAgICA8c3Bhbj5TZWFyY2g8L3NwYW4+CiAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udHJvbCI+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPSJzZWFyY2giCiAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtbWFnZS1pbml0PSd7InF1aWNrU2VhcmNoIjp7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImZvcm1TZWxlY3RvciI6IiNzZWFyY2hfbWluaV9mb3JtIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidXJsIjoiaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvc2VhcmNoL2FqYXgvc3VnZ2VzdC8iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkZXN0aW5hdGlvblNlbGVjdG9yIjoiI3NlYXJjaF9hdXRvY29tcGxldGUifQogICAgICAgICAgICAgICAgICAgICAgICAgICB9JwogICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJxIgogICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT0iIgogICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iU2VhcmNoIGVudGlyZSBzdG9yZSBoZXJlLi4uIgogICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW5wdXQtdGV4dCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4bGVuZ3RoPSIxMjgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvbGU9ImNvbWJvYm94IgogICAgICAgICAgICAgICAgICAgICAgICAgICBhcmlhLWhhc3BvcHVwPSJmYWxzZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJpYS1hdXRvY29tcGxldGU9ImJvdGgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9jb21wbGV0ZT0ib2ZmIi8+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ic2VhcmNoX2F1dG9jb21wbGV0ZSIgY2xhc3M9InNlYXJjaC1hdXRvY29tcGxldGUiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5lc3RlZCI+CiAgICA8YSBjbGFzcz0iYWN0aW9uIGFkdmFuY2VkIiBocmVmPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9jYXRhbG9nc2VhcmNoL2FkdmFuY2VkLyIgZGF0YS1hY3Rpb249ImFkdmFuY2VkLXNlYXJjaCI+CiAgICAgICAgQWR2YW5jZWQgU2VhcmNoICAgIDwvYT4KPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFjdGlvbnMiPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSJTZWFyY2giCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJhY3Rpb24gc2VhcmNoIj4KICAgICAgICAgICAgICAgICAgICA8c3Bhbj5TZWFyY2g8L3NwYW4+CiAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9mb3JtPgogICAgPC9kaXY+CjwvZGl2Pgo8dWwgY2xhc3M9ImNvbXBhcmUgd3JhcHBlciI+PGxpIGNsYXNzPSJpdGVtIGxpbmsgY29tcGFyZSIgZGF0YS1iaW5kPSJzY29wZTogJ2NvbXBhcmVQcm9kdWN0cyciIGRhdGEtcm9sZT0iY29tcGFyZS1wcm9kdWN0cy1saW5rIj4KICAgIDxhIGNsYXNzPSJhY3Rpb24gY29tcGFyZSBuby1kaXNwbGF5IiB0aXRsZT0iQ29tcGFyZSBQcm9kdWN0cyIKICAgICAgIGRhdGEtYmluZD0iYXR0cjogeydocmVmJzogY29tcGFyZVByb2R1Y3RzKCkubGlzdFVybH0sIGNzczogeyduby1kaXNwbGF5JzogIWNvbXBhcmVQcm9kdWN0cygpLmNvdW50fSIKICAgID4KICAgICAgICBDb21wYXJlIFByb2R1Y3RzICAgICAgICA8c3BhbiBjbGFzcz0iY291bnRlciBxdHkiIGRhdGEtYmluZD0idGV4dDogY29tcGFyZVByb2R1Y3RzKCkuY291bnRDYXB0aW9uIj48L3NwYW4+CiAgICA8L2E+CjwvbGk+CjxzY3JpcHQgdHlwZT0idGV4dC94LW1hZ2VudG8taW5pdCI+CnsiW2RhdGEtcm9sZT1jb21wYXJlLXByb2R1Y3RzLWxpbmtdIjogeyJNYWdlbnRvX1VpL2pzL2NvcmUvYXBwIjogeyJjb21wb25lbnRzIjp7ImNvbXBhcmVQcm9kdWN0cyI6eyJjb21wb25lbnQiOiJNYWdlbnRvX0NhdGFsb2dcL2pzXC92aWV3XC9jb21wYXJlLXByb2R1Y3RzIn19fX19Cjwvc2NyaXB0Pgo8L3VsPjwvZGl2PjwvaGVhZGVyPiAgICA8ZGl2IGNsYXNzPSJzZWN0aW9ucyBuYXYtc2VjdGlvbnMiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbi1pdGVtcyBuYXYtc2VjdGlvbnMtaXRlbXMiIGRhdGEtbWFnZS1pbml0PSd7InRhYnMiOnsib3BlbmVkU3RhdGUiOiJhY3RpdmUifX0nPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24taXRlbS10aXRsZSBuYXYtc2VjdGlvbnMtaXRlbS10aXRsZSIgZGF0YS1yb2xlPSJjb2xsYXBzaWJsZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5hdi1zZWN0aW9ucy1pdGVtLXN3aXRjaCIgZGF0YS10b2dnbGU9InN3aXRjaCIgaHJlZj0iI3N0b3JlLm1lbnUiPk1lbnU8L2E+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24taXRlbS1jb250ZW50IG5hdi1zZWN0aW9ucy1pdGVtLWNvbnRlbnQiIGlkPSJzdG9yZS5tZW51IiBkYXRhLXJvbGU9ImNvbnRlbnQiPgo8bmF2IGNsYXNzPSJuYXZpZ2F0aW9uIiBkYXRhLWFjdGlvbj0ibmF2aWdhdGlvbiI+CiAgICA8dWwgZGF0YS1tYWdlLWluaXQ9J3sibWVudSI6eyJyZXNwb25zaXZlIjp0cnVlLCAiZXhwYW5kZWQiOnRydWUsICJwb3NpdGlvbiI6eyJteSI6ImxlZnQgdG9wIiwiYXQiOiJsZWZ0IGJvdHRvbSJ9fX0nPgogICAgICAgIDxsaSAgY2xhc3M9ImxldmVsMCBuYXYtMSBjYXRlZ29yeS1pdGVtIGZpcnN0IGxldmVsLXRvcCI+PGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvd2hhdC1pcy1uZXcuaHRtbCIgIGNsYXNzPSJsZXZlbC10b3AiID48c3Bhbj5XaGF0JiMwMzk7cyBOZXc8L3NwYW4+PC9hPjwvbGk+PGxpICBjbGFzcz0ibGV2ZWwwIG5hdi0yIGNhdGVnb3J5LWl0ZW0gbGV2ZWwtdG9wIHBhcmVudCI+PGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvd29tZW4uaHRtbCIgIGNsYXNzPSJsZXZlbC10b3AiID48c3Bhbj5Xb21lbjwvc3Bhbj48L2E+PHVsIGNsYXNzPSJsZXZlbDAgc3VibWVudSI+PGxpICBjbGFzcz0ibGV2ZWwxIG5hdi0yLTEgY2F0ZWdvcnktaXRlbSBmaXJzdCBwYXJlbnQiPjxhIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L3dvbWVuL3RvcHMtd29tZW4uaHRtbCIgPjxzcGFuPlRvcHM8L3NwYW4+PC9hPjx1bCBjbGFzcz0ibGV2ZWwxIHN1Ym1lbnUiPjxsaSAgY2xhc3M9ImxldmVsMiBuYXYtMi0xLTEgY2F0ZWdvcnktaXRlbSBmaXJzdCI+PGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvd29tZW4vdG9wcy13b21lbi9qYWNrZXRzLXdvbWVuLmh0bWwiID48c3Bhbj5KYWNrZXRzPC9zcGFuPjwvYT48L2xpPjxsaSAgY2xhc3M9ImxldmVsMiBuYXYtMi0xLTIgY2F0ZWdvcnktaXRlbSI+PGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvd29tZW4vdG9wcy13b21lbi9ob29kaWVzLWFuZC1zd2VhdHNoaXJ0cy13b21lbi5odG1sIiA+PHNwYW4+SG9vZGllcyAmYW1wOyBTd2VhdHNoaXJ0czwvc3Bhbj48L2E+PC9saT48bGkgIGNsYXNzPSJsZXZlbDIgbmF2LTItMS0zIGNhdGVnb3J5LWl0ZW0iPjxhIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L3dvbWVuL3RvcHMtd29tZW4vdGVlcy13b21lbi5odG1sIiA+PHNwYW4+VGVlczwvc3Bhbj48L2E+PC9saT48bGkgIGNsYXNzPSJsZXZlbDIgbmF2LTItMS00IGNhdGVnb3J5LWl0ZW0gbGFzdCI+PGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvd29tZW4vdG9wcy13b21lbi90YW5rcy13b21lbi5odG1sIiA+PHNwYW4+QnJhcyAmYW1wOyBUYW5rczwvc3Bhbj48L2E+PC9saT48L3VsPjwvbGk+PGxpICBjbGFzcz0ibGV2ZWwxIG5hdi0yLTIgY2F0ZWdvcnktaXRlbSBsYXN0IHBhcmVudCI+PGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvd29tZW4vYm90dG9tcy13b21lbi5odG1sIiA+PHNwYW4+Qm90dG9tczwvc3Bhbj48L2E+PHVsIGNsYXNzPSJsZXZlbDEgc3VibWVudSI+PGxpICBjbGFzcz0ibGV2ZWwyIG5hdi0yLTItMSBjYXRlZ29yeS1pdGVtIGZpcnN0Ij48YSBocmVmPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS93b21lbi9ib3R0b21zLXdvbWVuL3BhbnRzLXdvbWVuLmh0bWwiID48c3Bhbj5QYW50czwvc3Bhbj48L2E+PC9saT48bGkgIGNsYXNzPSJsZXZlbDIgbmF2LTItMi0yIGNhdGVnb3J5LWl0ZW0gbGFzdCI+PGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvd29tZW4vYm90dG9tcy13b21lbi9zaG9ydHMtd29tZW4uaHRtbCIgPjxzcGFuPlNob3J0czwvc3Bhbj48L2E+PC9saT48L3VsPjwvbGk+PC91bD48L2xpPjxsaSAgY2xhc3M9ImxldmVsMCBuYXYtMyBjYXRlZ29yeS1pdGVtIGxldmVsLXRvcCBwYXJlbnQiPjxhIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L21lbi5odG1sIiAgY2xhc3M9ImxldmVsLXRvcCIgPjxzcGFuPk1lbjwvc3Bhbj48L2E+PHVsIGNsYXNzPSJsZXZlbDAgc3VibWVudSI+PGxpICBjbGFzcz0ibGV2ZWwxIG5hdi0zLTEgY2F0ZWdvcnktaXRlbSBmaXJzdCBwYXJlbnQiPjxhIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L21lbi90b3BzLW1lbi5odG1sIiA+PHNwYW4+VG9wczwvc3Bhbj48L2E+PHVsIGNsYXNzPSJsZXZlbDEgc3VibWVudSI+PGxpICBjbGFzcz0ibGV2ZWwyIG5hdi0zLTEtMSBjYXRlZ29yeS1pdGVtIGZpcnN0Ij48YSBocmVmPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9tZW4vdG9wcy1tZW4vamFja2V0cy1tZW4uaHRtbCIgPjxzcGFuPkphY2tldHM8L3NwYW4+PC9hPjwvbGk+PGxpICBjbGFzcz0ibGV2ZWwyIG5hdi0zLTEtMiBjYXRlZ29yeS1pdGVtIj48YSBocmVmPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9tZW4vdG9wcy1tZW4vaG9vZGllcy1hbmQtc3dlYXRzaGlydHMtbWVuLmh0bWwiID48c3Bhbj5Ib29kaWVzICZhbXA7IFN3ZWF0c2hpcnRzPC9zcGFuPjwvYT48L2xpPjxsaSAgY2xhc3M9ImxldmVsMiBuYXYtMy0xLTMgY2F0ZWdvcnktaXRlbSI+PGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvbWVuL3RvcHMtbWVuL3RlZXMtbWVuLmh0bWwiID48c3Bhbj5UZWVzPC9zcGFuPjwvYT48L2xpPjxsaSAgY2xhc3M9ImxldmVsMiBuYXYtMy0xLTQgY2F0ZWdvcnktaXRlbSBsYXN0Ij48YSBocmVmPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9tZW4vdG9wcy1tZW4vdGFua3MtbWVuLmh0bWwiID48c3Bhbj5UYW5rczwvc3Bhbj48L2E+PC9saT48L3VsPjwvbGk+PGxpICBjbGFzcz0ibGV2ZWwxIG5hdi0zLTIgY2F0ZWdvcnktaXRlbSBsYXN0IHBhcmVudCI+PGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvbWVuL2JvdHRvbXMtbWVuLmh0bWwiID48c3Bhbj5Cb3R0b21zPC9zcGFuPjwvYT48dWwgY2xhc3M9ImxldmVsMSBzdWJtZW51Ij48bGkgIGNsYXNzPSJsZXZlbDIgbmF2LTMtMi0xIGNhdGVnb3J5LWl0ZW0gZmlyc3QiPjxhIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L21lbi9ib3R0b21zLW1lbi9wYW50cy1tZW4uaHRtbCIgPjxzcGFuPlBhbnRzPC9zcGFuPjwvYT48L2xpPjxsaSAgY2xhc3M9ImxldmVsMiBuYXYtMy0yLTIgY2F0ZWdvcnktaXRlbSBsYXN0Ij48YSBocmVmPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9tZW4vYm90dG9tcy1tZW4vc2hvcnRzLW1lbi5odG1sIiA+PHNwYW4+U2hvcnRzPC9zcGFuPjwvYT48L2xpPjwvdWw+PC9saT48L3VsPjwvbGk+PGxpICBjbGFzcz0ibGV2ZWwwIG5hdi00IGNhdGVnb3J5LWl0ZW0gbGV2ZWwtdG9wIHBhcmVudCI+PGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvZ2Vhci5odG1sIiAgY2xhc3M9ImxldmVsLXRvcCIgPjxzcGFuPkdlYXI8L3NwYW4+PC9hPjx1bCBjbGFzcz0ibGV2ZWwwIHN1Ym1lbnUiPjxsaSAgY2xhc3M9ImxldmVsMSBuYXYtNC0xIGNhdGVnb3J5LWl0ZW0gZmlyc3QiPjxhIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L2dlYXIvYmFncy5odG1sIiA+PHNwYW4+QmFnczwvc3Bhbj48L2E+PC9saT48bGkgIGNsYXNzPSJsZXZlbDEgbmF2LTQtMiBjYXRlZ29yeS1pdGVtIj48YSBocmVmPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9nZWFyL2ZpdG5lc3MtZXF1aXBtZW50Lmh0bWwiID48c3Bhbj5GaXRuZXNzIEVxdWlwbWVudDwvc3Bhbj48L2E+PC9saT48bGkgIGNsYXNzPSJsZXZlbDEgbmF2LTQtMyBjYXRlZ29yeS1pdGVtIGxhc3QiPjxhIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L2dlYXIvd2F0Y2hlcy5odG1sIiA+PHNwYW4+V2F0Y2hlczwvc3Bhbj48L2E+PC9saT48L3VsPjwvbGk+PGxpICBjbGFzcz0ibGV2ZWwwIG5hdi01IGNhdGVnb3J5LWl0ZW0gbGV2ZWwtdG9wIHBhcmVudCI+PGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvdHJhaW5pbmcuaHRtbCIgIGNsYXNzPSJsZXZlbC10b3AiID48c3Bhbj5UcmFpbmluZzwvc3Bhbj48L2E+PHVsIGNsYXNzPSJsZXZlbDAgc3VibWVudSI+PGxpICBjbGFzcz0ibGV2ZWwxIG5hdi01LTEgY2F0ZWdvcnktaXRlbSBmaXJzdCBsYXN0Ij48YSBocmVmPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS90cmFpbmluZy90cmFpbmluZy12aWRlby5odG1sIiA+PHNwYW4+VmlkZW8gRG93bmxvYWQ8L3NwYW4+PC9hPjwvbGk+PC91bD48L2xpPjxsaSAgY2xhc3M9ImxldmVsMCBuYXYtNiBjYXRlZ29yeS1pdGVtIGxhc3QgbGV2ZWwtdG9wIj48YSBocmVmPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9zYWxlLmh0bWwiICBjbGFzcz0ibGV2ZWwtdG9wIiA+PHNwYW4+U2FsZTwvc3Bhbj48L2E+PC9saT4gICAgICAgICAgICA8L3VsPgo8L25hdj4KPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbi1pdGVtLXRpdGxlIG5hdi1zZWN0aW9ucy1pdGVtLXRpdGxlIiBkYXRhLXJvbGU9ImNvbGxhcHNpYmxlIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibmF2LXNlY3Rpb25zLWl0ZW0tc3dpdGNoIiBkYXRhLXRvZ2dsZT0ic3dpdGNoIiBocmVmPSIjc3RvcmUubGlua3MiPkFjY291bnQ8L2E+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24taXRlbS1jb250ZW50IG5hdi1zZWN0aW9ucy1pdGVtLWNvbnRlbnQiIGlkPSJzdG9yZS5saW5rcyIgZGF0YS1yb2xlPSJjb250ZW50Ij48IS0tIEFjY291bnQgbGlua3MgLS0+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgPC9kaXY+CjxkaXYgY2xhc3M9ImJyZWFkY3J1bWJzIj48L2Rpdj4KPHNjcmlwdCB0eXBlPSJ0ZXh0L3gtbWFnZW50by1pbml0Ij4KICAgICAgICB7CiAgICAgICAgICAgICIuYnJlYWRjcnVtYnMiOiB7ImJyZWFkY3J1bWJzIjp7ImNhdGVnb3J5VXJsU3VmZml4IjoiLmh0bWwiLCJ1c2VDYXRlZ29yeVBhdGhJblVybCI6MCwicHJvZHVjdCI6IkJyZWF0aGUtRWFzeSBUYW5rIn19ICAgICAgICB9Cjwvc2NyaXB0Pgo8bWFpbiBpZD0ibWFpbmNvbnRlbnQiIGNsYXNzPSJwYWdlLW1haW4iPjxhIGlkPSJjb250ZW50YXJlYSIgdGFiaW5kZXg9Ii0xIj48L2E+CjxkaXYgY2xhc3M9InBhZ2UgbWVzc2FnZXMiPjxkaXYgZGF0YS1wbGFjZWhvbGRlcj0ibWVzc2FnZXMiPjwvZGl2Pgo8ZGl2IGRhdGEtYmluZD0ic2NvcGU6ICdtZXNzYWdlcyciPgogICAgPCEtLSBrbyBpZjogY29va2llTWVzc2FnZXMgJiYgY29va2llTWVzc2FnZXMubGVuZ3RoID4gMCAtLT4KICAgIDxkaXYgcm9sZT0iYWxlcnQiIGRhdGEtYmluZD0iZm9yZWFjaDogeyBkYXRhOiBjb29raWVNZXNzYWdlcywgYXM6ICdtZXNzYWdlJyB9IiBjbGFzcz0ibWVzc2FnZXMiPgogICAgICAgIDxkaXYgZGF0YS1iaW5kPSJhdHRyOiB7CiAgICAgICAgICAgIGNsYXNzOiAnbWVzc2FnZS0nICsgbWVzc2FnZS50eXBlICsgJyAnICsgbWVzc2FnZS50eXBlICsgJyBtZXNzYWdlJywKICAgICAgICAgICAgJ2RhdGEtdWktaWQnOiAnbWVzc2FnZS0nICsgbWVzc2FnZS50eXBlCiAgICAgICAgfSI+CiAgICAgICAgICAgIDxkaXYgZGF0YS1iaW5kPSJodG1sOiBtZXNzYWdlLnRleHQiPjwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8IS0tIC9rbyAtLT4KICAgIDwhLS0ga28gaWY6IG1lc3NhZ2VzKCkubWVzc2FnZXMgJiYgbWVzc2FnZXMoKS5tZXNzYWdlcy5sZW5ndGggPiAwIC0tPgogICAgPGRpdiByb2xlPSJhbGVydCIgZGF0YS1iaW5kPSJmb3JlYWNoOiB7IGRhdGE6IG1lc3NhZ2VzKCkubWVzc2FnZXMsIGFzOiAnbWVzc2FnZScgfSIgY2xhc3M9Im1lc3NhZ2VzIj4KICAgICAgICA8ZGl2IGRhdGEtYmluZD0iYXR0cjogewogICAgICAgICAgICBjbGFzczogJ21lc3NhZ2UtJyArIG1lc3NhZ2UudHlwZSArICcgJyArIG1lc3NhZ2UudHlwZSArICcgbWVzc2FnZScsCiAgICAgICAgICAgICdkYXRhLXVpLWlkJzogJ21lc3NhZ2UtJyArIG1lc3NhZ2UudHlwZQogICAgICAgIH0iPgogICAgICAgICAgICA8ZGl2IGRhdGEtYmluZD0iaHRtbDogbWVzc2FnZS50ZXh0Ij48L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPCEtLSAva28gLS0+CjwvZGl2Pgo8c2NyaXB0IHR5cGU9InRleHQveC1tYWdlbnRvLWluaXQiPgogICAgewogICAgICAgICIqIjogewogICAgICAgICAgICAiTWFnZW50b19VaS9qcy9jb3JlL2FwcCI6IHsKICAgICAgICAgICAgICAgICJjb21wb25lbnRzIjogewogICAgICAgICAgICAgICAgICAgICAgICAibWVzc2FnZXMiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiY29tcG9uZW50IjogIk1hZ2VudG9fVGhlbWUvanMvdmlldy9tZXNzYWdlcyIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgfQo8L3NjcmlwdD4KPC9kaXY+PGRpdiBjbGFzcz0iY29sdW1ucyI+PGRpdiBjbGFzcz0iY29sdW1uIG1haW4iPjxkaXYgY2xhc3M9InByb2R1Y3QtaW5mby1tYWluIj48ZGl2IGNsYXNzPSJwYWdlLXRpdGxlLXdyYXBwZXIgcHJvZHVjdCI+CiAgICA8aDEgY2xhc3M9InBhZ2UtdGl0bGUiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgPHNwYW4gY2xhc3M9ImJhc2UiIGRhdGEtdWktaWQ9InBhZ2UtdGl0bGUtd3JhcHBlciIgaXRlbXByb3A9Im5hbWUiPkJyZWF0aGUtRWFzeSBUYW5rPC9zcGFuPiAgICA8L2gxPgogICAgPC9kaXY+CjxkaXYgY2xhc3M9InByb2R1Y3QtcmV2aWV3cy1zdW1tYXJ5IiBpdGVtcHJvcD0iYWdncmVnYXRlUmF0aW5nIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL0FnZ3JlZ2F0ZVJhdGluZyI+CiAgICAgICAgPGRpdiBjbGFzcz0icmF0aW5nLXN1bW1hcnkiPgogICAgICAgICA8c3BhbiBjbGFzcz0ibGFiZWwiPjxzcGFuPlJhdGluZzo8L3NwYW4+PC9zcGFuPgogICAgICAgICA8ZGl2IGNsYXNzPSJyYXRpbmctcmVzdWx0IiB0aXRsZT0iNzAlIj4KICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJ3aWR0aDo3MCUiPgogICAgICAgICAgICAgICAgIDxzcGFuPgogICAgICAgICAgICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0icmF0aW5nVmFsdWUiPjcwPC9zcGFuPiUgb2YgPHNwYW4gaXRlbXByb3A9ImJlc3RSYXRpbmciPjEwMDwvc3Bhbj4KICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgIDwvZGl2PgogICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9InJldmlld3MtYWN0aW9ucyI+CiAgICAgICAgPGEgY2xhc3M9ImFjdGlvbiB2aWV3IgogICAgICAgICAgIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L2JyZWF0aGUtZWFzeS10YW5rLmh0bWwjcmV2aWV3cyI+CiAgICAgICAgICAgIDxzcGFuIGl0ZW1wcm9wPSJyZXZpZXdDb3VudCI+Mjwvc3Bhbj4mbmJzcDsKICAgICAgICAgICAgPHNwYW4+UmV2aWV3czwvc3Bhbj4KICAgICAgICA8L2E+CiAgICAgICAgPGEgY2xhc3M9ImFjdGlvbiBhZGQiIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L2JyZWF0aGUtZWFzeS10YW5rLmh0bWwjcmV2aWV3LWZvcm0iPkFkZCBZb3VyIFJldmlldzwvYT4KICAgIDwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0icHJvZHVjdC1pbmZvLXByaWNlIj48ZGl2IGNsYXNzPSJwcmljZS1ib3ggcHJpY2UtZmluYWxfcHJpY2UiIGRhdGEtcm9sZT0icHJpY2VCb3giIGRhdGEtcHJvZHVjdC1pZD0iMTgxOCIgZGF0YS1wcmljZS1ib3g9InByb2R1Y3QtaWQtMTgxOCI+CjxzcGFuIGNsYXNzPSJub3JtYWwtcHJpY2UiPgogICAgCgo8c3BhbiBjbGFzcz0icHJpY2UtY29udGFpbmVyIHByaWNlLWZpbmFsX3ByaWNlIHRheCB3ZWVlIgogICAgICAgICBpdGVtcHJvcD0ib2ZmZXJzIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL09mZmVyIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByaWNlLWxhYmVsIj5BcyBsb3cgYXM8L3NwYW4+CiAgICAgICAgPHNwYW4gIGlkPSJwcm9kdWN0LXByaWNlLTE4MTgiICAgICAgICAgICAgICAgIGRhdGEtcHJpY2UtYW1vdW50PSIzNCIKICAgICAgICBkYXRhLXByaWNlLXR5cGU9ImZpbmFsUHJpY2UiCiAgICAgICAgY2xhc3M9InByaWNlLXdyYXBwZXIgIgogICAgPjxzcGFuIGNsYXNzPSJwcmljZSI+JDM0LjAwPC9zcGFuPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJwcmljZSIgY29udGVudD0iMzQiIC8+CiAgICAgICAgPG1ldGEgaXRlbXByb3A9InByaWNlQ3VycmVuY3kiIGNvbnRlbnQ9IlVTRCIgLz4KICAgIDwvc3Bhbj4KPC9zcGFuPgoKCjwvZGl2PjxkaXYgY2xhc3M9InByb2R1Y3QtaW5mby1zdG9jay1za3UiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdG9jayBhdmFpbGFibGUiIHRpdGxlPSJBdmFpbGFiaWxpdHkiPgogICAgICAgICAgICA8c3Bhbj5JbiBzdG9jazwvc3Bhbj4KICAgICAgICA8L2Rpdj4KICAgIAo8ZGl2IGNsYXNzPSJwcm9kdWN0IGF0dHJpYnV0ZSBza3UiPgogICAgPHN0cm9uZyBjbGFzcz0idHlwZSI+U0tVPC9zdHJvbmc+ICAgIDxkaXYgY2xhc3M9InZhbHVlIiBpdGVtcHJvcD0ic2t1Ij5XVDA5PC9kaXY+CjwvZGl2Pgo8L2Rpdj48L2Rpdj4KPGRpdiBjbGFzcz0icHJvZHVjdC1hZGQtZm9ybSI+CiAgICA8Zm9ybSBkYXRhLXByb2R1Y3Qtc2t1PSJXVDA5IgogICAgICAgICAgYWN0aW9uPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9jaGVja291dC9jYXJ0L2FkZC91ZW5jL2FIUjBjRG92TDIxaFoyVnVkRzh0ZEdWemRDNW1hVzV2Ykc5bmVTNWpiMjB1YlhrdlluSmxZWFJvWlMxbFlYTjVMWFJoYm1zdWFIUnRiQSUyQyUyQy9wcm9kdWN0LzE4MTgvIiBtZXRob2Q9InBvc3QiCiAgICAgICAgICBpZD0icHJvZHVjdF9hZGR0b2NhcnRfZm9ybSI+CiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icHJvZHVjdCIgdmFsdWU9IjE4MTgiIC8+CiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ic2VsZWN0ZWRfY29uZmlndXJhYmxlX29wdGlvbiIgdmFsdWU9IiIgLz4KICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJyZWxhdGVkX3Byb2R1Y3QiIGlkPSJyZWxhdGVkLXByb2R1Y3RzLWZpZWxkIiB2YWx1ZT0iIiAvPgogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Iml0ZW0iICB2YWx1ZT0iMTgxOCIgLz4KICAgICAgICA8aW5wdXQgbmFtZT0iZm9ybV9rZXkiIHR5cGU9ImhpZGRlbiIgdmFsdWU9IkFGNjBiOHBpZlV3RndBWGEiIC8+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdC1vcHRpb25zLXdyYXBwZXIiIGlkPSJwcm9kdWN0LW9wdGlvbnMtd3JhcHBlciI+CiAgICA8ZGl2IGNsYXNzPSJmaWVsZHNldCIgdGFiaW5kZXg9IjAiPgogICAgICAgIDxkaXYgY2xhc3M9InN3YXRjaC1vcHQiIGRhdGEtcm9sZT0ic3dhdGNoLW9wdGlvbnMiPjwvZGl2PgoKPHNjcmlwdCB0eXBlPSJ0ZXh0L3gtbWFnZW50by1pbml0Ij4KICAgIHsKICAgICAgICAiW2RhdGEtcm9sZT1zd2F0Y2gtb3B0aW9uc10iOiB7CiAgICAgICAgICAgICJNYWdlbnRvX1N3YXRjaGVzL2pzL3N3YXRjaC1yZW5kZXJlciI6IHsKICAgICAgICAgICAgICAgICJqc29uQ29uZmlnIjogeyJhdHRyaWJ1dGVzIjp7IjE0NSI6eyJpZCI6IjE0NSIsImNvZGUiOiJzaXplIiwibGFiZWwiOiJTaXplIiwib3B0aW9ucyI6W3siaWQiOiIxNjciLCJsYWJlbCI6IlhTIiwicHJvZHVjdHMiOlsiMTgwMyIsIjE4MDQiLCIxODA1Il19LHsiaWQiOiIxNjgiLCJsYWJlbCI6IlMiLCJwcm9kdWN0cyI6WyIxODA2IiwiMTgwNyIsIjE4MDgiXX0seyJpZCI6IjE2OSIsImxhYmVsIjoiTSIsInByb2R1Y3RzIjpbIjE4MDkiLCIxODEwIiwiMTgxMSJdfSx7ImlkIjoiMTcwIiwibGFiZWwiOiJMIiwicHJvZHVjdHMiOlsiMTgxMiIsIjE4MTMiLCIxODE0Il19LHsiaWQiOiIxNzEiLCJsYWJlbCI6IlhMIiwicHJvZHVjdHMiOlsiMTgxNSIsIjE4MTYiLCIxODE3Il19XSwicG9zaXRpb24iOiIwIn0sIjkzIjp7ImlkIjoiOTMiLCJjb2RlIjoiY29sb3IiLCJsYWJlbCI6IkNvbG9yIiwib3B0aW9ucyI6W3siaWQiOiI1NyIsImxhYmVsIjoiUHVycGxlIiwicHJvZHVjdHMiOlsiMTgwMyIsIjE4MDYiLCIxODA5IiwiMTgxMiIsIjE4MTUiXX0seyJpZCI6IjU5IiwibGFiZWwiOiJXaGl0ZSIsInByb2R1Y3RzIjpbIjE4MDQiLCIxODA3IiwiMTgxMCIsIjE4MTMiLCIxODE2Il19LHsiaWQiOiI2MCIsImxhYmVsIjoiWWVsbG93IiwicHJvZHVjdHMiOlsiMTgwNSIsIjE4MDgiLCIxODExIiwiMTgxNCIsIjE4MTciXX1dLCJwb3NpdGlvbiI6IjEifX0sInRlbXBsYXRlIjoiJDwlLSBkYXRhLnByaWNlICU+IiwiY3VycmVuY3lGb3JtYXQiOiIkJXMiLCJvcHRpb25QcmljZXMiOnsiMTgwMyI6eyJvbGRQcmljZSI6eyJhbW91bnQiOjM0fSwiYmFzZVByaWNlIjp7ImFtb3VudCI6MzR9LCJmaW5hbFByaWNlIjp7ImFtb3VudCI6MzR9LCJ0aWVyUHJpY2VzIjpbXSwibXNycFByaWNlIjp7ImFtb3VudCI6bnVsbH19LCIxODA0Ijp7Im9sZFByaWNlIjp7ImFtb3VudCI6MzR9LCJiYXNlUHJpY2UiOnsiYW1vdW50IjozNH0sImZpbmFsUHJpY2UiOnsiYW1vdW50IjozNH0sInRpZXJQcmljZXMiOltdLCJtc3JwUHJpY2UiOnsiYW1vdW50IjpudWxsfX0sIjE4MDUiOnsib2xkUHJpY2UiOnsiYW1vdW50IjozNH0sImJhc2VQcmljZSI6eyJhbW91bnQiOjM0fSwiZmluYWxQcmljZSI6eyJhbW91bnQiOjM0fSwidGllclByaWNlcyI6W10sIm1zcnBQcmljZSI6eyJhbW91bnQiOm51bGx9fSwiMTgwNiI6eyJvbGRQcmljZSI6eyJhbW91bnQiOjM0fSwiYmFzZVByaWNlIjp7ImFtb3VudCI6MzR9LCJmaW5hbFByaWNlIjp7ImFtb3VudCI6MzR9LCJ0aWVyUHJpY2VzIjpbXSwibXNycFByaWNlIjp7ImFtb3VudCI6bnVsbH19LCIxODA3Ijp7Im9sZFByaWNlIjp7ImFtb3VudCI6MzR9LCJiYXNlUHJpY2UiOnsiYW1vdW50IjozNH0sImZpbmFsUHJpY2UiOnsiYW1vdW50IjozNH0sInRpZXJQcmljZXMiOltdLCJtc3JwUHJpY2UiOnsiYW1vdW50IjpudWxsfX0sIjE4MDgiOnsib2xkUHJpY2UiOnsiYW1vdW50IjozNH0sImJhc2VQcmljZSI6eyJhbW91bnQiOjM0fSwiZmluYWxQcmljZSI6eyJhbW91bnQiOjM0fSwidGllclByaWNlcyI6W10sIm1zcnBQcmljZSI6eyJhbW91bnQiOm51bGx9fSwiMTgwOSI6eyJvbGRQcmljZSI6eyJhbW91bnQiOjM0fSwiYmFzZVByaWNlIjp7ImFtb3VudCI6MzR9LCJmaW5hbFByaWNlIjp7ImFtb3VudCI6MzR9LCJ0aWVyUHJpY2VzIjpbXSwibXNycFByaWNlIjp7ImFtb3VudCI6bnVsbH19LCIxODEwIjp7Im9sZFByaWNlIjp7ImFtb3VudCI6MzR9LCJiYXNlUHJpY2UiOnsiYW1vdW50IjozNH0sImZpbmFsUHJpY2UiOnsiYW1vdW50IjozNH0sInRpZXJQcmljZXMiOltdLCJtc3JwUHJpY2UiOnsiYW1vdW50IjpudWxsfX0sIjE4MTEiOnsib2xkUHJpY2UiOnsiYW1vdW50IjozNH0sImJhc2VQcmljZSI6eyJhbW91bnQiOjM0fSwiZmluYWxQcmljZSI6eyJhbW91bnQiOjM0fSwidGllclByaWNlcyI6W10sIm1zcnBQcmljZSI6eyJhbW91bnQiOm51bGx9fSwiMTgxMiI6eyJvbGRQcmljZSI6eyJhbW91bnQiOjM0fSwiYmFzZVByaWNlIjp7ImFtb3VudCI6MzR9LCJmaW5hbFByaWNlIjp7ImFtb3VudCI6MzR9LCJ0aWVyUHJpY2VzIjpbXSwibXNycFByaWNlIjp7ImFtb3VudCI6bnVsbH19LCIxODEzIjp7Im9sZFByaWNlIjp7ImFtb3VudCI6MzR9LCJiYXNlUHJpY2UiOnsiYW1vdW50IjozNH0sImZpbmFsUHJpY2UiOnsiYW1vdW50IjozNH0sInRpZXJQcmljZXMiOltdLCJtc3JwUHJpY2UiOnsiYW1vdW50IjpudWxsfX0sIjE4MTQiOnsib2xkUHJpY2UiOnsiYW1vdW50IjozNH0sImJhc2VQcmljZSI6eyJhbW91bnQiOjM0fSwiZmluYWxQcmljZSI6eyJhbW91bnQiOjM0fSwidGllclByaWNlcyI6W10sIm1zcnBQcmljZSI6eyJhbW91bnQiOm51bGx9fSwiMTgxNSI6eyJvbGRQcmljZSI6eyJhbW91bnQiOjM0fSwiYmFzZVByaWNlIjp7ImFtb3VudCI6MzR9LCJmaW5hbFByaWNlIjp7ImFtb3VudCI6MzR9LCJ0aWVyUHJpY2VzIjpbXSwibXNycFByaWNlIjp7ImFtb3VudCI6bnVsbH19LCIxODE2Ijp7Im9sZFByaWNlIjp7ImFtb3VudCI6MzR9LCJiYXNlUHJpY2UiOnsiYW1vdW50IjozNH0sImZpbmFsUHJpY2UiOnsiYW1vdW50IjozNH0sInRpZXJQcmljZXMiOltdLCJtc3JwUHJpY2UiOnsiYW1vdW50IjpudWxsfX0sIjE4MTciOnsib2xkUHJpY2UiOnsiYW1vdW50IjozNH0sImJhc2VQcmljZSI6eyJhbW91bnQiOjM0fSwiZmluYWxQcmljZSI6eyJhbW91bnQiOjM0fSwidGllclByaWNlcyI6W10sIm1zcnBQcmljZSI6eyJhbW91bnQiOm51bGx9fX0sInByaWNlRm9ybWF0Ijp7InBhdHRlcm4iOiIkJXMiLCJwcmVjaXNpb24iOjIsInJlcXVpcmVkUHJlY2lzaW9uIjoyLCJkZWNpbWFsU3ltYm9sIjoiLiIsImdyb3VwU3ltYm9sIjoiLCIsImdyb3VwTGVuZ3RoIjozLCJpbnRlZ2VyUmVxdWlyZWQiOmZhbHNlfSwicHJpY2VzIjp7Im9sZFByaWNlIjp7ImFtb3VudCI6MzR9LCJiYXNlUHJpY2UiOnsiYW1vdW50IjozNH0sImZpbmFsUHJpY2UiOnsiYW1vdW50IjozNH19LCJwcm9kdWN0SWQiOiIxODE4IiwiY2hvb3NlVGV4dCI6IkNob29zZSBhbiBPcHRpb24uLi4iLCJpbWFnZXMiOnsiMTgwMyI6W3sidGh1bWIiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvYTMyNzg1ZjI5OWQxZDY2MjdjYjE4MTI2Nzc5ZDkxYTJcL3dcL3RcL3d0MDktcHVycGxlX21haW5fMS5qcGciLCJpbWciOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvMjA3ZTIzMjEzY2Y2MzZjY2RlZjIwNTA5OGNmM2M4YTNcL3dcL3RcL3d0MDktcHVycGxlX21haW5fMS5qcGciLCJmdWxsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcLzc0YzEwNTdmNzk5MWI0ZWRiMmJjN2JkYWE5NGRlOTMzXC93XC90XC93dDA5LXB1cnBsZV9tYWluXzEuanBnIiwiY2FwdGlvbiI6IiIsInBvc2l0aW9uIjoiMSIsImlzTWFpbiI6dHJ1ZSwidHlwZSI6ImltYWdlIiwidmlkZW9VcmwiOm51bGx9XSwiMTgwNCI6W3sidGh1bWIiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvYTMyNzg1ZjI5OWQxZDY2MjdjYjE4MTI2Nzc5ZDkxYTJcL3dcL3RcL3d0MDktd2hpdGVfbWFpbl8xLmpwZyIsImltZyI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC8yMDdlMjMyMTNjZjYzNmNjZGVmMjA1MDk4Y2YzYzhhM1wvd1wvdFwvd3QwOS13aGl0ZV9tYWluXzEuanBnIiwiZnVsbCI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC83NGMxMDU3Zjc5OTFiNGVkYjJiYzdiZGFhOTRkZTkzM1wvd1wvdFwvd3QwOS13aGl0ZV9tYWluXzEuanBnIiwiY2FwdGlvbiI6IiIsInBvc2l0aW9uIjoiMSIsImlzTWFpbiI6dHJ1ZSwidHlwZSI6ImltYWdlIiwidmlkZW9VcmwiOm51bGx9LHsidGh1bWIiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvYTMyNzg1ZjI5OWQxZDY2MjdjYjE4MTI2Nzc5ZDkxYTJcL3dcL3RcL3d0MDktd2hpdGVfYmFja18xLmpwZyIsImltZyI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC8yMDdlMjMyMTNjZjYzNmNjZGVmMjA1MDk4Y2YzYzhhM1wvd1wvdFwvd3QwOS13aGl0ZV9iYWNrXzEuanBnIiwiZnVsbCI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC83NGMxMDU3Zjc5OTFiNGVkYjJiYzdiZGFhOTRkZTkzM1wvd1wvdFwvd3QwOS13aGl0ZV9iYWNrXzEuanBnIiwiY2FwdGlvbiI6IiIsInBvc2l0aW9uIjoiMiIsImlzTWFpbiI6ZmFsc2UsInR5cGUiOiJpbWFnZSIsInZpZGVvVXJsIjpudWxsfV0sIjE4MDUiOlt7InRodW1iIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcL2EzMjc4NWYyOTlkMWQ2NjI3Y2IxODEyNjc3OWQ5MWEyXC93XC90XC93dDA5LXllbGxvd19tYWluXzEuanBnIiwiaW1nIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcLzIwN2UyMzIxM2NmNjM2Y2NkZWYyMDUwOThjZjNjOGEzXC93XC90XC93dDA5LXllbGxvd19tYWluXzEuanBnIiwiZnVsbCI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC83NGMxMDU3Zjc5OTFiNGVkYjJiYzdiZGFhOTRkZTkzM1wvd1wvdFwvd3QwOS15ZWxsb3dfbWFpbl8xLmpwZyIsImNhcHRpb24iOiIiLCJwb3NpdGlvbiI6IjEiLCJpc01haW4iOnRydWUsInR5cGUiOiJpbWFnZSIsInZpZGVvVXJsIjpudWxsfV0sIjE4MDYiOlt7InRodW1iIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcL2EzMjc4NWYyOTlkMWQ2NjI3Y2IxODEyNjc3OWQ5MWEyXC93XC90XC93dDA5LXB1cnBsZV9tYWluXzEuanBnIiwiaW1nIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcLzIwN2UyMzIxM2NmNjM2Y2NkZWYyMDUwOThjZjNjOGEzXC93XC90XC93dDA5LXB1cnBsZV9tYWluXzEuanBnIiwiZnVsbCI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC83NGMxMDU3Zjc5OTFiNGVkYjJiYzdiZGFhOTRkZTkzM1wvd1wvdFwvd3QwOS1wdXJwbGVfbWFpbl8xLmpwZyIsImNhcHRpb24iOiIiLCJwb3NpdGlvbiI6IjEiLCJpc01haW4iOnRydWUsInR5cGUiOiJpbWFnZSIsInZpZGVvVXJsIjpudWxsfV0sIjE4MDciOlt7InRodW1iIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcL2EzMjc4NWYyOTlkMWQ2NjI3Y2IxODEyNjc3OWQ5MWEyXC93XC90XC93dDA5LXdoaXRlX21haW5fMS5qcGciLCJpbWciOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvMjA3ZTIzMjEzY2Y2MzZjY2RlZjIwNTA5OGNmM2M4YTNcL3dcL3RcL3d0MDktd2hpdGVfbWFpbl8xLmpwZyIsImZ1bGwiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvNzRjMTA1N2Y3OTkxYjRlZGIyYmM3YmRhYTk0ZGU5MzNcL3dcL3RcL3d0MDktd2hpdGVfbWFpbl8xLmpwZyIsImNhcHRpb24iOiIiLCJwb3NpdGlvbiI6IjEiLCJpc01haW4iOnRydWUsInR5cGUiOiJpbWFnZSIsInZpZGVvVXJsIjpudWxsfSx7InRodW1iIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcL2EzMjc4NWYyOTlkMWQ2NjI3Y2IxODEyNjc3OWQ5MWEyXC93XC90XC93dDA5LXdoaXRlX2JhY2tfMS5qcGciLCJpbWciOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvMjA3ZTIzMjEzY2Y2MzZjY2RlZjIwNTA5OGNmM2M4YTNcL3dcL3RcL3d0MDktd2hpdGVfYmFja18xLmpwZyIsImZ1bGwiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvNzRjMTA1N2Y3OTkxYjRlZGIyYmM3YmRhYTk0ZGU5MzNcL3dcL3RcL3d0MDktd2hpdGVfYmFja18xLmpwZyIsImNhcHRpb24iOiIiLCJwb3NpdGlvbiI6IjIiLCJpc01haW4iOmZhbHNlLCJ0eXBlIjoiaW1hZ2UiLCJ2aWRlb1VybCI6bnVsbH1dLCIxODA4IjpbeyJ0aHVtYiI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC9hMzI3ODVmMjk5ZDFkNjYyN2NiMTgxMjY3NzlkOTFhMlwvd1wvdFwvd3QwOS15ZWxsb3dfbWFpbl8xLmpwZyIsImltZyI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC8yMDdlMjMyMTNjZjYzNmNjZGVmMjA1MDk4Y2YzYzhhM1wvd1wvdFwvd3QwOS15ZWxsb3dfbWFpbl8xLmpwZyIsImZ1bGwiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvNzRjMTA1N2Y3OTkxYjRlZGIyYmM3YmRhYTk0ZGU5MzNcL3dcL3RcL3d0MDkteWVsbG93X21haW5fMS5qcGciLCJjYXB0aW9uIjoiIiwicG9zaXRpb24iOiIxIiwiaXNNYWluIjp0cnVlLCJ0eXBlIjoiaW1hZ2UiLCJ2aWRlb1VybCI6bnVsbH1dLCIxODA5IjpbeyJ0aHVtYiI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC9hMzI3ODVmMjk5ZDFkNjYyN2NiMTgxMjY3NzlkOTFhMlwvd1wvdFwvd3QwOS1wdXJwbGVfbWFpbl8xLmpwZyIsImltZyI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC8yMDdlMjMyMTNjZjYzNmNjZGVmMjA1MDk4Y2YzYzhhM1wvd1wvdFwvd3QwOS1wdXJwbGVfbWFpbl8xLmpwZyIsImZ1bGwiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvNzRjMTA1N2Y3OTkxYjRlZGIyYmM3YmRhYTk0ZGU5MzNcL3dcL3RcL3d0MDktcHVycGxlX21haW5fMS5qcGciLCJjYXB0aW9uIjoiIiwicG9zaXRpb24iOiIxIiwiaXNNYWluIjp0cnVlLCJ0eXBlIjoiaW1hZ2UiLCJ2aWRlb1VybCI6bnVsbH1dLCIxODEwIjpbeyJ0aHVtYiI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC9hMzI3ODVmMjk5ZDFkNjYyN2NiMTgxMjY3NzlkOTFhMlwvd1wvdFwvd3QwOS13aGl0ZV9tYWluXzEuanBnIiwiaW1nIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcLzIwN2UyMzIxM2NmNjM2Y2NkZWYyMDUwOThjZjNjOGEzXC93XC90XC93dDA5LXdoaXRlX21haW5fMS5qcGciLCJmdWxsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcLzc0YzEwNTdmNzk5MWI0ZWRiMmJjN2JkYWE5NGRlOTMzXC93XC90XC93dDA5LXdoaXRlX21haW5fMS5qcGciLCJjYXB0aW9uIjoiIiwicG9zaXRpb24iOiIxIiwiaXNNYWluIjp0cnVlLCJ0eXBlIjoiaW1hZ2UiLCJ2aWRlb1VybCI6bnVsbH0seyJ0aHVtYiI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC9hMzI3ODVmMjk5ZDFkNjYyN2NiMTgxMjY3NzlkOTFhMlwvd1wvdFwvd3QwOS13aGl0ZV9iYWNrXzEuanBnIiwiaW1nIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcLzIwN2UyMzIxM2NmNjM2Y2NkZWYyMDUwOThjZjNjOGEzXC93XC90XC93dDA5LXdoaXRlX2JhY2tfMS5qcGciLCJmdWxsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcLzc0YzEwNTdmNzk5MWI0ZWRiMmJjN2JkYWE5NGRlOTMzXC93XC90XC93dDA5LXdoaXRlX2JhY2tfMS5qcGciLCJjYXB0aW9uIjoiIiwicG9zaXRpb24iOiIyIiwiaXNNYWluIjpmYWxzZSwidHlwZSI6ImltYWdlIiwidmlkZW9VcmwiOm51bGx9XSwiMTgxMSI6W3sidGh1bWIiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvYTMyNzg1ZjI5OWQxZDY2MjdjYjE4MTI2Nzc5ZDkxYTJcL3dcL3RcL3d0MDkteWVsbG93X21haW5fMS5qcGciLCJpbWciOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvMjA3ZTIzMjEzY2Y2MzZjY2RlZjIwNTA5OGNmM2M4YTNcL3dcL3RcL3d0MDkteWVsbG93X21haW5fMS5qcGciLCJmdWxsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcLzc0YzEwNTdmNzk5MWI0ZWRiMmJjN2JkYWE5NGRlOTMzXC93XC90XC93dDA5LXllbGxvd19tYWluXzEuanBnIiwiY2FwdGlvbiI6IiIsInBvc2l0aW9uIjoiMSIsImlzTWFpbiI6dHJ1ZSwidHlwZSI6ImltYWdlIiwidmlkZW9VcmwiOm51bGx9XSwiMTgxMiI6W3sidGh1bWIiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvYTMyNzg1ZjI5OWQxZDY2MjdjYjE4MTI2Nzc5ZDkxYTJcL3dcL3RcL3d0MDktcHVycGxlX21haW5fMS5qcGciLCJpbWciOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvMjA3ZTIzMjEzY2Y2MzZjY2RlZjIwNTA5OGNmM2M4YTNcL3dcL3RcL3d0MDktcHVycGxlX21haW5fMS5qcGciLCJmdWxsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcLzc0YzEwNTdmNzk5MWI0ZWRiMmJjN2JkYWE5NGRlOTMzXC93XC90XC93dDA5LXB1cnBsZV9tYWluXzEuanBnIiwiY2FwdGlvbiI6IiIsInBvc2l0aW9uIjoiMSIsImlzTWFpbiI6dHJ1ZSwidHlwZSI6ImltYWdlIiwidmlkZW9VcmwiOm51bGx9XSwiMTgxMyI6W3sidGh1bWIiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvYTMyNzg1ZjI5OWQxZDY2MjdjYjE4MTI2Nzc5ZDkxYTJcL3dcL3RcL3d0MDktd2hpdGVfbWFpbl8xLmpwZyIsImltZyI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC8yMDdlMjMyMTNjZjYzNmNjZGVmMjA1MDk4Y2YzYzhhM1wvd1wvdFwvd3QwOS13aGl0ZV9tYWluXzEuanBnIiwiZnVsbCI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC83NGMxMDU3Zjc5OTFiNGVkYjJiYzdiZGFhOTRkZTkzM1wvd1wvdFwvd3QwOS13aGl0ZV9tYWluXzEuanBnIiwiY2FwdGlvbiI6IiIsInBvc2l0aW9uIjoiMSIsImlzTWFpbiI6dHJ1ZSwidHlwZSI6ImltYWdlIiwidmlkZW9VcmwiOm51bGx9LHsidGh1bWIiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvYTMyNzg1ZjI5OWQxZDY2MjdjYjE4MTI2Nzc5ZDkxYTJcL3dcL3RcL3d0MDktd2hpdGVfYmFja18xLmpwZyIsImltZyI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC8yMDdlMjMyMTNjZjYzNmNjZGVmMjA1MDk4Y2YzYzhhM1wvd1wvdFwvd3QwOS13aGl0ZV9iYWNrXzEuanBnIiwiZnVsbCI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC83NGMxMDU3Zjc5OTFiNGVkYjJiYzdiZGFhOTRkZTkzM1wvd1wvdFwvd3QwOS13aGl0ZV9iYWNrXzEuanBnIiwiY2FwdGlvbiI6IiIsInBvc2l0aW9uIjoiMiIsImlzTWFpbiI6ZmFsc2UsInR5cGUiOiJpbWFnZSIsInZpZGVvVXJsIjpudWxsfV0sIjE4MTQiOlt7InRodW1iIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcL2EzMjc4NWYyOTlkMWQ2NjI3Y2IxODEyNjc3OWQ5MWEyXC93XC90XC93dDA5LXllbGxvd19tYWluXzEuanBnIiwiaW1nIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcLzIwN2UyMzIxM2NmNjM2Y2NkZWYyMDUwOThjZjNjOGEzXC93XC90XC93dDA5LXllbGxvd19tYWluXzEuanBnIiwiZnVsbCI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC83NGMxMDU3Zjc5OTFiNGVkYjJiYzdiZGFhOTRkZTkzM1wvd1wvdFwvd3QwOS15ZWxsb3dfbWFpbl8xLmpwZyIsImNhcHRpb24iOiIiLCJwb3NpdGlvbiI6IjEiLCJpc01haW4iOnRydWUsInR5cGUiOiJpbWFnZSIsInZpZGVvVXJsIjpudWxsfV0sIjE4MTUiOlt7InRodW1iIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcL2EzMjc4NWYyOTlkMWQ2NjI3Y2IxODEyNjc3OWQ5MWEyXC93XC90XC93dDA5LXB1cnBsZV9tYWluXzEuanBnIiwiaW1nIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcLzIwN2UyMzIxM2NmNjM2Y2NkZWYyMDUwOThjZjNjOGEzXC93XC90XC93dDA5LXB1cnBsZV9tYWluXzEuanBnIiwiZnVsbCI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC83NGMxMDU3Zjc5OTFiNGVkYjJiYzdiZGFhOTRkZTkzM1wvd1wvdFwvd3QwOS1wdXJwbGVfbWFpbl8xLmpwZyIsImNhcHRpb24iOiIiLCJwb3NpdGlvbiI6IjEiLCJpc01haW4iOnRydWUsInR5cGUiOiJpbWFnZSIsInZpZGVvVXJsIjpudWxsfV0sIjE4MTYiOlt7InRodW1iIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcL2EzMjc4NWYyOTlkMWQ2NjI3Y2IxODEyNjc3OWQ5MWEyXC93XC90XC93dDA5LXdoaXRlX21haW5fMS5qcGciLCJpbWciOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvMjA3ZTIzMjEzY2Y2MzZjY2RlZjIwNTA5OGNmM2M4YTNcL3dcL3RcL3d0MDktd2hpdGVfbWFpbl8xLmpwZyIsImZ1bGwiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvNzRjMTA1N2Y3OTkxYjRlZGIyYmM3YmRhYTk0ZGU5MzNcL3dcL3RcL3d0MDktd2hpdGVfbWFpbl8xLmpwZyIsImNhcHRpb24iOiIiLCJwb3NpdGlvbiI6IjEiLCJpc01haW4iOnRydWUsInR5cGUiOiJpbWFnZSIsInZpZGVvVXJsIjpudWxsfSx7InRodW1iIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcL2EzMjc4NWYyOTlkMWQ2NjI3Y2IxODEyNjc3OWQ5MWEyXC93XC90XC93dDA5LXdoaXRlX2JhY2tfMS5qcGciLCJpbWciOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvMjA3ZTIzMjEzY2Y2MzZjY2RlZjIwNTA5OGNmM2M4YTNcL3dcL3RcL3d0MDktd2hpdGVfYmFja18xLmpwZyIsImZ1bGwiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvNzRjMTA1N2Y3OTkxYjRlZGIyYmM3YmRhYTk0ZGU5MzNcL3dcL3RcL3d0MDktd2hpdGVfYmFja18xLmpwZyIsImNhcHRpb24iOiIiLCJwb3NpdGlvbiI6IjIiLCJpc01haW4iOmZhbHNlLCJ0eXBlIjoiaW1hZ2UiLCJ2aWRlb1VybCI6bnVsbH1dLCIxODE3IjpbeyJ0aHVtYiI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC9hMzI3ODVmMjk5ZDFkNjYyN2NiMTgxMjY3NzlkOTFhMlwvd1wvdFwvd3QwOS15ZWxsb3dfbWFpbl8xLmpwZyIsImltZyI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC8yMDdlMjMyMTNjZjYzNmNjZGVmMjA1MDk4Y2YzYzhhM1wvd1wvdFwvd3QwOS15ZWxsb3dfbWFpbl8xLmpwZyIsImZ1bGwiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvNzRjMTA1N2Y3OTkxYjRlZGIyYmM3YmRhYTk0ZGU5MzNcL3dcL3RcL3d0MDkteWVsbG93X21haW5fMS5qcGciLCJjYXB0aW9uIjoiIiwicG9zaXRpb24iOiIxIiwiaXNNYWluIjp0cnVlLCJ0eXBlIjoiaW1hZ2UiLCJ2aWRlb1VybCI6bnVsbH1dfSwiaW5kZXgiOnsiMTgwMyI6eyIxNDUiOiIxNjciLCI5MyI6IjU3In0sIjE4MDQiOnsiMTQ1IjoiMTY3IiwiOTMiOiI1OSJ9LCIxODA1Ijp7IjE0NSI6IjE2NyIsIjkzIjoiNjAifSwiMTgwNiI6eyIxNDUiOiIxNjgiLCI5MyI6IjU3In0sIjE4MDciOnsiMTQ1IjoiMTY4IiwiOTMiOiI1OSJ9LCIxODA4Ijp7IjE0NSI6IjE2OCIsIjkzIjoiNjAifSwiMTgwOSI6eyIxNDUiOiIxNjkiLCI5MyI6IjU3In0sIjE4MTAiOnsiMTQ1IjoiMTY5IiwiOTMiOiI1OSJ9LCIxODExIjp7IjE0NSI6IjE2OSIsIjkzIjoiNjAifSwiMTgxMiI6eyIxNDUiOiIxNzAiLCI5MyI6IjU3In0sIjE4MTMiOnsiMTQ1IjoiMTcwIiwiOTMiOiI1OSJ9LCIxODE0Ijp7IjE0NSI6IjE3MCIsIjkzIjoiNjAifSwiMTgxNSI6eyIxNDUiOiIxNzEiLCI5MyI6IjU3In0sIjE4MTYiOnsiMTQ1IjoiMTcxIiwiOTMiOiI1OSJ9LCIxODE3Ijp7IjE0NSI6IjE3MSIsIjkzIjoiNjAifX19LAogICAgICAgICAgICAgICAgImpzb25Td2F0Y2hDb25maWciOiB7IjE0NSI6eyIxNjciOnsidHlwZSI6IjAiLCJ2YWx1ZSI6IlhTIiwibGFiZWwiOiJYUyJ9LCIxNjgiOnsidHlwZSI6IjAiLCJ2YWx1ZSI6IlMiLCJsYWJlbCI6IlMifSwiMTY5Ijp7InR5cGUiOiIwIiwidmFsdWUiOiJNIiwibGFiZWwiOiJNIn0sIjE3MCI6eyJ0eXBlIjoiMCIsInZhbHVlIjoiTCIsImxhYmVsIjoiTCJ9LCIxNzEiOnsidHlwZSI6IjAiLCJ2YWx1ZSI6IlhMIiwibGFiZWwiOiJYTCJ9fSwiOTMiOnsiNTciOnsidHlwZSI6IjEiLCJ2YWx1ZSI6IiNlZjNkZmYiLCJsYWJlbCI6IlB1cnBsZSJ9LCI1OSI6eyJ0eXBlIjoiMSIsInZhbHVlIjoiI2ZmZmZmZiIsImxhYmVsIjoiV2hpdGUifSwiNjAiOnsidHlwZSI6IjEiLCJ2YWx1ZSI6IiNmZmQ1MDAiLCJsYWJlbCI6IlllbGxvdyJ9fX0sCiAgICAgICAgICAgICAgICAibWVkaWFDYWxsYmFjayI6ICJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9zd2F0Y2hlcy9hamF4L21lZGlhLyIsCiAgICAgICAgICAgICAgICAiZ2FsbGVyeVN3aXRjaFN0cmF0ZWd5IjogInByZXBlbmQiLAogICAgICAgICAgICAgICAgImpzb25Td2F0Y2hJbWFnZVNpemVDb25maWciOiB7InN3YXRjaEltYWdlIjp7IndpZHRoIjozMCwiaGVpZ2h0IjoyMH0sInN3YXRjaFRodW1iIjp7ImhlaWdodCI6OTAsIndpZHRoIjoxMTB9fSAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICIqIiA6IHsKICAgICAgICAgICAgIk1hZ2VudG9fU3dhdGNoZXMvanMvY2F0YWxvZy1hZGQtdG8tY2FydCI6IHt9CiAgICAgICAgfQogICAgfQo8L3NjcmlwdD4KCjxzY3JpcHQ+CnJlcXVpcmUoWwogICAgImpxdWVyeSIsCiAgICAianF1ZXJ5L3VpIgpdLCBmdW5jdGlvbigkKXsKCi8vPCFbQ0RBVEFbCiAgICAkLmV4dGVuZCh0cnVlLCAkLCB7CiAgICAgICAgY2FsZW5kYXJDb25maWc6IHsKICAgICAgICAgICAgZGF5TmFtZXM6IFsiU3VuZGF5IiwiTW9uZGF5IiwiVHVlc2RheSIsIldlZG5lc2RheSIsIlRodXJzZGF5IiwiRnJpZGF5IiwiU2F0dXJkYXkiXSwKICAgICAgICAgICAgZGF5TmFtZXNNaW46IFsiU3VuIiwiTW9uIiwiVHVlIiwiV2VkIiwiVGh1IiwiRnJpIiwiU2F0Il0sCiAgICAgICAgICAgIG1vbnRoTmFtZXM6IFsiSmFudWFyeSIsIkZlYnJ1YXJ5IiwiTWFyY2giLCJBcHJpbCIsIk1heSIsIkp1bmUiLCJKdWx5IiwiQXVndXN0IiwiU2VwdGVtYmVyIiwiT2N0b2JlciIsIk5vdmVtYmVyIiwiRGVjZW1iZXIiXSwKICAgICAgICAgICAgbW9udGhOYW1lc1Nob3J0OiBbIkphbiIsIkZlYiIsIk1hciIsIkFwciIsIk1heSIsIkp1biIsIkp1bCIsIkF1ZyIsIlNlcCIsIk9jdCIsIk5vdiIsIkRlYyJdLAogICAgICAgICAgICBpbmZvVGl0bGU6ICJBYm91dCB0aGUgY2FsZW5kYXIiLAogICAgICAgICAgICBmaXJzdERheTogMCwKICAgICAgICAgICAgY2xvc2VUZXh0OiAiQ2xvc2UiLAogICAgICAgICAgICBjdXJyZW50VGV4dDogIkdvIFRvZGF5IiwKICAgICAgICAgICAgcHJldlRleHQ6ICJQcmV2aW91cyIsCiAgICAgICAgICAgIG5leHRUZXh0OiAiTmV4dCIsCiAgICAgICAgICAgIHdlZWtIZWFkZXI6ICJXSyIsCiAgICAgICAgICAgIHRpbWVUZXh0OiAiVGltZSIsCiAgICAgICAgICAgIGhvdXJUZXh0OiAiSG91ciIsCiAgICAgICAgICAgIG1pbnV0ZVRleHQ6ICJNaW51dGUiLAogICAgICAgICAgICBkYXRlRm9ybWF0OiAkLmRhdGVwaWNrZXIuUkZDXzI4MjIsCiAgICAgICAgICAgIHNob3dPbjogImJ1dHRvbiIsCiAgICAgICAgICAgIHNob3dBbmltOiAiIiwKICAgICAgICAgICAgY2hhbmdlTW9udGg6IHRydWUsCiAgICAgICAgICAgIGNoYW5nZVllYXI6IHRydWUsCiAgICAgICAgICAgIGJ1dHRvbkltYWdlT25seTogbnVsbCwKICAgICAgICAgICAgYnV0dG9uSW1hZ2U6IG51bGwsCiAgICAgICAgICAgIHNob3dCdXR0b25QYW5lbDogdHJ1ZSwKICAgICAgICAgICAgc2hvd1dlZWs6IHRydWUsCiAgICAgICAgICAgIHRpbWVGb3JtYXQ6ICcnLAogICAgICAgICAgICBzaG93VGltZTogZmFsc2UsCiAgICAgICAgICAgIHNob3dIb3VyOiBmYWxzZSwKICAgICAgICAgICAgc2hvd01pbnV0ZTogZmFsc2UKICAgICAgICB9CiAgICB9KTsKCiAgICBlblVTID0geyJtIjp7IndpZGUiOlsiSmFudWFyeSIsIkZlYnJ1YXJ5IiwiTWFyY2giLCJBcHJpbCIsIk1heSIsIkp1bmUiLCJKdWx5IiwiQXVndXN0IiwiU2VwdGVtYmVyIiwiT2N0b2JlciIsIk5vdmVtYmVyIiwiRGVjZW1iZXIiXSwiYWJiciI6WyJKYW4iLCJGZWIiLCJNYXIiLCJBcHIiLCJNYXkiLCJKdW4iLCJKdWwiLCJBdWciLCJTZXAiLCJPY3QiLCJOb3YiLCJEZWMiXX19OyAvLyBlbl9VUyBsb2NhbGUgcmVmZXJlbmNlCi8vXV0+Cgp9KTsKPC9zY3JpcHQ+CgogICAgPC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJwcm9kdWN0LW9wdGlvbnMtYm90dG9tIj4KICAgIDxkaXYgY2xhc3M9ImJveC10b2NhcnQiPgogICAgPGRpdiBjbGFzcz0iZmllbGRzZXQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmllbGQgcXR5Ij4KICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJsYWJlbCIgZm9yPSJxdHkiPjxzcGFuPlF0eTwvc3Bhbj48L2xhYmVsPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250cm9sIj4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJudW1iZXIiCiAgICAgICAgICAgICAgICAgICAgICAgbmFtZT0icXR5IgogICAgICAgICAgICAgICAgICAgICAgIGlkPSJxdHkiCiAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9IjEiCiAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IlF0eSIKICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW5wdXQtdGV4dCBxdHkiCiAgICAgICAgICAgICAgICAgICAgICAgZGF0YS12YWxpZGF0ZT0ieyZxdW90O3JlcXVpcmVkLW51bWJlciZxdW90Ozp0cnVlLCZxdW90O3ZhbGlkYXRlLWl0ZW0tcXVhbnRpdHkmcXVvdDs6eyZxdW90O21pbkFsbG93ZWQmcXVvdDs6MSwmcXVvdDttYXhBbGxvd2VkJnF1b3Q7OjEwMDAwfX0iCiAgICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhY3Rpb25zIj4KICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiCiAgICAgICAgICAgICAgICAgICAgdGl0bGU9IkFkZCB0byBDYXJ0IgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJhY3Rpb24gcHJpbWFyeSB0b2NhcnQiCiAgICAgICAgICAgICAgICAgICAgaWQ9InByb2R1Y3QtYWRkdG9jYXJ0LWJ1dHRvbiI+CiAgICAgICAgICAgICAgICA8c3Bhbj5BZGQgdG8gQ2FydDwvc3Bhbj4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgIAo8ZGl2IGlkPSJpbnN0YW50LXB1cmNoYXNlIiBkYXRhLWJpbmQ9InNjb3BlOidpbnN0YW50LXB1cmNoYXNlJyI+CiAgICA8IS0tIGtvIHRlbXBsYXRlOiBnZXRUZW1wbGF0ZSgpIC0tPjwhLS0gL2tvIC0tPgo8L2Rpdj4KPHNjcmlwdCB0eXBlPSJ0ZXh0L3gtbWFnZW50by1pbml0Ij4KICAgIHsKICAgICAgICAiI2luc3RhbnQtcHVyY2hhc2UiOiB7CiAgICAgICAgICAgICJNYWdlbnRvX1VpL2pzL2NvcmUvYXBwIjogeyJjb21wb25lbnRzIjp7Imluc3RhbnQtcHVyY2hhc2UiOnsiY29tcG9uZW50IjoiTWFnZW50b19JbnN0YW50UHVyY2hhc2VcL2pzXC92aWV3XC9pbnN0YW50LXB1cmNoYXNlIiwiY29uZmlnIjp7InRlbXBsYXRlIjoiTWFnZW50b19JbnN0YW50UHVyY2hhc2VcL2luc3RhbnQtcHVyY2hhc2UiLCJidXR0b25UZXh0IjoiSW5zdGFudCBQdXJjaGFzZSIsInB1cmNoYXNlVXJsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvaW5zdGFudHB1cmNoYXNlXC9idXR0b25cL3BsYWNlT3JkZXJcLyJ9fX19ICAgICAgICB9CiAgICB9Cjwvc2NyaXB0PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CjwvZGl2Pgo8c2NyaXB0IHR5cGU9InRleHQveC1tYWdlbnRvLWluaXQiPgogICAgewogICAgICAgICIjcHJvZHVjdF9hZGR0b2NhcnRfZm9ybSI6IHsKICAgICAgICAgICAgIk1hZ2VudG9fQ2F0YWxvZy9qcy92YWxpZGF0ZS1wcm9kdWN0Ijoge30KICAgICAgICB9CiAgICB9Cjwvc2NyaXB0Pgo8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Zvcm0+CjwvZGl2Pgo8c2NyaXB0PgogICAgcmVxdWlyZShbCiAgICAgICAgJ2pxdWVyeScsCiAgICAgICAgJ3ByaWNlQm94JwogICAgXSwgZnVuY3Rpb24oJCl7CiAgICAgICAgdmFyIGRhdGFQcmljZUJveFNlbGVjdG9yID0gJ1tkYXRhLXJvbGU9cHJpY2VCb3hdJywKICAgICAgICAgICAgZGF0YVByb2R1Y3RJZFNlbGVjdG9yID0gJ1tkYXRhLXByb2R1Y3QtaWQ9MTgxOF0nLAogICAgICAgICAgICBwcmljZUJveGVzID0gJChkYXRhUHJpY2VCb3hTZWxlY3RvciArIGRhdGFQcm9kdWN0SWRTZWxlY3Rvcik7CgogICAgICAgIHByaWNlQm94ZXMgPSBwcmljZUJveGVzLmZpbHRlcihmdW5jdGlvbihpbmRleCwgZWxlbSl7CiAgICAgICAgICAgIHJldHVybiAhJChlbGVtKS5maW5kKCcucHJpY2UtZnJvbScpLmxlbmd0aDsKICAgICAgICB9KTsKCiAgICAgICAgcHJpY2VCb3hlcy5wcmljZUJveCh7J3ByaWNlQ29uZmlnJzogeyJwcm9kdWN0SWQiOiIxODE4IiwicHJpY2VGb3JtYXQiOnsicGF0dGVybiI6IiQlcyIsInByZWNpc2lvbiI6MiwicmVxdWlyZWRQcmVjaXNpb24iOjIsImRlY2ltYWxTeW1ib2wiOiIuIiwiZ3JvdXBTeW1ib2wiOiIsIiwiZ3JvdXBMZW5ndGgiOjMsImludGVnZXJSZXF1aXJlZCI6ZmFsc2V9LCJwcmljZXMiOnsib2xkUHJpY2UiOnsiYW1vdW50IjozNCwiYWRqdXN0bWVudHMiOltdfSwiYmFzZVByaWNlIjp7ImFtb3VudCI6MzQsImFkanVzdG1lbnRzIjpbXX0sImZpbmFsUHJpY2UiOnsiYW1vdW50IjozNCwiYWRqdXN0bWVudHMiOltdfX0sImlkU3VmZml4IjoiX2Nsb25lIiwidGllclByaWNlcyI6W10sImNhbGN1bGF0aW9uQWxnb3JpdGhtIjoiVE9UQUxfQkFTRV9DQUxDVUxBVElPTiJ9fSk7CiAgICB9KTsKPC9zY3JpcHQ+CjxkaXYgY2xhc3M9InByb2R1Y3Qtc29jaWFsLWxpbmtzIj48ZGl2IGNsYXNzPSJwcm9kdWN0LWFkZHRvLWxpbmtzIiBkYXRhLXJvbGU9ImFkZC10by1saW5rcyI+CiAgICAgICAgPGEgaHJlZj0iIyIKICAgICAgIGNsYXNzPSJhY3Rpb24gdG93aXNobGlzdCIKICAgICAgIGRhdGEtcG9zdD0neyJhY3Rpb24iOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC93aXNobGlzdFwvaW5kZXhcL2FkZFwvIiwiZGF0YSI6eyJwcm9kdWN0IjoiMTgxOCIsInVlbmMiOiJhSFIwY0RvdkwyMWhaMlZ1ZEc4dGRHVnpkQzVtYVc1dmJHOW5lUzVqYjIwdWJYa3ZZbkpsWVhSb1pTMWxZWE41TFhSaGJtc3VhSFJ0YkEsLCJ9fScKICAgICAgIGRhdGEtYWN0aW9uPSJhZGQtdG8td2lzaGxpc3QiPjxzcGFuPkFkZCB0byBXaXNoIExpc3Q8L3NwYW4+PC9hPgo8c2NyaXB0IHR5cGU9InRleHQveC1tYWdlbnRvLWluaXQiPgogICAgewogICAgICAgICJib2R5IjogewogICAgICAgICAgICAiYWRkVG9XaXNobGlzdCI6IHsicHJvZHVjdFR5cGUiOiJjb25maWd1cmFibGUifSAgICAgICAgfQogICAgfQo8L3NjcmlwdD4KCjxhIGhyZWY9IiMiIGRhdGEtcG9zdD0neyJhY3Rpb24iOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9jYXRhbG9nXC9wcm9kdWN0X2NvbXBhcmVcL2FkZFwvIiwiZGF0YSI6eyJwcm9kdWN0IjoiMTgxOCIsInVlbmMiOiJhSFIwY0RvdkwyMWhaMlZ1ZEc4dGRHVnpkQzVtYVc1dmJHOW5lUzVqYjIwdWJYa3ZZbkpsWVhSb1pTMWxZWE41TFhSaGJtc3VhSFJ0YkEsLCJ9fScKICAgICAgICBkYXRhLXJvbGU9ImFkZC10by1saW5rcyIKICAgICAgICBjbGFzcz0iYWN0aW9uIHRvY29tcGFyZSI+PHNwYW4+QWRkIHRvIENvbXBhcmU8L3NwYW4+PC9hPgo8L2Rpdj4KICAgIDxhIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L3NlbmRmcmllbmQvcHJvZHVjdC9zZW5kL2lkLzE4MTgvIgogICAgICAgY2xhc3M9ImFjdGlvbiBtYWlsdG8gZnJpZW5kIj48c3Bhbj5FbWFpbDwvc3Bhbj48L2E+CjwvZGl2Pgo8L2Rpdj48ZGl2IGNsYXNzPSJwcm9kdWN0IG1lZGlhIj48YSBpZD0iZ2FsbGVyeS1wcmV2LWFyZWEiIHRhYmluZGV4PSItMSI+PC9hPgo8ZGl2IGNsYXNzPSJhY3Rpb24tc2tpcC13cmFwcGVyIj48YSBjbGFzcz0iYWN0aW9uIHNraXAgZ2FsbGVyeS1uZXh0LWFyZWEiIGhyZWY9IiNnYWxsZXJ5LW5leHQtYXJlYSI+PHNwYW4+U2tpcCB0byB0aGUgZW5kIG9mIHRoZSBpbWFnZXMgZ2FsbGVyeTwvc3Bhbj48L2E+CjwvZGl2PjxkaXYgY2xhc3M9ImdhbGxlcnktcGxhY2Vob2xkZXIgX2Jsb2NrLWNvbnRlbnQtbG9hZGluZyIgZGF0YS1nYWxsZXJ5LXJvbGU9ImdhbGxlcnktcGxhY2Vob2xkZXIiPgogICAgPGRpdiBkYXRhLXJvbGU9ImxvYWRlciIgY2xhc3M9ImxvYWRpbmctbWFzayI+CiAgICAgICAgPGRpdiBjbGFzcz0ibG9hZGVyIj4KICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L3B1Yi9zdGF0aWMvdmVyc2lvbjE1NTU0ODg2MzAvZnJvbnRlbmQvTWFnZW50by9sdW1hL2VuX1VTL2ltYWdlcy9sb2FkZXItMS5naWYiCiAgICAgICAgICAgICAgICAgYWx0PSJMb2FkaW5nLi4uIj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2Rpdj4KPCEtLUZpeCBmb3IganVtcGluZyBjb250ZW50LiBMb2FkZXIgbXVzdCBiZSB0aGUgc2FtZSBzaXplIGFzIGdhbGxlcnkuLS0+CjxzY3JpcHQ+CiAgICB2YXIgY29uZmlnID0gewogICAgICAgICAgICAid2lkdGgiOiA3MDAsCiAgICAgICAgICAgICJ0aHVtYmhlaWdodCI6IDExMCwKICAgICAgICAgICAgIm5hdnR5cGUiOiAic2xpZGVzIiwKICAgICAgICAgICAgImhlaWdodCI6IDcwMCAgICAgICAgfSwKICAgICAgICB0aHVtYkJhckhlaWdodCA9IDAsCiAgICAgICAgbG9hZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtZ2FsbGVyeS1yb2xlPSJnYWxsZXJ5LXBsYWNlaG9sZGVyIl0gW2RhdGEtcm9sZT0ibG9hZGVyIl0nKVswXTsKCiAgICBpZiAoY29uZmlnLm5hdnR5cGUgPT09ICdob3Jpem9udGFsJykgewogICAgICAgIHRodW1iQmFySGVpZ2h0ID0gY29uZmlnLnRodW1iaGVpZ2h0OwogICAgfQoKICAgIGxvYWRlci5zdHlsZS5wYWRkaW5nQm90dG9tID0gKCBjb25maWcuaGVpZ2h0IC8gY29uZmlnLndpZHRoICogMTAwKSArICIlIjsKPC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC94LW1hZ2VudG8taW5pdCI+CiAgICB7CiAgICAgICAgIltkYXRhLWdhbGxlcnktcm9sZT1nYWxsZXJ5LXBsYWNlaG9sZGVyXSI6IHsKICAgICAgICAgICAgIm1hZ2UvZ2FsbGVyeS9nYWxsZXJ5IjogewogICAgICAgICAgICAgICAgIm1peGlucyI6WyJtYWduaWZpZXIvbWFnbmlmeSJdLAogICAgICAgICAgICAgICAgIm1hZ25pZmllck9wdHMiOiB7ImZ1bGxzY3JlZW56b29tIjoiMjAiLCJ0b3AiOiIiLCJsZWZ0IjoiIiwid2lkdGgiOiIiLCJoZWlnaHQiOiIiLCJldmVudFR5cGUiOiJob3ZlciIsImVuYWJsZWQiOmZhbHNlLCJtb2RlIjoib3V0c2lkZSJ9LAogICAgICAgICAgICAgICAgImRhdGEiOiBbeyJ0aHVtYiI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC9hMzI3ODVmMjk5ZDFkNjYyN2NiMTgxMjY3NzlkOTFhMlwvd1wvdFwvd3QwOS13aGl0ZV9tYWluXzEuanBnIiwiaW1nIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcLzIwN2UyMzIxM2NmNjM2Y2NkZWYyMDUwOThjZjNjOGEzXC93XC90XC93dDA5LXdoaXRlX21haW5fMS5qcGciLCJmdWxsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcLzc0YzEwNTdmNzk5MWI0ZWRiMmJjN2JkYWE5NGRlOTMzXC93XC90XC93dDA5LXdoaXRlX21haW5fMS5qcGciLCJjYXB0aW9uIjoiQnJlYXRoZS1FYXN5IFRhbmsiLCJwb3NpdGlvbiI6IjEiLCJpc01haW4iOnRydWUsInR5cGUiOiJpbWFnZSIsInZpZGVvVXJsIjpudWxsfSx7InRodW1iIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcL2EzMjc4NWYyOTlkMWQ2NjI3Y2IxODEyNjc3OWQ5MWEyXC93XC90XC93dDA5LXdoaXRlX2JhY2tfMS5qcGciLCJpbWciOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvMjA3ZTIzMjEzY2Y2MzZjY2RlZjIwNTA5OGNmM2M4YTNcL3dcL3RcL3d0MDktd2hpdGVfYmFja18xLmpwZyIsImZ1bGwiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvNzRjMTA1N2Y3OTkxYjRlZGIyYmM3YmRhYTk0ZGU5MzNcL3dcL3RcL3d0MDktd2hpdGVfYmFja18xLmpwZyIsImNhcHRpb24iOiJCcmVhdGhlLUVhc3kgVGFuayIsInBvc2l0aW9uIjoiMiIsImlzTWFpbiI6ZmFsc2UsInR5cGUiOiJpbWFnZSIsInZpZGVvVXJsIjpudWxsfV0sCiAgICAgICAgICAgICAgICAib3B0aW9ucyI6IHsKICAgICAgICAgICAgICAgICAgICAibmF2IjogInRodW1icyIsCiAgICAgICAgICAgICAgICAgICAgImxvb3AiOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICJrZXlib2FyZCI6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgImFycm93cyI6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgImFsbG93ZnVsbHNjcmVlbiI6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgInNob3dDYXB0aW9uIjogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgIndpZHRoIjogIjcwMCIsCiAgICAgICAgICAgICAgICAgICAgInRodW1id2lkdGgiOiAiODgiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ0aHVtYmhlaWdodCI6IDExMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJoZWlnaHQiOiA3MDAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidHJhbnNpdGlvbmR1cmF0aW9uIjogNTAwLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInRyYW5zaXRpb24iOiAic2xpZGUiLAogICAgICAgICAgICAgICAgICAgICJuYXZhcnJvd3MiOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICJuYXZ0eXBlIjogInNsaWRlcyIsCiAgICAgICAgICAgICAgICAgICAgIm5hdmRpciI6ICJob3Jpem9udGFsIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJmdWxsc2NyZWVuIjogewogICAgICAgICAgICAgICAgICAgICJuYXYiOiAidGh1bWJzIiwKICAgICAgICAgICAgICAgICAgICAibG9vcCI6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgIm5hdmRpciI6ICJob3Jpem9udGFsIiwKICAgICAgICAgICAgICAgICAgICAibmF2YXJyb3dzIjogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgIm5hdnR5cGUiOiAic2xpZGVzIiwKICAgICAgICAgICAgICAgICAgICAiYXJyb3dzIjogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAic2hvd0NhcHRpb24iOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidHJhbnNpdGlvbmR1cmF0aW9uIjogNTAwLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInRyYW5zaXRpb24iOiAic2xpZGUiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgImJyZWFrcG9pbnRzIjogeyJtb2JpbGUiOnsiY29uZGl0aW9ucyI6eyJtYXgtd2lkdGgiOiI3NjdweCJ9LCJvcHRpb25zIjp7Im9wdGlvbnMiOnsibmF2IjoiZG90cyJ9fX19ICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KPC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC94LW1hZ2VudG8taW5pdCI+CiAgICB7CiAgICAgICAgIltkYXRhLWdhbGxlcnktcm9sZT1nYWxsZXJ5LXBsYWNlaG9sZGVyXSI6IHsKICAgICAgICAgICAgIk1hZ2VudG9fUHJvZHVjdFZpZGVvL2pzL2ZvdG9yYW1hLWFkZC12aWRlby1ldmVudHMiOiB7CiAgICAgICAgICAgICAgICAidmlkZW9EYXRhIjogW3sibWVkaWFUeXBlIjoiaW1hZ2UiLCJ2aWRlb1VybCI6bnVsbCwiaXNCYXNlIjp0cnVlfSx7Im1lZGlhVHlwZSI6ImltYWdlIiwidmlkZW9VcmwiOm51bGwsImlzQmFzZSI6ZmFsc2V9XSwKICAgICAgICAgICAgICAgICJ2aWRlb1NldHRpbmdzIjogW3sicGxheUlmQmFzZSI6IjAiLCJzaG93UmVsYXRlZCI6IjAiLCJ2aWRlb0F1dG9SZXN0YXJ0IjoiMCJ9XSwKICAgICAgICAgICAgICAgICJvcHRpb25zVmlkZW9EYXRhIjogeyIxODAzIjpbeyJtZWRpYVR5cGUiOiJpbWFnZSIsInZpZGVvVXJsIjpudWxsLCJpc0Jhc2UiOnRydWV9XSwiMTgwNCI6W3sibWVkaWFUeXBlIjoiaW1hZ2UiLCJ2aWRlb1VybCI6bnVsbCwiaXNCYXNlIjp0cnVlfSx7Im1lZGlhVHlwZSI6ImltYWdlIiwidmlkZW9VcmwiOm51bGwsImlzQmFzZSI6ZmFsc2V9XSwiMTgwNSI6W3sibWVkaWFUeXBlIjoiaW1hZ2UiLCJ2aWRlb1VybCI6bnVsbCwiaXNCYXNlIjp0cnVlfV0sIjE4MDYiOlt7Im1lZGlhVHlwZSI6ImltYWdlIiwidmlkZW9VcmwiOm51bGwsImlzQmFzZSI6dHJ1ZX1dLCIxODA3IjpbeyJtZWRpYVR5cGUiOiJpbWFnZSIsInZpZGVvVXJsIjpudWxsLCJpc0Jhc2UiOnRydWV9LHsibWVkaWFUeXBlIjoiaW1hZ2UiLCJ2aWRlb1VybCI6bnVsbCwiaXNCYXNlIjpmYWxzZX1dLCIxODA4IjpbeyJtZWRpYVR5cGUiOiJpbWFnZSIsInZpZGVvVXJsIjpudWxsLCJpc0Jhc2UiOnRydWV9XSwiMTgwOSI6W3sibWVkaWFUeXBlIjoiaW1hZ2UiLCJ2aWRlb1VybCI6bnVsbCwiaXNCYXNlIjp0cnVlfV0sIjE4MTAiOlt7Im1lZGlhVHlwZSI6ImltYWdlIiwidmlkZW9VcmwiOm51bGwsImlzQmFzZSI6dHJ1ZX0seyJtZWRpYVR5cGUiOiJpbWFnZSIsInZpZGVvVXJsIjpudWxsLCJpc0Jhc2UiOmZhbHNlfV0sIjE4MTEiOlt7Im1lZGlhVHlwZSI6ImltYWdlIiwidmlkZW9VcmwiOm51bGwsImlzQmFzZSI6dHJ1ZX1dLCIxODEyIjpbeyJtZWRpYVR5cGUiOiJpbWFnZSIsInZpZGVvVXJsIjpudWxsLCJpc0Jhc2UiOnRydWV9XSwiMTgxMyI6W3sibWVkaWFUeXBlIjoiaW1hZ2UiLCJ2aWRlb1VybCI6bnVsbCwiaXNCYXNlIjp0cnVlfSx7Im1lZGlhVHlwZSI6ImltYWdlIiwidmlkZW9VcmwiOm51bGwsImlzQmFzZSI6ZmFsc2V9XSwiMTgxNCI6W3sibWVkaWFUeXBlIjoiaW1hZ2UiLCJ2aWRlb1VybCI6bnVsbCwiaXNCYXNlIjp0cnVlfV0sIjE4MTUiOlt7Im1lZGlhVHlwZSI6ImltYWdlIiwidmlkZW9VcmwiOm51bGwsImlzQmFzZSI6dHJ1ZX1dLCIxODE2IjpbeyJtZWRpYVR5cGUiOiJpbWFnZSIsInZpZGVvVXJsIjpudWxsLCJpc0Jhc2UiOnRydWV9LHsibWVkaWFUeXBlIjoiaW1hZ2UiLCJ2aWRlb1VybCI6bnVsbCwiaXNCYXNlIjpmYWxzZX1dLCIxODE3IjpbeyJtZWRpYVR5cGUiOiJpbWFnZSIsInZpZGVvVXJsIjpudWxsLCJpc0Jhc2UiOnRydWV9XX0gICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQo8L3NjcmlwdD4KPGRpdiBjbGFzcz0iYWN0aW9uLXNraXAtd3JhcHBlciI+PGEgY2xhc3M9ImFjdGlvbiBza2lwIGdhbGxlcnktcHJldi1hcmVhIiBocmVmPSIjZ2FsbGVyeS1wcmV2LWFyZWEiPjxzcGFuPlNraXAgdG8gdGhlIGJlZ2lubmluZyBvZiB0aGUgaW1hZ2VzIGdhbGxlcnk8L3NwYW4+PC9hPgo8L2Rpdj48YSBpZD0iZ2FsbGVyeS1uZXh0LWFyZWEiIHRhYmluZGV4PSItMSI+PC9hPgo8L2Rpdj4gICAgPGRpdiBjbGFzcz0icHJvZHVjdCBpbmZvIGRldGFpbGVkIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3QgZGF0YSBpdGVtcyIgZGF0YS1tYWdlLWluaXQ9J3sidGFicyI6eyJvcGVuZWRTdGF0ZSI6ImFjdGl2ZSJ9fSc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGF0YSBpdGVtIHRpdGxlIgogICAgICAgICAgICAgICAgICAgICBhcmlhLWxhYmVsbGVkYnk9InRhYi1sYWJlbC1kZXNjcmlwdGlvbi10aXRsZSIKICAgICAgICAgICAgICAgICAgICAgZGF0YS1yb2xlPSJjb2xsYXBzaWJsZSIgaWQ9InRhYi1sYWJlbC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImRhdGEgc3dpdGNoIgogICAgICAgICAgICAgICAgICAgICAgIHRhYmluZGV4PSItMSIKICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRvZ2dsZT0ic3dpdGNoIgogICAgICAgICAgICAgICAgICAgICAgIGhyZWY9IiNkZXNjcmlwdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICBpZD0idGFiLWxhYmVsLWRlc2NyaXB0aW9uLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgRGV0YWlscyAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkYXRhIGl0ZW0gY29udGVudCIgaWQ9ImRlc2NyaXB0aW9uIiBkYXRhLXJvbGU9ImNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgIAo8ZGl2IGNsYXNzPSJwcm9kdWN0IGF0dHJpYnV0ZSBkZXNjcmlwdGlvbiI+CiAgICAgICAgPGRpdiBjbGFzcz0idmFsdWUiID48cD5UaGUgQnJlYXRoZSBFYXN5IFRhbmsgaXMgc28gc29mdCwgbGlnaHR3ZWlnaHQsIGFuZCBjb21mb3J0YWJsZSwgeW91IHdvbid0IGV2ZW4ga25vdyBpdCdzIHRoZXJlIC0tIHVudGlsIGl0cyBoaWdoLXRlY2ggQ29jb25hJnJlZzsgZmFicmljIHN0YXJ0cyB3aWNraW5nIHN3ZWF0IGF3YXkgZnJvbSB5b3VyIGJvZHkgdG8gaGVscCB5b3Ugc3RheSBkcnkgYW5kIGZvY3VzZWQuIExheWVyIGl0IG92ZXIgeW91ciBmYXZvcml0ZSBzcG9ydHMgYnJhIGFuZCBnZXQgbW92aW5nLjwvcD4KPHA+JmJ1bGw7IE1hY2hpbmUgd2FzaC9kcnkuPGJyIC8+JmJ1bGw7IENvY29uYSZyZWc7IGZhYnJpYy48L3A+PC9kaXY+CjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGF0YSBpdGVtIHRpdGxlIgogICAgICAgICAgICAgICAgICAgICBhcmlhLWxhYmVsbGVkYnk9InRhYi1sYWJlbC1hZGRpdGlvbmFsLXRpdGxlIgogICAgICAgICAgICAgICAgICAgICBkYXRhLXJvbGU9ImNvbGxhcHNpYmxlIiBpZD0idGFiLWxhYmVsLWFkZGl0aW9uYWwiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJkYXRhIHN3aXRjaCIKICAgICAgICAgICAgICAgICAgICAgICB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10b2dnbGU9InN3aXRjaCIKICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIjYWRkaXRpb25hbCIKICAgICAgICAgICAgICAgICAgICAgICBpZD0idGFiLWxhYmVsLWFkZGl0aW9uYWwtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBNb3JlIEluZm9ybWF0aW9uICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRhdGEgaXRlbSBjb250ZW50IiBpZD0iYWRkaXRpb25hbCIgZGF0YS1yb2xlPSJjb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWRkaXRpb25hbC1hdHRyaWJ1dGVzLXdyYXBwZXIgdGFibGUtd3JhcHBlciI+CiAgICAgICAgPHRhYmxlIGNsYXNzPSJkYXRhIHRhYmxlIGFkZGl0aW9uYWwtYXR0cmlidXRlcyIgaWQ9InByb2R1Y3QtYXR0cmlidXRlLXNwZWNzLXRhYmxlIj4KICAgICAgICAgICAgPGNhcHRpb24gY2xhc3M9InRhYmxlLWNhcHRpb24iPk1vcmUgSW5mb3JtYXRpb248L2NhcHRpb24+CiAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9ImNvbCBsYWJlbCIgc2NvcGU9InJvdyI+U3R5bGU8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29sIGRhdGEiIGRhdGEtdGg9IlN0eWxlIj5UYW5rPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJjb2wgbGFiZWwiIHNjb3BlPSJyb3ciPk1hdGVyaWFsPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbCBkYXRhIiBkYXRhLXRoPSJNYXRlcmlhbCI+Q29jb25hJnJlZzsgcGVyZm9ybWFuY2UgZmFicmljLCBDb3R0b248L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9ImNvbCBsYWJlbCIgc2NvcGU9InJvdyI+UGF0dGVybjwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wgZGF0YSIgZGF0YS10aD0iUGF0dGVybiI+U29saWQ8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9ImNvbCBsYWJlbCIgc2NvcGU9InJvdyI+Q2xpbWF0ZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wgZGF0YSIgZGF0YS10aD0iQ2xpbWF0ZSI+SW5kb29yLCBXYXJtPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgPC90YWJsZT4KICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGF0YSBpdGVtIHRpdGxlIgogICAgICAgICAgICAgICAgICAgICBhcmlhLWxhYmVsbGVkYnk9InRhYi1sYWJlbC1yZXZpZXdzLXRpdGxlIgogICAgICAgICAgICAgICAgICAgICBkYXRhLXJvbGU9ImNvbGxhcHNpYmxlIiBpZD0idGFiLWxhYmVsLXJldmlld3MiPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJkYXRhIHN3aXRjaCIKICAgICAgICAgICAgICAgICAgICAgICB0YWJpbmRleD0iLTEiCiAgICAgICAgICAgICAgICAgICAgICAgZGF0YS10b2dnbGU9InN3aXRjaCIKICAgICAgICAgICAgICAgICAgICAgICBocmVmPSIjcmV2aWV3cyIKICAgICAgICAgICAgICAgICAgICAgICBpZD0idGFiLWxhYmVsLXJldmlld3MtdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICBSZXZpZXdzIDxzcGFuIGNsYXNzPSJjb3VudGVyIj4yPC9zcGFuPiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkYXRhIGl0ZW0gY29udGVudCIgaWQ9InJldmlld3MiIGRhdGEtcm9sZT0iY29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0icHJvZHVjdC1yZXZpZXctY29udGFpbmVyIiBkYXRhLXJvbGU9InByb2R1Y3QtcmV2aWV3Ij48L2Rpdj4KPGRpdiBjbGFzcz0iYmxvY2sgcmV2aWV3LWFkZCI+CiAgICA8ZGl2IGNsYXNzPSJibG9jay10aXRsZSI+PHN0cm9uZz5Xcml0ZSBZb3VyIE93biBSZXZpZXc8L3N0cm9uZz48L2Rpdj4KPGRpdiBjbGFzcz0iYmxvY2stY29udGVudCI+Cjxmb3JtIGFjdGlvbj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvcmV2aWV3L3Byb2R1Y3QvcG9zdC9pZC8xODE4LyIgY2xhc3M9InJldmlldy1mb3JtIiBtZXRob2Q9InBvc3QiIGlkPSJyZXZpZXctZm9ybSIgZGF0YS1yb2xlPSJwcm9kdWN0LXJldmlldy1mb3JtIiBkYXRhLWJpbmQ9InNjb3BlOiAncmV2aWV3LWZvcm0nIj4KICAgIDxpbnB1dCBuYW1lPSJmb3JtX2tleSIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0iQUY2MGI4cGlmVXdGd0FYYSIgLz4gICAgICAgIDxmaWVsZHNldCBjbGFzcz0iZmllbGRzZXQgcmV2aWV3LWZpZWxkc2V0IiBkYXRhLWhhc3JlcXVpcmVkPSImI3gyQTsmI3gyMDtSZXF1aXJlZCYjeDIwO0ZpZWxkcyI+CiAgICAgICAgPGxlZ2VuZCBjbGFzcz0ibGVnZW5kIHJldmlldy1sZWdlbmQiPjxzcGFuPllvdSYjMDM5O3JlIHJldmlld2luZzo8L3NwYW4+PHN0cm9uZz5CcmVhdGhlLUVhc3kgVGFuazwvc3Ryb25nPjwvbGVnZW5kPjxiciAvPgogICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImlucHV0LW1lc3NhZ2UtYm94Ij48L3NwYW4+CiAgICAgICAgPGZpZWxkc2V0IGNsYXNzPSJmaWVsZCByZXF1aXJlZCByZXZpZXctZmllbGQtcmF0aW5ncyI+CiAgICAgICAgICAgIDxsZWdlbmQgY2xhc3M9ImxhYmVsIj48c3Bhbj5Zb3VyIFJhdGluZzwvc3Bhbj48L2xlZ2VuZD48YnIvPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250cm9sIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5lc3RlZCIgaWQ9InByb2R1Y3QtcmV2aWV3LXRhYmxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWVsZCBjaG9pY2UgcmV2aWV3LWZpZWxkLXJhdGluZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImxhYmVsIiBpZD0iUmF0aW5nX3JhdGluZ19sYWJlbCI+PHNwYW4+UmF0aW5nPC9zcGFuPjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250cm9sIHJldmlldy1jb250cm9sLXZvdGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9InJhZGlvIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJyYXRpbmdzWzRdIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0iUmF0aW5nXzEiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPSIxNiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InJhZGlvIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXZhbGlkYXRlPSJ7J3JhdGluZy1yZXF1aXJlZCc6dHJ1ZX0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWxsZWRieT0iUmF0aW5nX3JhdGluZ19sYWJlbCBSYXRpbmdfMV9sYWJlbCIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InJhdGluZy0xIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3I9IlJhdGluZ18xIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iMSYjeDIwO3N0YXIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJSYXRpbmdfMV9sYWJlbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPjEgc3Rhcjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9InJhZGlvIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJyYXRpbmdzWzRdIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0iUmF0aW5nXzIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPSIxNyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InJhZGlvIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXZhbGlkYXRlPSJ7J3JhdGluZy1yZXF1aXJlZCc6dHJ1ZX0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWxsZWRieT0iUmF0aW5nX3JhdGluZ19sYWJlbCBSYXRpbmdfMl9sYWJlbCIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InJhdGluZy0yIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3I9IlJhdGluZ18yIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iMiYjeDIwO3N0YXJzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0iUmF0aW5nXzJfbGFiZWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj4yIHN0YXJzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0icmFkaW8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9InJhdGluZ3NbNF0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJSYXRpbmdfMyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9IjE4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0icmFkaW8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtdmFsaWRhdGU9InsncmF0aW5nLXJlcXVpcmVkJzp0cnVlfSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJpYS1sYWJlbGxlZGJ5PSJSYXRpbmdfcmF0aW5nX2xhYmVsIFJhdGluZ18zX2xhYmVsIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0icmF0aW5nLTMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcj0iUmF0aW5nXzMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPSIzJiN4MjA7c3RhcnMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJSYXRpbmdfM19sYWJlbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPjMgc3RhcnM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJyYWRpbyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT0icmF0aW5nc1s0XSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9IlJhdGluZ180IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT0iMTkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJyYWRpbyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS12YWxpZGF0ZT0ieydyYXRpbmctcmVxdWlyZWQnOnRydWV9IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmlhLWxhYmVsbGVkYnk9IlJhdGluZ19yYXRpbmdfbGFiZWwgUmF0aW5nXzRfbGFiZWwiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJyYXRpbmctNCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yPSJSYXRpbmdfNCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IjQmI3gyMDtzdGFycyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9IlJhdGluZ180X2xhYmVsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+NCBzdGFyczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9InJhZGlvIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJyYXRpbmdzWzRdIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0iUmF0aW5nXzUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPSIyMCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InJhZGlvIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXZhbGlkYXRlPSJ7J3JhdGluZy1yZXF1aXJlZCc6dHJ1ZX0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWxsZWRieT0iUmF0aW5nX3JhdGluZ19sYWJlbCBSYXRpbmdfNV9sYWJlbCIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InJhdGluZy01IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3I9IlJhdGluZ181IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT0iNSYjeDIwO3N0YXJzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0iUmF0aW5nXzVfbGFiZWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj41IHN0YXJzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJ2YWxpZGF0ZV9yYXRpbmciIGNsYXNzPSJ2YWxpZGF0ZS1yYXRpbmciIHZhbHVlPSIiIC8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZmllbGRzZXQ+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIHJldmlldy1maWVsZC1uaWNrbmFtZSByZXF1aXJlZCI+CiAgICAgICAgICAgIDxsYWJlbCBmb3I9Im5pY2tuYW1lX2ZpZWxkIiBjbGFzcz0ibGFiZWwiPjxzcGFuPk5pY2tuYW1lPC9zcGFuPjwvbGFiZWw+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRyb2wiPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIG5hbWU9Im5pY2tuYW1lIiBpZD0ibmlja25hbWVfZmllbGQiIGNsYXNzPSJpbnB1dC10ZXh0IiBkYXRhLXZhbGlkYXRlPSJ7cmVxdWlyZWQ6dHJ1ZX0iIGRhdGEtYmluZD0idmFsdWU6IG5pY2tuYW1lKCkiIC8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIHJldmlldy1maWVsZC1zdW1tYXJ5IHJlcXVpcmVkIj4KICAgICAgICAgICAgPGxhYmVsIGZvcj0ic3VtbWFyeV9maWVsZCIgY2xhc3M9ImxhYmVsIj48c3Bhbj5TdW1tYXJ5PC9zcGFuPjwvbGFiZWw+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRyb2wiPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIG5hbWU9InRpdGxlIiBpZD0ic3VtbWFyeV9maWVsZCIgY2xhc3M9ImlucHV0LXRleHQiIGRhdGEtdmFsaWRhdGU9IntyZXF1aXJlZDp0cnVlfSIgZGF0YS1iaW5kPSJ2YWx1ZTogcmV2aWV3KCkudGl0bGUiIC8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIHJldmlldy1maWVsZC10ZXh0IHJlcXVpcmVkIj4KICAgICAgICAgICAgPGxhYmVsIGZvcj0icmV2aWV3X2ZpZWxkIiBjbGFzcz0ibGFiZWwiPjxzcGFuPlJldmlldzwvc3Bhbj48L2xhYmVsPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250cm9sIj4KICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBuYW1lPSJkZXRhaWwiIGlkPSJyZXZpZXdfZmllbGQiIGNvbHM9IjUiIHJvd3M9IjMiIGRhdGEtdmFsaWRhdGU9IntyZXF1aXJlZDp0cnVlfSIgZGF0YS1iaW5kPSJ2YWx1ZTogcmV2aWV3KCkuZGV0YWlsIj48L3RleHRhcmVhPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZmllbGRzZXQ+CiAgICA8ZGl2IGNsYXNzPSJhY3Rpb25zLXRvb2xiYXIgcmV2aWV3LWZvcm0tYWN0aW9ucyI+CiAgICAgICAgPGRpdiBjbGFzcz0icHJpbWFyeSBhY3Rpb25zLXByaW1hcnkiPgogICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImFjdGlvbiBzdWJtaXQgcHJpbWFyeSI+PHNwYW4+U3VibWl0IFJldmlldzwvc3Bhbj48L2J1dHRvbj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2Zvcm0+CjxzY3JpcHQgdHlwZT0idGV4dC94LW1hZ2VudG8taW5pdCI+CnsKICAgICJbZGF0YS1yb2xlPXByb2R1Y3QtcmV2aWV3LWZvcm1dIjogewogICAgICAgICJNYWdlbnRvX1VpL2pzL2NvcmUvYXBwIjogeyJjb21wb25lbnRzIjp7InJldmlldy1mb3JtIjp7ImNvbXBvbmVudCI6Ik1hZ2VudG9fUmV2aWV3XC9qc1wvdmlld1wvcmV2aWV3In19fSAgICB9LAogICAgIiNyZXZpZXctZm9ybSI6IHsKICAgICAgICAiTWFnZW50b19SZXZpZXcvanMvZXJyb3ItcGxhY2VtZW50Ijoge30sCiAgICAgICAgIk1hZ2VudG9fUmV2aWV3L2pzL3ZhbGlkYXRlLXJldmlldyI6IHt9CiAgICB9Cn0KPC9zY3JpcHQ+CjwvZGl2Pgo8L2Rpdj4KCjxzY3JpcHQgdHlwZT0idGV4dC94LW1hZ2VudG8taW5pdCI+CiAgICB7CiAgICAgICAgIioiOiB7CiAgICAgICAgICAgICJNYWdlbnRvX1Jldmlldy9qcy9wcm9jZXNzLXJldmlld3MiOiB7CiAgICAgICAgICAgICAgICAicHJvZHVjdFJldmlld1VybCI6ICJodHRwXHUwMDNBXHUwMDJGXHUwMDJGbWFnZW50b1x1MDAyRHRlc3QuZmlub2xvZ3kuY29tLm15XHUwMDJGcmV2aWV3XHUwMDJGcHJvZHVjdFx1MDAyRmxpc3RBamF4XHUwMDJGaWRcdTAwMkYxODE4XHUwMDJGIiwKICAgICAgICAgICAgICAgICJyZXZpZXdzVGFiU2VsZWN0b3IiOiAiI3RhYi1sYWJlbC1yZXZpZXdzIgogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQo8L3NjcmlwdD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgPC9kaXY+CjxpbnB1dCBuYW1lPSJmb3JtX2tleSIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0iQUY2MGI4cGlmVXdGd0FYYSIgLz48ZGl2IGlkPSJhdXRoZW50aWNhdGlvblBvcHVwIiBkYXRhLWJpbmQ9InNjb3BlOidhdXRoZW50aWNhdGlvblBvcHVwJyIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KICAgIDxzY3JpcHQ+CiAgICAgICAgd2luZG93LmF1dGhlbnRpY2F0aW9uUG9wdXAgPSB7ImF1dG9jb21wbGV0ZSI6Im9mZiIsImN1c3RvbWVyUmVnaXN0ZXJVcmwiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9jdXN0b21lclwvYWNjb3VudFwvY3JlYXRlXC8iLCJjdXN0b21lckZvcmdvdFBhc3N3b3JkVXJsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvY3VzdG9tZXJcL2FjY291bnRcL2ZvcmdvdHBhc3N3b3JkXC8iLCJiYXNlVXJsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvIn07CiAgICA8L3NjcmlwdD4KICAgIDwhLS0ga28gdGVtcGxhdGU6IGdldFRlbXBsYXRlKCkgLS0+PCEtLSAva28gLS0+CiAgICA8c2NyaXB0IHR5cGU9InRleHQveC1tYWdlbnRvLWluaXQiPgogICAgICAgIHsKICAgICAgICAgICAgIiNhdXRoZW50aWNhdGlvblBvcHVwIjogewogICAgICAgICAgICAgICAgIk1hZ2VudG9fVWkvanMvY29yZS9hcHAiOiB7ImNvbXBvbmVudHMiOnsiYXV0aGVudGljYXRpb25Qb3B1cCI6eyJjaGlsZHJlbiI6eyJtc3BfcmVjYXB0Y2hhIjp7ImNvbXBvbmVudCI6Ik1TUF9SZUNhcHRjaGFcL2pzXC9yZUNhcHRjaGEiLCJkaXNwbGF5QXJlYSI6ImFkZGl0aW9uYWwtbG9naW4tZm9ybS1maWVsZHMiLCJjb25maWdTb3VyY2UiOiJjaGVja291dENvbmZpZyIsInJlQ2FwdGNoYUlkIjoibXNwLXJlY2FwdGNoYS1wb3B1cC1sb2dpbiIsInpvbmUiOiJsb2dpbiIsImJhZGdlIjoiaW5saW5lIiwic2V0dGluZ3MiOnsic2l0ZUtleSI6IiIsInNpemUiOiJub3JtYWwiLCJiYWRnZSI6bnVsbCwidGhlbWUiOiJsaWdodCIsImxhbmciOm51bGwsImVuYWJsZWQiOnsibG9naW4iOmZhbHNlLCJjcmVhdGUiOmZhbHNlLCJmb3Jnb3QiOmZhbHNlLCJjb250YWN0IjpmYWxzZX19fSwibWVzc2FnZXMiOnsiY29tcG9uZW50IjoiTWFnZW50b19VaVwvanNcL3ZpZXdcL21lc3NhZ2VzIiwiZGlzcGxheUFyZWEiOiJtZXNzYWdlcyJ9LCJjYXB0Y2hhIjp7ImNvbXBvbmVudCI6Ik1hZ2VudG9fQ2FwdGNoYVwvanNcL3ZpZXdcL2NoZWNrb3V0XC9sb2dpbkNhcHRjaGEiLCJkaXNwbGF5QXJlYSI6ImFkZGl0aW9uYWwtbG9naW4tZm9ybS1maWVsZHMiLCJmb3JtSWQiOiJ1c2VyX2xvZ2luIiwiY29uZmlnU291cmNlIjoiY2hlY2tvdXQifSwiYW1hem9uLWJ1dHRvbiI6eyJjb21wb25lbnQiOiJBbWF6b25fTG9naW5cL2pzXC92aWV3XC9sb2dpbi1idXR0b24td3JhcHBlciIsInNvcnRPcmRlciI6IjAiLCJkaXNwbGF5QXJlYSI6ImFkZGl0aW9uYWwtbG9naW4tZm9ybS1maWVsZHMiLCJjb25maWciOnsidG9vbHRpcCI6IlNlY3VyZWx5IGxvZ2luIHRvIG91ciB3ZWJzaXRlIHVzaW5nIHlvdXIgZXhpc3RpbmcgQW1hem9uIGRldGFpbHMuIn19fSwiY29tcG9uZW50IjoiTWFnZW50b19DdXN0b21lclwvanNcL3ZpZXdcL2F1dGhlbnRpY2F0aW9uLXBvcHVwIn19fSAgICAgICAgICAgIH0sCiAgICAgICAgICAgICIqIjogewogICAgICAgICAgICAgICAgIk1hZ2VudG9fVWkvanMvYmxvY2stbG9hZGVyIjogImh0dHBcdTAwM0FcdTAwMkZcdTAwMkZtYWdlbnRvXHUwMDJEdGVzdC5maW5vbG9neS5jb20ubXlcdTAwMkZwdWJcdTAwMkZzdGF0aWNcdTAwMkZ2ZXJzaW9uMTU1NTQ4ODYzMFx1MDAyRmZyb250ZW5kXHUwMDJGTWFnZW50b1x1MDAyRmx1bWFcdTAwMkZlbl9VU1x1MDAyRmltYWdlc1x1MDAyRmxvYWRlclx1MDAyRDEuZ2lmIgogICAgICAgICAgICB9CiAgICAgICAgfQogICAgPC9zY3JpcHQ+CjwvZGl2Pgo8c2NyaXB0IHR5cGU9InRleHQveC1tYWdlbnRvLWluaXQiPgp7IioiOnsiTWFnZW50b19DdXN0b21lclwvanNcL3NlY3Rpb24tY29uZmlnIjp7InNlY3Rpb25zIjp7InN0b3Jlc1wvc3RvcmVcL3N3aXRjaCI6IioiLCJkaXJlY3RvcnlcL2N1cnJlbmN5XC9zd2l0Y2giOiIqIiwiKiI6WyJtZXNzYWdlcyJdLCJjdXN0b21lclwvYWNjb3VudFwvbG9nb3V0IjpbInJlY2VudGx5X3ZpZXdlZF9wcm9kdWN0IiwicmVjZW50bHlfY29tcGFyZWRfcHJvZHVjdCJdLCJjdXN0b21lclwvYWNjb3VudFwvbG9naW5wb3N0IjoiKiIsImN1c3RvbWVyXC9hY2NvdW50XC9jcmVhdGVwb3N0IjoiKiIsImN1c3RvbWVyXC9hY2NvdW50XC9lZGl0cG9zdCI6IioiLCJjdXN0b21lclwvYWpheFwvbG9naW4iOlsiY2hlY2tvdXQtZGF0YSIsImNhcnQiLCJjYXB0Y2hhIl0sImNhdGFsb2dcL3Byb2R1Y3RfY29tcGFyZVwvYWRkIjpbImNvbXBhcmUtcHJvZHVjdHMiXSwiY2F0YWxvZ1wvcHJvZHVjdF9jb21wYXJlXC9yZW1vdmUiOlsiY29tcGFyZS1wcm9kdWN0cyJdLCJjYXRhbG9nXC9wcm9kdWN0X2NvbXBhcmVcL2NsZWFyIjpbImNvbXBhcmUtcHJvZHVjdHMiXSwic2FsZXNcL2d1ZXN0XC9yZW9yZGVyIjpbImNhcnQiXSwic2FsZXNcL29yZGVyXC9yZW9yZGVyIjpbImNhcnQiXSwiY2hlY2tvdXRcL2NhcnRcL2FkZCI6WyJjYXJ0Il0sImNoZWNrb3V0XC9jYXJ0XC9kZWxldGUiOlsiY2FydCJdLCJjaGVja291dFwvY2FydFwvdXBkYXRlcG9zdCI6WyJjYXJ0Il0sImNoZWNrb3V0XC9jYXJ0XC91cGRhdGVpdGVtb3B0aW9ucyI6WyJjYXJ0Il0sImNoZWNrb3V0XC9jYXJ0XC9jb3Vwb25wb3N0IjpbImNhcnQiXSwiY2hlY2tvdXRcL2NhcnRcL2VzdGltYXRlcG9zdCI6WyJjYXJ0Il0sImNoZWNrb3V0XC9jYXJ0XC9lc3RpbWF0ZXVwZGF0ZXBvc3QiOlsiY2FydCJdLCJjaGVja291dFwvb25lcGFnZVwvc2F2ZW9yZGVyIjpbImNhcnQiLCJjaGVja291dC1kYXRhIiwibGFzdC1vcmRlcmVkLWl0ZW1zIiwiY2hlY2tvdXQtZmllbGRzIl0sImNoZWNrb3V0XC9zaWRlYmFyXC9yZW1vdmVpdGVtIjpbImNhcnQiXSwiY2hlY2tvdXRcL3NpZGViYXJcL3VwZGF0ZWl0ZW1xdHkiOlsiY2FydCJdLCJyZXN0XC8qXC92MVwvY2FydHNcLypcL3BheW1lbnQtaW5mb3JtYXRpb24iOlsiY2FydCIsImNoZWNrb3V0LWRhdGEiLCJsYXN0LW9yZGVyZWQtaXRlbXMiLCJpbnN0YW50LXB1cmNoYXNlIl0sInJlc3RcLypcL3YxXC9ndWVzdC1jYXJ0c1wvKlwvcGF5bWVudC1pbmZvcm1hdGlvbiI6WyJjYXJ0Il0sInJlc3RcLypcL3YxXC9ndWVzdC1jYXJ0c1wvKlwvc2VsZWN0ZWQtcGF5bWVudC1tZXRob2QiOlsiY2FydCIsImNoZWNrb3V0LWRhdGEiXSwicmVzdFwvKlwvdjFcL2NhcnRzXC8qXC9zZWxlY3RlZC1wYXltZW50LW1ldGhvZCI6WyJjYXJ0IiwiY2hlY2tvdXQtZGF0YSIsImluc3RhbnQtcHVyY2hhc2UiXSwicGF5cGFsXC9leHByZXNzXC9wbGFjZW9yZGVyIjpbImNhcnQiLCJjaGVja291dC1kYXRhIl0sInBheXBhbFwvcGF5Zmxvd2V4cHJlc3NcL3BsYWNlb3JkZXIiOlsiY2FydCIsImNoZWNrb3V0LWRhdGEiXSwicGF5cGFsXC9leHByZXNzXC9vbmF1dGhvcml6YXRpb24iOlsiY2FydCIsImNoZWNrb3V0LWRhdGEiXSwiYXV0aG9yaXplbmV0XC9kaXJlY3Rwb3N0X3BheW1lbnRcL3BsYWNlIjpbImNhcnQiLCJjaGVja291dC1kYXRhIl0sImN1c3RvbWVyXC9hZGRyZXNzXC8qIjpbImluc3RhbnQtcHVyY2hhc2UiXSwiY3VzdG9tZXJcL2FjY291bnRcLyoiOlsiaW5zdGFudC1wdXJjaGFzZSJdLCJ2YXVsdFwvY2FyZHNcL2RlbGV0ZWFjdGlvbiI6WyJpbnN0YW50LXB1cmNoYXNlIl0sIm11bHRpc2hpcHBpbmdcL2NoZWNrb3V0XC9vdmVydmlld3Bvc3QiOlsiY2FydCJdLCJicmFpbnRyZWVcL3BheXBhbFwvcGxhY2VvcmRlciI6WyJjYXJ0IiwiY2hlY2tvdXQtZGF0YSJdLCJwZXJzaXN0ZW50XC9pbmRleFwvdW5zZXRjb29raWUiOlsicGVyc2lzdGVudCJdLCJyZXZpZXdcL3Byb2R1Y3RcL3Bvc3QiOlsicmV2aWV3Il0sIndpc2hsaXN0XC9pbmRleFwvYWRkIjpbIndpc2hsaXN0Il0sIndpc2hsaXN0XC9pbmRleFwvcmVtb3ZlIjpbIndpc2hsaXN0Il0sIndpc2hsaXN0XC9pbmRleFwvdXBkYXRlaXRlbW9wdGlvbnMiOlsid2lzaGxpc3QiXSwid2lzaGxpc3RcL2luZGV4XC91cGRhdGUiOlsid2lzaGxpc3QiXSwid2lzaGxpc3RcL2luZGV4XC9jYXJ0IjpbIndpc2hsaXN0IiwiY2FydCJdLCJ3aXNobGlzdFwvaW5kZXhcL2Zyb21jYXJ0IjpbIndpc2hsaXN0IiwiY2FydCJdLCJ3aXNobGlzdFwvaW5kZXhcL2FsbGNhcnQiOlsid2lzaGxpc3QiLCJjYXJ0Il0sIndpc2hsaXN0XC9zaGFyZWRcL2FsbGNhcnQiOlsid2lzaGxpc3QiLCJjYXJ0Il0sIndpc2hsaXN0XC9zaGFyZWRcL2NhcnQiOlsiY2FydCJdfSwiY2xpZW50U2lkZVNlY3Rpb25zIjpbImNoZWNrb3V0LWRhdGEiLCJjYXJ0LWRhdGEiXSwiYmFzZVVybHMiOlsiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvIl19fX08L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSJ0ZXh0L3gtbWFnZW50by1pbml0Ij4KeyIqIjp7Ik1hZ2VudG9fQ3VzdG9tZXJcL2pzXC9jdXN0b21lci1kYXRhIjp7InNlY3Rpb25Mb2FkVXJsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvY3VzdG9tZXJcL3NlY3Rpb25cL2xvYWRcLyIsImV4cGlyYWJsZVNlY3Rpb25MaWZldGltZSI6NjAsImV4cGlyYWJsZVNlY3Rpb25OYW1lcyI6WyJjYXJ0IiwicGVyc2lzdGVudCJdLCJjb29raWVMaWZlVGltZSI6IjM2MDAiLCJ1cGRhdGVTZXNzaW9uVXJsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvY3VzdG9tZXJcL2FjY291bnRcL3VwZGF0ZVNlc3Npb25cLyJ9fX08L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSJ0ZXh0L3gtbWFnZW50by1pbml0Ij4KeyIqIjp7Ik1hZ2VudG9fQ3VzdG9tZXJcL2pzXC9pbnZhbGlkYXRpb24tcHJvY2Vzc29yIjp7ImludmFsaWRhdGlvblJ1bGVzIjp7IndlYnNpdGUtcnVsZSI6eyJNYWdlbnRvX0N1c3RvbWVyXC9qc1wvaW52YWxpZGF0aW9uLXJ1bGVzXC93ZWJzaXRlLXJ1bGUiOnsic2NvcGVDb25maWciOnsid2Vic2l0ZUlkIjoxfX19fX19fTwvc2NyaXB0PgoKPHNjcmlwdCB0eXBlPSJ0ZXh0L3gtbWFnZW50by1pbml0Ij4KICAgIHsKICAgICAgICAiYm9keSI6IHsKICAgICAgICAgICAgInBhZ2VDYWNoZSI6IHsidXJsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcGFnZV9jYWNoZVwvYmxvY2tcL3JlbmRlclwvaWRcLzE4MThcLyIsImhhbmRsZXMiOlsiZGVmYXVsdCIsImNhdGFsb2dfcHJvZHVjdF92aWV3IiwiY2F0YWxvZ19wcm9kdWN0X3ZpZXdfdHlwZV9jb25maWd1cmFibGUiLCJjYXRhbG9nX3Byb2R1Y3Rfdmlld19pZF8xODE4IiwiY2F0YWxvZ19wcm9kdWN0X3ZpZXdfc2t1X1dUMDkiXSwib3JpZ2luYWxSZXF1ZXN0Ijp7InJvdXRlIjoiY2F0YWxvZyIsImNvbnRyb2xsZXIiOiJwcm9kdWN0IiwiYWN0aW9uIjoidmlldyIsInVyaSI6IlwvYnJlYXRoZS1lYXN5LXRhbmsuaHRtbCJ9LCJ2ZXJzaW9uQ29va2llTmFtZSI6InByaXZhdGVfY29udGVudF92ZXJzaW9uIn0gICAgICAgIH0KICAgIH0KPC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC94LW1hZ2VudG8taW5pdCI+CiAgICB7CiAgICAgICAgImJvZHkiOiB7CiAgICAgICAgICAgICJyZXF1aXJlQ29va2llIjogeyJub0Nvb2tpZVVybCI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL2Nvb2tpZVwvaW5kZXhcL25vQ29va2llc1wvIiwidHJpZ2dlcnMiOlsiLmFjdGlvbi50b3dpc2hsaXN0Il19ICAgICAgICB9CiAgICB9Cjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9InRleHQveC1tYWdlbnRvLWluaXQiPgogICAgewogICAgICAgICIqIjogewogICAgICAgICAgICAgICAgIk1hZ2VudG9fQ2F0YWxvZy9qcy9wcm9kdWN0L3ZpZXcvcHJvdmlkZXIiOiB7CiAgICAgICAgICAgICAgICAgICAgImRhdGEiOiB7Iml0ZW1zIjp7IjE4MTgiOnsiYWRkX3RvX2NhcnRfYnV0dG9uIjp7InBvc3RfZGF0YSI6IntcImFjdGlvblwiOlwiaHR0cDpcXFwvXFxcL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcXFwvY2hlY2tvdXRcXFwvY2FydFxcXC9hZGRcXFwvdWVuY1xcXC8lMjV1ZW5jJTI1XFxcL3Byb2R1Y3RcXFwvMTgxOFxcXC9cIixcImRhdGFcIjp7XCJwcm9kdWN0XCI6XCIxODE4XCIsXCJ1ZW5jXCI6XCIldWVuYyVcIn19IiwidXJsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvY2hlY2tvdXRcL2NhcnRcL2FkZFwvdWVuY1wvJTI1dWVuYyUyNVwvcHJvZHVjdFwvMTgxOFwvIiwicmVxdWlyZWRfb3B0aW9ucyI6dHJ1ZX0sImFkZF90b19jb21wYXJlX2J1dHRvbiI6eyJwb3N0X2RhdGEiOm51bGwsInVybCI6IntcImFjdGlvblwiOlwiaHR0cDpcXFwvXFxcL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcXFwvY2F0YWxvZ1xcXC9wcm9kdWN0X2NvbXBhcmVcXFwvYWRkXFxcL1wiLFwiZGF0YVwiOntcInByb2R1Y3RcIjpcIjE4MThcIixcInVlbmNcIjpcImFIUjBjRG92TDIxaFoyVnVkRzh0ZEdWemRDNW1hVzV2Ykc5bmVTNWpiMjB1YlhrdlluSmxZWFJvWlMxbFlYTjVMWFJoYm1zdWFIUnRiQSwsXCJ9fSIsInJlcXVpcmVkX29wdGlvbnMiOm51bGx9LCJwcmljZV9pbmZvIjp7ImZpbmFsX3ByaWNlIjozNCwibWF4X3ByaWNlIjozNCwibWF4X3JlZ3VsYXJfcHJpY2UiOjM0LCJtaW5pbWFsX3JlZ3VsYXJfcHJpY2UiOjM0LCJzcGVjaWFsX3ByaWNlIjpudWxsLCJtaW5pbWFsX3ByaWNlIjozNCwicmVndWxhcl9wcmljZSI6MzQsImZvcm1hdHRlZF9wcmljZXMiOnsiZmluYWxfcHJpY2UiOiI8c3BhbiBjbGFzcz1cInByaWNlXCI+JDM0LjAwPFwvc3Bhbj4iLCJtYXhfcHJpY2UiOiI8c3BhbiBjbGFzcz1cInByaWNlXCI+JDM0LjAwPFwvc3Bhbj4iLCJtaW5pbWFsX3ByaWNlIjoiPHNwYW4gY2xhc3M9XCJwcmljZVwiPiQzNC4wMDxcL3NwYW4+IiwibWF4X3JlZ3VsYXJfcHJpY2UiOiI8c3BhbiBjbGFzcz1cInByaWNlXCI+JDM0LjAwPFwvc3Bhbj4iLCJtaW5pbWFsX3JlZ3VsYXJfcHJpY2UiOm51bGwsInNwZWNpYWxfcHJpY2UiOm51bGwsInJlZ3VsYXJfcHJpY2UiOiI8c3BhbiBjbGFzcz1cInByaWNlXCI+JDM0LjAwPFwvc3Bhbj4ifSwiZXh0ZW5zaW9uX2F0dHJpYnV0ZXMiOnsibXNycCI6eyJtc3JwX3ByaWNlIjoiPHNwYW4gY2xhc3M9XCJwcmljZVwiPiQwLjAwPFwvc3Bhbj4iLCJpc19hcHBsaWNhYmxlIjoiIiwiaXNfc2hvd25fcHJpY2Vfb25fZ2VzdHVyZSI6IjEiLCJtc3JwX21lc3NhZ2UiOiIiLCJleHBsYW5hdGlvbl9tZXNzYWdlIjoiT3VyIHByaWNlIGlzIGxvd2VyIHRoYW4gdGhlIG1hbnVmYWN0dXJlciYjMDM5O3MgJnF1b3Q7bWluaW11bSBhZHZlcnRpc2VkIHByaWNlLiZxdW90OyBBcyBhIHJlc3VsdCwgd2UgY2Fubm90IHNob3cgeW91IHRoZSBwcmljZSBpbiBjYXRhbG9nIG9yIHRoZSBwcm9kdWN0IHBhZ2UuIDxicj48YnI+IFlvdSBoYXZlIG5vIG9ibGlnYXRpb24gdG8gcHVyY2hhc2UgdGhlIHByb2R1Y3Qgb25jZSB5b3Uga25vdyB0aGUgcHJpY2UuIFlvdSBjYW4gc2ltcGx5IHJlbW92ZSB0aGUgaXRlbSBmcm9tIHlvdXIgY2FydC4ifSwidGF4X2FkanVzdG1lbnRzIjp7ImZpbmFsX3ByaWNlIjozNCwibWF4X3ByaWNlIjozNCwibWF4X3JlZ3VsYXJfcHJpY2UiOjM0LCJtaW5pbWFsX3JlZ3VsYXJfcHJpY2UiOjM0LCJzcGVjaWFsX3ByaWNlIjozNCwibWluaW1hbF9wcmljZSI6MzQsInJlZ3VsYXJfcHJpY2UiOjM0LCJmb3JtYXR0ZWRfcHJpY2VzIjp7ImZpbmFsX3ByaWNlIjoiPHNwYW4gY2xhc3M9XCJwcmljZVwiPiQzNC4wMDxcL3NwYW4+IiwibWF4X3ByaWNlIjoiPHNwYW4gY2xhc3M9XCJwcmljZVwiPiQzNC4wMDxcL3NwYW4+IiwibWluaW1hbF9wcmljZSI6IjxzcGFuIGNsYXNzPVwicHJpY2VcIj4kMzQuMDA8XC9zcGFuPiIsIm1heF9yZWd1bGFyX3ByaWNlIjoiPHNwYW4gY2xhc3M9XCJwcmljZVwiPiQzNC4wMDxcL3NwYW4+IiwibWluaW1hbF9yZWd1bGFyX3ByaWNlIjpudWxsLCJzcGVjaWFsX3ByaWNlIjoiPHNwYW4gY2xhc3M9XCJwcmljZVwiPiQzNC4wMDxcL3NwYW4+IiwicmVndWxhcl9wcmljZSI6IjxzcGFuIGNsYXNzPVwicHJpY2VcIj4kMzQuMDA8XC9zcGFuPiJ9fSwid2VlZV9hdHRyaWJ1dGVzIjpbXSwid2VlZV9hZGp1c3RtZW50IjoiPHNwYW4gY2xhc3M9XCJwcmljZVwiPiQzNC4wMDxcL3NwYW4+In19LCJpbWFnZXMiOlt7InVybCI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC8yNzY1NTQyNTA1NjYwYmFhYjI4ZWNkNTU1ZTI3MzY2ZVwvd1wvdFwvd3QwOS13aGl0ZV9tYWluXzEuanBnIiwiY29kZSI6InJlY2VudGx5X3ZpZXdlZF9wcm9kdWN0c19ncmlkX2NvbnRlbnRfd2lkZ2V0IiwiaGVpZ2h0IjozMDAsIndpZHRoIjoyNDAsImxhYmVsIjoiQnJlYXRoZS1FYXN5IFRhbmsiLCJyZXNpemVkX3dpZHRoIjoyNDAsInJlc2l6ZWRfaGVpZ2h0IjozMDB9LHsidXJsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcLzc4OTAyNjNmOGNjMmI1YTA0OTliZjA2MTdiNjY5OTc1XC93XC90XC93dDA5LXdoaXRlX21haW5fMS5qcGciLCJjb2RlIjoicmVjZW50bHlfdmlld2VkX3Byb2R1Y3RzX2xpc3RfY29udGVudF93aWRnZXQiLCJoZWlnaHQiOjM0MCwid2lkdGgiOjI3MCwibGFiZWwiOiJCcmVhdGhlLUVhc3kgVGFuayIsInJlc2l6ZWRfd2lkdGgiOjI3MCwicmVzaXplZF9oZWlnaHQiOjM0MH0seyJ1cmwiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvZDdkNTJhZmQ1NjI4NzQ5MWNiN2E1Mjc1OGE3MWI0NTBcL3dcL3RcL3d0MDktd2hpdGVfbWFpbl8xLmpwZyIsImNvZGUiOiJyZWNlbnRseV92aWV3ZWRfcHJvZHVjdHNfaW1hZ2VzX25hbWVzX3dpZGdldCIsImhlaWdodCI6OTAsIndpZHRoIjo3NSwibGFiZWwiOiJCcmVhdGhlLUVhc3kgVGFuayIsInJlc2l6ZWRfd2lkdGgiOjc1LCJyZXNpemVkX2hlaWdodCI6OTB9LHsidXJsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcHViXC9tZWRpYVwvY2F0YWxvZ1wvcHJvZHVjdFwvY2FjaGVcLzI3NjU1NDI1MDU2NjBiYWFiMjhlY2Q1NTVlMjczNjZlXC93XC90XC93dDA5LXdoaXRlX21haW5fMS5qcGciLCJjb2RlIjoicmVjZW50bHlfY29tcGFyZWRfcHJvZHVjdHNfZ3JpZF9jb250ZW50X3dpZGdldCIsImhlaWdodCI6MzAwLCJ3aWR0aCI6MjQwLCJsYWJlbCI6IkJyZWF0aGUtRWFzeSBUYW5rIiwicmVzaXplZF93aWR0aCI6MjQwLCJyZXNpemVkX2hlaWdodCI6MzAwfSx7InVybCI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3B1YlwvbWVkaWFcL2NhdGFsb2dcL3Byb2R1Y3RcL2NhY2hlXC83ODkwMjYzZjhjYzJiNWEwNDk5YmYwNjE3YjY2OTk3NVwvd1wvdFwvd3QwOS13aGl0ZV9tYWluXzEuanBnIiwiY29kZSI6InJlY2VudGx5X2NvbXBhcmVkX3Byb2R1Y3RzX2xpc3RfY29udGVudF93aWRnZXQiLCJoZWlnaHQiOjM0MCwid2lkdGgiOjI3MCwibGFiZWwiOiJCcmVhdGhlLUVhc3kgVGFuayIsInJlc2l6ZWRfd2lkdGgiOjI3MCwicmVzaXplZF9oZWlnaHQiOjM0MH0seyJ1cmwiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9wdWJcL21lZGlhXC9jYXRhbG9nXC9wcm9kdWN0XC9jYWNoZVwvZDdkNTJhZmQ1NjI4NzQ5MWNiN2E1Mjc1OGE3MWI0NTBcL3dcL3RcL3d0MDktd2hpdGVfbWFpbl8xLmpwZyIsImNvZGUiOiJyZWNlbnRseV9jb21wYXJlZF9wcm9kdWN0c19pbWFnZXNfbmFtZXNfd2lkZ2V0IiwiaGVpZ2h0Ijo5MCwid2lkdGgiOjc1LCJsYWJlbCI6IkJyZWF0aGUtRWFzeSBUYW5rIiwicmVzaXplZF93aWR0aCI6NzUsInJlc2l6ZWRfaGVpZ2h0Ijo5MH1dLCJ1cmwiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9icmVhdGhlLWVhc3ktdGFuay5odG1sIiwiaWQiOjE4MTgsIm5hbWUiOiJCcmVhdGhlLUVhc3kgVGFuayIsInR5cGUiOiJjb25maWd1cmFibGUiLCJpc19zYWxhYmxlIjoiMSIsInN0b3JlX2lkIjoxLCJjdXJyZW5jeV9jb2RlIjoiVVNEIiwiZXh0ZW5zaW9uX2F0dHJpYnV0ZXMiOnsicmV2aWV3X2h0bWwiOiI8ZGl2IGNsYXNzPVwicHJvZHVjdC1yZXZpZXdzLXN1bW1hcnkgc2hvcnRcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInJhdGluZy1zdW1tYXJ5XCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwibGFiZWxcIj48c3Bhbj5SYXRpbmc6PFwvc3Bhbj48XC9zcGFuPlxuICAgICAgICA8ZGl2IGNsYXNzPVwicmF0aW5nLXJlc3VsdFwiIHRpdGxlPVwiNzAlXCI+XG4gICAgICAgICAgICA8c3BhbiBzdHlsZT1cIndpZHRoOjcwJVwiPjxzcGFuPjcwJTxcL3NwYW4+PFwvc3Bhbj5cbiAgICAgICAgPFwvZGl2PlxuICAgIDxcL2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInJldmlld3MtYWN0aW9uc1wiPlxuICAgICAgICA8YSBjbGFzcz1cImFjdGlvbiB2aWV3XCIgaHJlZj1cImh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL2JyZWF0aGUtZWFzeS10YW5rLmh0bWwjcmV2aWV3c1wiPjImbmJzcDs8c3Bhbj5SZXZpZXdzPFwvc3Bhbj48XC9hPlxuICAgIDxcL2Rpdj5cbjxcL2Rpdj5cbiIsIndpc2hsaXN0X2J1dHRvbiI6eyJwb3N0X2RhdGEiOm51bGwsInVybCI6IntcImFjdGlvblwiOlwiaHR0cDpcXFwvXFxcL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcXFwvd2lzaGxpc3RcXFwvaW5kZXhcXFwvYWRkXFxcL1wiLFwiZGF0YVwiOntcInByb2R1Y3RcIjpcIjE4MThcIixcInVlbmNcIjpcImFIUjBjRG92TDIxaFoyVnVkRzh0ZEdWemRDNW1hVzV2Ykc5bmVTNWpiMjB1YlhrdlluSmxZWFJvWlMxbFlYTjVMWFJoYm1zdWFIUnRiQSwsXCJ9fSIsInJlcXVpcmVkX29wdGlvbnMiOm51bGx9fX19LCJzdG9yZSI6IjEiLCJjdXJyZW5jeSI6IlVTRCJ9ICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KPC9zY3JpcHQ+CiAgICA8c2NyaXB0IGRhdGEtcm9sZT0ibXNycC1wb3B1cC10ZW1wbGF0ZSIgdHlwZT0idGV4dC94LW1hZ2VudG8tdGVtcGxhdGUiPgogICAgPGRpdiBpZD0ibWFwLXBvcHVwLWNsaWNrLWZvci1wcmljZSIgY2xhc3M9Im1hcC1wb3B1cCI+CiAgICAgICAgPGRpdiBjbGFzcz0icG9wdXAtaGVhZGVyIj4KICAgICAgICAgICAgPHN0cm9uZyBjbGFzcz0idGl0bGUiIGlkPSJtYXAtcG9wdXAtaGVhZGluZy1wcmljZSI+PC9zdHJvbmc+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0icG9wdXAtY29udGVudCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1hcC1pbmZvLXByaWNlIiBpZD0ibWFwLXBvcHVwLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJpY2UtYm94Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYXAtbXNycCIgaWQ9Im1hcC1wb3B1cC1tc3JwLWJveCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJsYWJlbCI+UHJpY2U8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvbGQtcHJpY2UgbWFwLW9sZC1wcmljZSIgaWQ9Im1hcC1wb3B1cC1tc3JwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcmljZSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWFwLXByaWNlIiBpZD0ibWFwLXBvcHVwLXByaWNlLWJveCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJsYWJlbCI+QWN0dWFsIFByaWNlPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0ibWFwLXBvcHVwLXByaWNlIiBjbGFzcz0iYWN0dWFsLXByaWNlIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxmb3JtIGFjdGlvbj0iIiBtZXRob2Q9IlBPU1QiIGNsYXNzPSJtYXAtZm9ybS1hZGR0b2NhcnQiPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InByb2R1Y3QiIGNsYXNzPSJwcm9kdWN0X2lkIiB2YWx1ZT0iIiAvPgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9IkFkZCB0byBDYXJ0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImFjdGlvbiB0b2NhcnQgcHJpbWFyeSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPkFkZCB0byBDYXJ0PC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFkZGl0aW9uYWwtYWRkdG9jYXJ0LWJveCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYXAtdGV4dCIgaWQ9Im1hcC1wb3B1cC10ZXh0Ij4KICAgICAgICAgICAgICAgIE91ciBwcmljZSBpcyBsb3dlciB0aGFuIHRoZSBtYW51ZmFjdHVyZXImIzAzOTtzICZxdW90O21pbmltdW0gYWR2ZXJ0aXNlZCBwcmljZS4mcXVvdDsgQXMgYSByZXN1bHQsIHdlIGNhbm5vdCBzaG93IHlvdSB0aGUgcHJpY2UgaW4gY2F0YWxvZyBvciB0aGUgcHJvZHVjdCBwYWdlLiA8YnI+PGJyPiBZb3UgaGF2ZSBubyBvYmxpZ2F0aW9uIHRvIHB1cmNoYXNlIHRoZSBwcm9kdWN0IG9uY2UgeW91IGtub3cgdGhlIHByaWNlLiBZb3UgY2FuIHNpbXBseSByZW1vdmUgdGhlIGl0ZW0gZnJvbSB5b3VyIGNhcnQuICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDwvc2NyaXB0PgogICAgPHNjcmlwdCBkYXRhLXJvbGU9Im1zcnAtaW5mby10ZW1wbGF0ZSIgdHlwZT0idGV4dC94LW1hZ2VudG8tdGVtcGxhdGUiPgogICAgPGRpdiBpZD0ibWFwLXBvcHVwLXdoYXQtdGhpcyIgY2xhc3M9Im1hcC1wb3B1cCI+CiAgICAgICAgPGRpdiBjbGFzcz0icG9wdXAtaGVhZGVyIj4KICAgICAgICAgICAgPHN0cm9uZyBjbGFzcz0idGl0bGUiIGlkPSJtYXAtcG9wdXAtaGVhZGluZy13aGF0LXRoaXMiPjwvc3Ryb25nPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9InBvcHVwLWNvbnRlbnQiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYXAtaGVscC10ZXh0IiBpZD0ibWFwLXBvcHVwLXRleHQtd2hhdC10aGlzIj4KICAgICAgICAgICAgICAgIE91ciBwcmljZSBpcyBsb3dlciB0aGFuIHRoZSBtYW51ZmFjdHVyZXImIzAzOTtzICZxdW90O21pbmltdW0gYWR2ZXJ0aXNlZCBwcmljZS4mcXVvdDsgQXMgYSByZXN1bHQsIHdlIGNhbm5vdCBzaG93IHlvdSB0aGUgcHJpY2UgaW4gY2F0YWxvZyBvciB0aGUgcHJvZHVjdCBwYWdlLiA8YnI+PGJyPiBZb3UgaGF2ZSBubyBvYmxpZ2F0aW9uIHRvIHB1cmNoYXNlIHRoZSBwcm9kdWN0IG9uY2UgeW91IGtub3cgdGhlIHByaWNlLiBZb3UgY2FuIHNpbXBseSByZW1vdmUgdGhlIGl0ZW0gZnJvbSB5b3VyIGNhcnQuICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDwvc2NyaXB0PgoKCgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJibG9jayByZWxhdGVkIiBkYXRhLW1hZ2UtaW5pdD0neyJyZWxhdGVkUHJvZHVjdHMiOnsicmVsYXRlZENoZWNrYm94IjoiLnJlbGF0ZWQuY2hlY2tib3gifX0nIGRhdGEtbGltaXQ9IjAiIGRhdGEtc2h1ZmZsZT0iMCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJibG9jay10aXRsZSB0aXRsZSI+CiAgICAgICAgPHN0cm9uZyBpZD0iYmxvY2stcmVsYXRlZC1oZWFkaW5nIiByb2xlPSJoZWFkaW5nIiBhcmlhLWxldmVsPSIyIj5SZWxhdGVkIFByb2R1Y3RzPC9zdHJvbmc+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImJsb2NrLWNvbnRlbnQgY29udGVudCIgYXJpYS1sYWJlbGxlZGJ5PSJibG9jay1yZWxhdGVkLWhlYWRpbmciPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdHMgd3JhcHBlciBncmlkIHByb2R1Y3RzLWdyaWQgcHJvZHVjdHMtcmVsYXRlZCI+CiAgICAgICAgICAgIDxvbCBjbGFzcz0icHJvZHVjdHMgbGlzdCBpdGVtcyBwcm9kdWN0LWl0ZW1zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJpdGVtIHByb2R1Y3QgcHJvZHVjdC1pdGVtIiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3QtaXRlbS1pbmZvICI+CiAgICAgICAgICAgICAgICAgICAgPCEtLSByZWxhdGVkX3Byb2R1Y3RzX2xpc3QtLT4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L21pbWktYWxsLXB1cnBvc2Utc2hvcnQuaHRtbCIgY2xhc3M9InByb2R1Y3QgcGhvdG8gcHJvZHVjdC1pdGVtLXBob3RvIj4KICAgICAgICAgICAgICAgICAgICAgICAgCjxzcGFuIGNsYXNzPSJwcm9kdWN0LWltYWdlLWNvbnRhaW5lciIKICAgICAgc3R5bGU9IndpZHRoOjE1MnB4OyI+CiAgICA8c3BhbiBjbGFzcz0icHJvZHVjdC1pbWFnZS13cmFwcGVyIgogICAgICAgICAgc3R5bGU9InBhZGRpbmctYm90dG9tOiAxMjUlOyI+CiAgICAgICAgPGltZyBjbGFzcz0icHJvZHVjdC1pbWFnZS1waG90byIKICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9wdWIvbWVkaWEvY2F0YWxvZy9wcm9kdWN0L2NhY2hlLzZhZjJkYTc5MDA3YmJkZTgzYWM0MjViNWUwOWRkY2Q0L3cvcy93c2gwOS1ncmF5X21haW5fMS5qcGciCiAgICAgICAgICAgIG1heC13aWR0aD0iMTUyIgogICAgICAgICAgICBtYXgtaGVpZ2h0PSIxOTAiCiAgICAgICAgICAgIGFsdD0iTWltaSBBbGwtUHVycG9zZSBTaG9ydCIvPjwvc3Bhbj4KPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0IGRldGFpbHMgcHJvZHVjdC1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJwcm9kdWN0IG5hbWUgcHJvZHVjdC1pdGVtLW5hbWUiPjxhIGNsYXNzPSJwcm9kdWN0LWl0ZW0tbGluayIgdGl0bGU9Ik1pbWkgQWxsLVB1cnBvc2UgU2hvcnQiIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L21pbWktYWxsLXB1cnBvc2Utc2hvcnQuaHRtbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBNaW1pIEFsbC1QdXJwb3NlIFNob3J0PC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L3N0cm9uZz4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByaWNlLWJveCBwcmljZS1maW5hbF9wcmljZSIgZGF0YS1yb2xlPSJwcmljZUJveCIgZGF0YS1wcm9kdWN0LWlkPSIyMDE2IiBkYXRhLXByaWNlLWJveD0icHJvZHVjdC1pZC0yMDE2Ij4KPHNwYW4gY2xhc3M9Im5vcm1hbC1wcmljZSI+CiAgICAKCjxzcGFuIGNsYXNzPSJwcmljZS1jb250YWluZXIgcHJpY2UtZmluYWxfcHJpY2UgdGF4IHdlZWUiCiAgICAgICAgPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJpY2UtbGFiZWwiPkFzIGxvdyBhczwvc3Bhbj4KICAgICAgICA8c3BhbiAgaWQ9InByb2R1Y3QtcHJpY2UtMjAxNiIgICAgICAgICAgICAgICAgZGF0YS1wcmljZS1hbW91bnQ9IjQ0IgogICAgICAgIGRhdGEtcHJpY2UtdHlwZT0iZmluYWxQcmljZSIKICAgICAgICBjbGFzcz0icHJpY2Utd3JhcHBlciAiCiAgICA+PHNwYW4gY2xhc3M9InByaWNlIj4kNDQuMDA8L3NwYW4+PC9zcGFuPgogICAgICAgIDwvc3Bhbj4KPC9zcGFuPgoKCjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdCBhY3Rpb25zIHByb2R1Y3QtaXRlbS1hY3Rpb25zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWNvbmRhcnktYWRkdG8tbGlua3MgYWN0aW9ucy1zZWNvbmRhcnkiIGRhdGEtcm9sZT0iYWRkLXRvLWxpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIKICAgICAgIGNsYXNzPSJhY3Rpb24gdG93aXNobGlzdCIKICAgICAgIHRpdGxlPSJBZGQmI3gyMDt0byYjeDIwO1dpc2gmI3gyMDtMaXN0IgogICAgICAgYXJpYS1sYWJlbD0iQWRkJiN4MjA7dG8mI3gyMDtXaXNoJiN4MjA7TGlzdCIKICAgICAgIGRhdGEtcG9zdD0neyJhY3Rpb24iOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC93aXNobGlzdFwvaW5kZXhcL2FkZFwvIiwiZGF0YSI6eyJwcm9kdWN0IjoiMjAxNiIsInVlbmMiOiJhSFIwY0RvdkwyMWhaMlZ1ZEc4dGRHVnpkQzVtYVc1dmJHOW5lUzVqYjIwdWJYa3ZZbkpsWVhSb1pTMWxZWE41TFhSaGJtc3VhSFJ0YkEsLCJ9fScKICAgICAgIGRhdGEtYWN0aW9uPSJhZGQtdG8td2lzaGxpc3QiCiAgICAgICByb2xlPSJidXR0b24iPgogICAgICAgIDxzcGFuPkFkZCB0byBXaXNoIExpc3Q8L3NwYW4+CiAgICA8L2E+CjxhIGhyZWY9IiMiCiAgIGNsYXNzPSJhY3Rpb24gdG9jb21wYXJlIgogICB0aXRsZT0iQWRkIHRvIENvbXBhcmUiCiAgIGFyaWEtbGFiZWw9IkFkZCB0byBDb21wYXJlIgogICBkYXRhLXBvc3Q9J3siYWN0aW9uIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvY2F0YWxvZ1wvcHJvZHVjdF9jb21wYXJlXC9hZGRcLyIsImRhdGEiOnsicHJvZHVjdCI6IjIwMTYiLCJ1ZW5jIjoiYUhSMGNEb3ZMMjFoWjJWdWRHOHRkR1Z6ZEM1bWFXNXZiRzluZVM1amIyMHViWGt2WW5KbFlYUm9aUzFsWVhONUxYUmhibXN1YUhSdGJBLCwifX0nCiAgIHJvbGU9ImJ1dHRvbiI+CiAgICA8c3Bhbj5BZGQgdG8gQ29tcGFyZTwvc3Bhbj4KPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJpdGVtIHByb2R1Y3QgcHJvZHVjdC1pdGVtIiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3QtaXRlbS1pbmZvICI+CiAgICAgICAgICAgICAgICAgICAgPCEtLSByZWxhdGVkX3Byb2R1Y3RzX2xpc3QtLT4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L2dhYnJpZWxsZS1taWNyby1zbGVldmUtdG9wLmh0bWwiIGNsYXNzPSJwcm9kdWN0IHBob3RvIHByb2R1Y3QtaXRlbS1waG90byI+CiAgICAgICAgICAgICAgICAgICAgICAgIAo8c3BhbiBjbGFzcz0icHJvZHVjdC1pbWFnZS1jb250YWluZXIiCiAgICAgIHN0eWxlPSJ3aWR0aDoxNTJweDsiPgogICAgPHNwYW4gY2xhc3M9InByb2R1Y3QtaW1hZ2Utd3JhcHBlciIKICAgICAgICAgIHN0eWxlPSJwYWRkaW5nLWJvdHRvbTogMTI1JTsiPgogICAgICAgIDxpbWcgY2xhc3M9InByb2R1Y3QtaW1hZ2UtcGhvdG8iCiAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvcHViL21lZGlhL2NhdGFsb2cvcHJvZHVjdC9jYWNoZS82YWYyZGE3OTAwN2JiZGU4M2FjNDI1YjVlMDlkZGNkNC93L3Mvd3MwMi1ncmVlbl9tYWluXzEuanBnIgogICAgICAgICAgICBtYXgtd2lkdGg9IjE1MiIKICAgICAgICAgICAgbWF4LWhlaWdodD0iMTkwIgogICAgICAgICAgICBhbHQ9IkdhYnJpZWxsZSBNaWNybyBTbGVldmUgVG9wIi8+PC9zcGFuPgo8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3QgZGV0YWlscyBwcm9kdWN0LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmcgY2xhc3M9InByb2R1Y3QgbmFtZSBwcm9kdWN0LWl0ZW0tbmFtZSI+PGEgY2xhc3M9InByb2R1Y3QtaXRlbS1saW5rIiB0aXRsZT0iR2FicmllbGxlIE1pY3JvIFNsZWV2ZSBUb3AiIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L2dhYnJpZWxsZS1taWNyby1zbGVldmUtdG9wLmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgR2FicmllbGxlIE1pY3JvIFNsZWV2ZSBUb3A8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Ryb25nPgoKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJpY2UtYm94IHByaWNlLWZpbmFsX3ByaWNlIiBkYXRhLXJvbGU9InByaWNlQm94IiBkYXRhLXByb2R1Y3QtaWQ9IjE0MTgiIGRhdGEtcHJpY2UtYm94PSJwcm9kdWN0LWlkLTE0MTgiPgo8c3BhbiBjbGFzcz0ibm9ybWFsLXByaWNlIj4KICAgIAoKPHNwYW4gY2xhc3M9InByaWNlLWNvbnRhaW5lciBwcmljZS1maW5hbF9wcmljZSB0YXggd2VlZSIKICAgICAgICA+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcmljZS1sYWJlbCI+QXMgbG93IGFzPC9zcGFuPgogICAgICAgIDxzcGFuICBpZD0icHJvZHVjdC1wcmljZS0xNDE4IiAgICAgICAgICAgICAgICBkYXRhLXByaWNlLWFtb3VudD0iMjgiCiAgICAgICAgZGF0YS1wcmljZS10eXBlPSJmaW5hbFByaWNlIgogICAgICAgIGNsYXNzPSJwcmljZS13cmFwcGVyICIKICAgID48c3BhbiBjbGFzcz0icHJpY2UiPiQyOC4wMDwvc3Bhbj48L3NwYW4+CiAgICAgICAgPC9zcGFuPgo8L3NwYW4+CgoKPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0IGFjdGlvbnMgcHJvZHVjdC1pdGVtLWFjdGlvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY29uZGFyeS1hZGR0by1saW5rcyBhY3Rpb25zLXNlY29uZGFyeSIgZGF0YS1yb2xlPSJhZGQtdG8tbGlua3MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjIgogICAgICAgY2xhc3M9ImFjdGlvbiB0b3dpc2hsaXN0IgogICAgICAgdGl0bGU9IkFkZCYjeDIwO3RvJiN4MjA7V2lzaCYjeDIwO0xpc3QiCiAgICAgICBhcmlhLWxhYmVsPSJBZGQmI3gyMDt0byYjeDIwO1dpc2gmI3gyMDtMaXN0IgogICAgICAgZGF0YS1wb3N0PSd7ImFjdGlvbiI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3dpc2hsaXN0XC9pbmRleFwvYWRkXC8iLCJkYXRhIjp7InByb2R1Y3QiOiIxNDE4IiwidWVuYyI6ImFIUjBjRG92TDIxaFoyVnVkRzh0ZEdWemRDNW1hVzV2Ykc5bmVTNWpiMjB1YlhrdlluSmxZWFJvWlMxbFlYTjVMWFJoYm1zdWFIUnRiQSwsIn19JwogICAgICAgZGF0YS1hY3Rpb249ImFkZC10by13aXNobGlzdCIKICAgICAgIHJvbGU9ImJ1dHRvbiI+CiAgICAgICAgPHNwYW4+QWRkIHRvIFdpc2ggTGlzdDwvc3Bhbj4KICAgIDwvYT4KPGEgaHJlZj0iIyIKICAgY2xhc3M9ImFjdGlvbiB0b2NvbXBhcmUiCiAgIHRpdGxlPSJBZGQgdG8gQ29tcGFyZSIKICAgYXJpYS1sYWJlbD0iQWRkIHRvIENvbXBhcmUiCiAgIGRhdGEtcG9zdD0neyJhY3Rpb24iOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9jYXRhbG9nXC9wcm9kdWN0X2NvbXBhcmVcL2FkZFwvIiwiZGF0YSI6eyJwcm9kdWN0IjoiMTQxOCIsInVlbmMiOiJhSFIwY0RvdkwyMWhaMlZ1ZEc4dGRHVnpkQzVtYVc1dmJHOW5lUzVqYjIwdWJYa3ZZbkpsWVhSb1pTMWxZWE41TFhSaGJtc3VhSFJ0YkEsLCJ9fScKICAgcm9sZT0iYnV0dG9uIj4KICAgIDxzcGFuPkFkZCB0byBDb21wYXJlPC9zcGFuPgo8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Iml0ZW0gcHJvZHVjdCBwcm9kdWN0LWl0ZW0iIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdC1pdGVtLWluZm8gIj4KICAgICAgICAgICAgICAgICAgICA8IS0tIHJlbGF0ZWRfcHJvZHVjdHNfbGlzdC0tPiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvYW5hLXJ1bm5pbmctc2hvcnQuaHRtbCIgY2xhc3M9InByb2R1Y3QgcGhvdG8gcHJvZHVjdC1pdGVtLXBob3RvIj4KICAgICAgICAgICAgICAgICAgICAgICAgCjxzcGFuIGNsYXNzPSJwcm9kdWN0LWltYWdlLWNvbnRhaW5lciIKICAgICAgc3R5bGU9IndpZHRoOjE1MnB4OyI+CiAgICA8c3BhbiBjbGFzcz0icHJvZHVjdC1pbWFnZS13cmFwcGVyIgogICAgICAgICAgc3R5bGU9InBhZGRpbmctYm90dG9tOiAxMjUlOyI+CiAgICAgICAgPGltZyBjbGFzcz0icHJvZHVjdC1pbWFnZS1waG90byIKICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9wdWIvbWVkaWEvY2F0YWxvZy9wcm9kdWN0L2NhY2hlLzZhZjJkYTc5MDA3YmJkZTgzYWM0MjViNWUwOWRkY2Q0L3cvcy93c2gxMC1ibGFja19tYWluXzEuanBnIgogICAgICAgICAgICBtYXgtd2lkdGg9IjE1MiIKICAgICAgICAgICAgbWF4LWhlaWdodD0iMTkwIgogICAgICAgICAgICBhbHQ9IkFuYSBSdW5uaW5nIFNob3J0Ii8+PC9zcGFuPgo8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2R1Y3QgZGV0YWlscyBwcm9kdWN0LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmcgY2xhc3M9InByb2R1Y3QgbmFtZSBwcm9kdWN0LWl0ZW0tbmFtZSI+PGEgY2xhc3M9InByb2R1Y3QtaXRlbS1saW5rIiB0aXRsZT0iQW5hIFJ1bm5pbmcgU2hvcnQiIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L2FuYS1ydW5uaW5nLXNob3J0Lmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgQW5hIFJ1bm5pbmcgU2hvcnQ8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Ryb25nPgoKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJpY2UtYm94IHByaWNlLWZpbmFsX3ByaWNlIiBkYXRhLXJvbGU9InByaWNlQm94IiBkYXRhLXByb2R1Y3QtaWQ9IjIwMjMiIGRhdGEtcHJpY2UtYm94PSJwcm9kdWN0LWlkLTIwMjMiPgo8c3BhbiBjbGFzcz0ibm9ybWFsLXByaWNlIj4KICAgIAoKPHNwYW4gY2xhc3M9InByaWNlLWNvbnRhaW5lciBwcmljZS1maW5hbF9wcmljZSB0YXggd2VlZSIKICAgICAgICA+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcmljZS1sYWJlbCI+QXMgbG93IGFzPC9zcGFuPgogICAgICAgIDxzcGFuICBpZD0icHJvZHVjdC1wcmljZS0yMDIzIiAgICAgICAgICAgICAgICBkYXRhLXByaWNlLWFtb3VudD0iNDAiCiAgICAgICAgZGF0YS1wcmljZS10eXBlPSJmaW5hbFByaWNlIgogICAgICAgIGNsYXNzPSJwcmljZS13cmFwcGVyICIKICAgID48c3BhbiBjbGFzcz0icHJpY2UiPiQ0MC4wMDwvc3Bhbj48L3NwYW4+CiAgICAgICAgPC9zcGFuPgo8L3NwYW4+CgoKPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0IGFjdGlvbnMgcHJvZHVjdC1pdGVtLWFjdGlvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY29uZGFyeS1hZGR0by1saW5rcyBhY3Rpb25zLXNlY29uZGFyeSIgZGF0YS1yb2xlPSJhZGQtdG8tbGlua3MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjIgogICAgICAgY2xhc3M9ImFjdGlvbiB0b3dpc2hsaXN0IgogICAgICAgdGl0bGU9IkFkZCYjeDIwO3RvJiN4MjA7V2lzaCYjeDIwO0xpc3QiCiAgICAgICBhcmlhLWxhYmVsPSJBZGQmI3gyMDt0byYjeDIwO1dpc2gmI3gyMDtMaXN0IgogICAgICAgZGF0YS1wb3N0PSd7ImFjdGlvbiI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL3dpc2hsaXN0XC9pbmRleFwvYWRkXC8iLCJkYXRhIjp7InByb2R1Y3QiOiIyMDIzIiwidWVuYyI6ImFIUjBjRG92TDIxaFoyVnVkRzh0ZEdWemRDNW1hVzV2Ykc5bmVTNWpiMjB1YlhrdlluSmxZWFJvWlMxbFlYTjVMWFJoYm1zdWFIUnRiQSwsIn19JwogICAgICAgZGF0YS1hY3Rpb249ImFkZC10by13aXNobGlzdCIKICAgICAgIHJvbGU9ImJ1dHRvbiI+CiAgICAgICAgPHNwYW4+QWRkIHRvIFdpc2ggTGlzdDwvc3Bhbj4KICAgIDwvYT4KPGEgaHJlZj0iIyIKICAgY2xhc3M9ImFjdGlvbiB0b2NvbXBhcmUiCiAgIHRpdGxlPSJBZGQgdG8gQ29tcGFyZSIKICAgYXJpYS1sYWJlbD0iQWRkIHRvIENvbXBhcmUiCiAgIGRhdGEtcG9zdD0neyJhY3Rpb24iOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9jYXRhbG9nXC9wcm9kdWN0X2NvbXBhcmVcL2FkZFwvIiwiZGF0YSI6eyJwcm9kdWN0IjoiMjAyMyIsInVlbmMiOiJhSFIwY0RvdkwyMWhaMlZ1ZEc4dGRHVnpkQzVtYVc1dmJHOW5lUzVqYjIwdWJYa3ZZbkpsWVhSb1pTMWxZWE41TFhSaGJtc3VhSFJ0YkEsLCJ9fScKICAgcm9sZT0iYnV0dG9uIj4KICAgIDxzcGFuPkFkZCB0byBDb21wYXJlPC9zcGFuPgo8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Iml0ZW0gcHJvZHVjdCBwcm9kdWN0LWl0ZW0iIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdC1pdGVtLWluZm8gIj4KICAgICAgICAgICAgICAgICAgICA8IS0tIHJlbGF0ZWRfcHJvZHVjdHNfbGlzdC0tPiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvanVsaWFuYS1zaG9ydC1zbGVldmUtdGVlLmh0bWwiIGNsYXNzPSJwcm9kdWN0IHBob3RvIHByb2R1Y3QtaXRlbS1waG90byI+CiAgICAgICAgICAgICAgICAgICAgICAgIAo8c3BhbiBjbGFzcz0icHJvZHVjdC1pbWFnZS1jb250YWluZXIiCiAgICAgIHN0eWxlPSJ3aWR0aDoxNTJweDsiPgogICAgPHNwYW4gY2xhc3M9InByb2R1Y3QtaW1hZ2Utd3JhcHBlciIKICAgICAgICAgIHN0eWxlPSJwYWRkaW5nLWJvdHRvbTogMTI1JTsiPgogICAgICAgIDxpbWcgY2xhc3M9InByb2R1Y3QtaW1hZ2UtcGhvdG8iCiAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvcHViL21lZGlhL2NhdGFsb2cvcHJvZHVjdC9jYWNoZS82YWYyZGE3OTAwN2JiZGU4M2FjNDI1YjVlMDlkZGNkNC93L3Mvd3MwNy1ibGFja19tYWluXzEuanBnIgogICAgICAgICAgICBtYXgtd2lkdGg9IjE1MiIKICAgICAgICAgICAgbWF4LWhlaWdodD0iMTkwIgogICAgICAgICAgICBhbHQ9Ikp1bGlhbmEgU2hvcnQtU2xlZXZlIFRlZSIvPjwvc3Bhbj4KPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9kdWN0IGRldGFpbHMgcHJvZHVjdC1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzPSJwcm9kdWN0IG5hbWUgcHJvZHVjdC1pdGVtLW5hbWUiPjxhIGNsYXNzPSJwcm9kdWN0LWl0ZW0tbGluayIgdGl0bGU9Ikp1bGlhbmEgU2hvcnQtU2xlZXZlIFRlZSIgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvanVsaWFuYS1zaG9ydC1zbGVldmUtdGVlLmh0bWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgSnVsaWFuYSBTaG9ydC1TbGVldmUgVGVlPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L3N0cm9uZz4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByaWNlLWJveCBwcmljZS1maW5hbF9wcmljZSIgZGF0YS1yb2xlPSJwcmljZUJveCIgZGF0YS1wcm9kdWN0LWlkPSIxNDgyIiBkYXRhLXByaWNlLWJveD0icHJvZHVjdC1pZC0xNDgyIj4KPHNwYW4gY2xhc3M9Im5vcm1hbC1wcmljZSI+CiAgICAKCjxzcGFuIGNsYXNzPSJwcmljZS1jb250YWluZXIgcHJpY2UtZmluYWxfcHJpY2UgdGF4IHdlZWUiCiAgICAgICAgPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJpY2UtbGFiZWwiPkFzIGxvdyBhczwvc3Bhbj4KICAgICAgICA8c3BhbiAgaWQ9InByb2R1Y3QtcHJpY2UtMTQ4MiIgICAgICAgICAgICAgICAgZGF0YS1wcmljZS1hbW91bnQ9IjQyIgogICAgICAgIGRhdGEtcHJpY2UtdHlwZT0iZmluYWxQcmljZSIKICAgICAgICBjbGFzcz0icHJpY2Utd3JhcHBlciAiCiAgICA+PHNwYW4gY2xhc3M9InByaWNlIj4kNDIuMDA8L3NwYW4+PC9zcGFuPgogICAgICAgIDwvc3Bhbj4KPC9zcGFuPgoKCjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZHVjdCBhY3Rpb25zIHByb2R1Y3QtaXRlbS1hY3Rpb25zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWNvbmRhcnktYWRkdG8tbGlua3MgYWN0aW9ucy1zZWNvbmRhcnkiIGRhdGEtcm9sZT0iYWRkLXRvLWxpbmtzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIKICAgICAgIGNsYXNzPSJhY3Rpb24gdG93aXNobGlzdCIKICAgICAgIHRpdGxlPSJBZGQmI3gyMDt0byYjeDIwO1dpc2gmI3gyMDtMaXN0IgogICAgICAgYXJpYS1sYWJlbD0iQWRkJiN4MjA7dG8mI3gyMDtXaXNoJiN4MjA7TGlzdCIKICAgICAgIGRhdGEtcG9zdD0neyJhY3Rpb24iOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC93aXNobGlzdFwvaW5kZXhcL2FkZFwvIiwiZGF0YSI6eyJwcm9kdWN0IjoiMTQ4MiIsInVlbmMiOiJhSFIwY0RvdkwyMWhaMlZ1ZEc4dGRHVnpkQzVtYVc1dmJHOW5lUzVqYjIwdWJYa3ZZbkpsWVhSb1pTMWxZWE41TFhSaGJtc3VhSFJ0YkEsLCJ9fScKICAgICAgIGRhdGEtYWN0aW9uPSJhZGQtdG8td2lzaGxpc3QiCiAgICAgICByb2xlPSJidXR0b24iPgogICAgICAgIDxzcGFuPkFkZCB0byBXaXNoIExpc3Q8L3NwYW4+CiAgICA8L2E+CjxhIGhyZWY9IiMiCiAgIGNsYXNzPSJhY3Rpb24gdG9jb21wYXJlIgogICB0aXRsZT0iQWRkIHRvIENvbXBhcmUiCiAgIGFyaWEtbGFiZWw9IkFkZCB0byBDb21wYXJlIgogICBkYXRhLXBvc3Q9J3siYWN0aW9uIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvY2F0YWxvZ1wvcHJvZHVjdF9jb21wYXJlXC9hZGRcLyIsImRhdGEiOnsicHJvZHVjdCI6IjE0ODIiLCJ1ZW5jIjoiYUhSMGNEb3ZMMjFoWjJWdWRHOHRkR1Z6ZEM1bWFXNXZiRzluZVM1amIyMHViWGt2WW5KbFlYUm9aUzFsWVhONUxYUmhibXN1YUhSdGJBLCwifX0nCiAgIHJvbGU9ImJ1dHRvbiI+CiAgICA8c3Bhbj5BZGQgdG8gQ29tcGFyZTwvc3Bhbj4KPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvb2w+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9kaXY+CgoKPC9kaXY+PC9kaXY+PC9tYWluPjxmb290ZXIgY2xhc3M9InBhZ2UtZm9vdGVyIj48ZGl2IGNsYXNzPSJmb290ZXIgY29udGVudCI+PGRpdiBjbGFzcz0iYmxvY2sgbmV3c2xldHRlciI+CiAgICA8ZGl2IGNsYXNzPSJ0aXRsZSI+PHN0cm9uZz5OZXdzbGV0dGVyPC9zdHJvbmc+PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJjb250ZW50Ij4KICAgICAgICA8Zm9ybSBjbGFzcz0iZm9ybSBzdWJzY3JpYmUiCiAgICAgICAgICAgIG5vdmFsaWRhdGUKICAgICAgICAgICAgYWN0aW9uPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9uZXdzbGV0dGVyL3N1YnNjcmliZXIvbmV3LyIKICAgICAgICAgICAgbWV0aG9kPSJwb3N0IgogICAgICAgICAgICBkYXRhLW1hZ2UtaW5pdD0neyJ2YWxpZGF0aW9uIjogeyJlcnJvckNsYXNzIjogIm1hZ2UtZXJyb3IifX0nCiAgICAgICAgICAgIGlkPSJuZXdzbGV0dGVyLXZhbGlkYXRlLWRldGFpbCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZpZWxkIG5ld3NsZXR0ZXIiPgogICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJsYWJlbCIgZm9yPSJuZXdzbGV0dGVyIj48c3Bhbj5TaWduIFVwIGZvciBPdXIgTmV3c2xldHRlcjo8L3NwYW4+PC9sYWJlbD4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRyb2wiPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCBuYW1lPSJlbWFpbCIgdHlwZT0iZW1haWwiIGlkPSJuZXdzbGV0dGVyIgogICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iRW50ZXIgeW91ciBlbWFpbCBhZGRyZXNzIgogICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLW1hZ2UtaW5pdD0neyJtYWdlL3RyaW0taW5wdXQiOnt9fScKICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS12YWxpZGF0ZT0ie3JlcXVpcmVkOnRydWUsICd2YWxpZGF0ZS1lbWFpbCc6dHJ1ZX0iLz4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWN0aW9ucyI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJhY3Rpb24gc3Vic2NyaWJlIHByaW1hcnkiIHRpdGxlPSJTdWJzY3JpYmUiIHR5cGU9InN1Ym1pdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4+U3Vic2NyaWJlPC9zcGFuPgogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZm9ybT4KICAgIDwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0ibGlua3MiPjxkaXYgY2xhc3M9IndpZGdldCBibG9jayBibG9jay1zdGF0aWMtYmxvY2siPgogICAgPHVsIGNsYXNzPSJmb290ZXIgbGlua3MiPgogICAgPGxpIGNsYXNzPSJuYXYgaXRlbSI+PGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvYWJvdXQtdXMvIj5BYm91dCB1czwvYT48L2xpPgogICAgPGxpIGNsYXNzPSJuYXYgaXRlbSI+PGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvY3VzdG9tZXItc2VydmljZS8iPkN1c3RvbWVyIFNlcnZpY2U8L2E+PC9saT4KPC91bD4KPC9kaXY+CjwvZGl2Pjx1bCBjbGFzcz0iZm9vdGVyIGxpbmtzIj48bGkgY2xhc3M9Im5hdiBpdGVtIj48YSBocmVmPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9zZWFyY2gvdGVybS9wb3B1bGFyLyI+U2VhcmNoIFRlcm1zPC9hPjwvbGk+PGxpIGNsYXNzPSJuYXYgaXRlbSI+PGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvcHJpdmFjeS1wb2xpY3ktY29va2llLXJlc3RyaWN0aW9uLW1vZGUvIj5Qcml2YWN5IGFuZCBDb29raWUgUG9saWN5PC9hPjwvbGk+PGxpIGNsYXNzPSJuYXYgaXRlbSI+PGEgaHJlZj0iaHR0cDovL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXkvY2F0YWxvZ3NlYXJjaC9hZHZhbmNlZC8iIGRhdGEtYWN0aW9uPSJhZHZhbmNlZC1zZWFyY2giPkFkdmFuY2VkIFNlYXJjaDwvYT48L2xpPjxsaSBjbGFzcz0ibmF2IGl0ZW0iPjxhIGhyZWY9Imh0dHA6Ly9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15L3NhbGVzL2d1ZXN0L2Zvcm0vIj5PcmRlcnMgYW5kIFJldHVybnM8L2E+PC9saT48bGkgY2xhc3M9Im5hdiBpdGVtIj48YSBocmVmPSJodHRwOi8vbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teS9jb250YWN0LyI+Q29udGFjdCBVczwvYT48L2xpPjwvdWw+PC9kaXY+PC9mb290ZXI+PHNjcmlwdCB0eXBlPSJ0ZXh0L3gtbWFnZW50by1pbml0Ij4KICAgICAgICB7CiAgICAgICAgICAgICIqIjogewogICAgICAgICAgICAgICAgIk1hZ2VudG9fVWkvanMvY29yZS9hcHAiOiB7CiAgICAgICAgICAgICAgICAgICAgImNvbXBvbmVudHMiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJzdG9yYWdlLW1hbmFnZXIiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiY29tcG9uZW50IjogIk1hZ2VudG9fQ2F0YWxvZy9qcy9zdG9yYWdlLW1hbmFnZXIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImFwcGVuZFRvIjogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAic3RvcmFnZXNDb25maWd1cmF0aW9uIiA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyJyZWNlbnRseV92aWV3ZWRfcHJvZHVjdCI6eyJyZXF1ZXN0Q29uZmlnIjp7InN5bmNVcmwiOiJodHRwOlwvXC9tYWdlbnRvLXRlc3QuZmlub2xvZ3kuY29tLm15XC9jYXRhbG9nXC9wcm9kdWN0XC9mcm9udGVuZF9hY3Rpb25fc3luY2hyb25pemVcLyJ9LCJsaWZldGltZSI6IjEwMDAiLCJhbGxvd1RvU2VuZFJlcXVlc3QiOm51bGx9LCJyZWNlbnRseV9jb21wYXJlZF9wcm9kdWN0Ijp7InJlcXVlc3RDb25maWciOnsic3luY1VybCI6Imh0dHA6XC9cL21hZ2VudG8tdGVzdC5maW5vbG9neS5jb20ubXlcL2NhdGFsb2dcL3Byb2R1Y3RcL2Zyb250ZW5kX2FjdGlvbl9zeW5jaHJvbml6ZVwvIn0sImxpZmV0aW1lIjoiMTAwMCIsImFsbG93VG9TZW5kUmVxdWVzdCI6bnVsbH0sInByb2R1Y3RfZGF0YV9zdG9yYWdlIjp7InVwZGF0ZVJlcXVlc3RDb25maWciOnsidXJsIjoiaHR0cDpcL1wvbWFnZW50by10ZXN0LmZpbm9sb2d5LmNvbS5teVwvcmVzdFwvZGVmYXVsdFwvVjFcL3Byb2R1Y3RzLXJlbmRlci1pbmZvIn0sImFsbG93VG9TZW5kUmVxdWVzdCI6bnVsbH19ICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KPC9zY3JpcHQ+Cgo8c21hbGwgY2xhc3M9ImNvcHlyaWdodCI+CiAgICA8c3Bhbj5Db3B5cmlnaHQgwqkgMjAxMy1wcmVzZW50IE1hZ2VudG8sIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC48L3NwYW4+Cjwvc21hbGw+CjwvZGl2PiAgICA8L2JvZHk+CjwvaHRtbD4K
    http_version: 
  recorded_at: Wed, 08 May 2019 12:40:26 GMT
recorded_with: VCR 4.0.0
